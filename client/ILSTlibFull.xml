<package>
  <classdef name="ScreenMode" enumeration="true">
    <shortdesc>The screen mode.</shortdesc>
    <elements type="class">
      <property name="MULTIWINDOW" rwaccess="readonly">
        <shortdesc>Display multiple windows.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="DESKTOP" rwaccess="readonly">
        <shortdesc>Full screen with menu bar.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="FULLSCREEN" rwaccess="readonly">
        <shortdesc>Full screen without menu bar.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorType" enumeration="true">
    <shortdesc>The color model.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="CMYK" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="GRAY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="RGB" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="SPOT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="PATTERN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="GRADIENT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentColorSpace" enumeration="true">
    <shortdesc>The color spaces available for documents.</shortdesc>
    <elements type="class">
      <property name="RGB" rwaccess="readonly">
        <shortdesc>RGB document color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CMYK" rwaccess="readonly">
        <shortdesc>CMYK document color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentPresetType" enumeration="true">
    <shortdesc>The preset types available for new documents.</shortdesc>
    <elements type="class">
      <property name="Print" rwaccess="readonly">
        <shortdesc>The default Print document preset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Web" rwaccess="readonly">
        <shortdesc>The default Web document preset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="Mobile" rwaccess="readonly">
        <shortdesc>The default Mobile document preset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="Video" rwaccess="readonly">
        <shortdesc>The default Video and Film document preset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="BasicCMYK" rwaccess="readonly">
        <shortdesc>The default CMYK document preset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="BasicRGB" rwaccess="readonly">
        <shortdesc>The default RGB document preset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentRasterResolution" enumeration="true">
    <shortdesc>The raster resolutions available when creating a new document.</shortdesc>
    <elements type="class">
      <property name="ScreenResolution" rwaccess="readonly">
        <shortdesc>Low raster resolution, 72 PPI.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="MediumResolution" rwaccess="readonly">
        <shortdesc>Medium raster resolution, 150 PPI.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="HighResolution" rwaccess="readonly">
        <shortdesc>High raster resolution, 300 PPI.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentTransparencyGrid" enumeration="true">
    <shortdesc>The transparency grid for the new document, in video presets.</shortdesc>
    <elements type="class">
      <property name="TransparencyGridNone" rwaccess="readonly">
        <shortdesc>No grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TransparencyGridLight" rwaccess="readonly">
        <shortdesc>Light grid colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TransparencyGridMedium" rwaccess="readonly">
        <shortdesc>Medium grid colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TransparencyGridDark" rwaccess="readonly">
        <shortdesc>Dark color grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="TransparencyGridRed" rwaccess="readonly">
        <shortdesc>Red grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="TransparencyGridOrange" rwaccess="readonly">
        <shortdesc>Orange grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="TransparencyGridGreen" rwaccess="readonly">
        <shortdesc>Green grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="TransparencyGridBlue" rwaccess="readonly">
        <shortdesc>Blue grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="TransparencyGridPurple" rwaccess="readonly">
        <shortdesc>Purple grids.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentPreviewMode" enumeration="true">
    <shortdesc>The preview modes available when creating a new document.</shortdesc>
    <elements type="class">
      <property name="DefaultPreview" rwaccess="readonly">
        <shortdesc>Default Preview mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PixelPreview" rwaccess="readonly">
        <shortdesc>Pixel Preview mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="OverprintPreview" rwaccess="readonly">
        <shortdesc>Overprint Preview Mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentArtboardLayout" enumeration="true">
    <shortdesc>The layout of artboards in document.</shortdesc>
    <elements type="class">
      <property name="GridByRow" rwaccess="readonly">
        <shortdesc>Arrange artboards in Grid by Row pattern.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="GridByCol" rwaccess="readonly">
        <shortdesc>Arrange artboards in Grid by Column pattern.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="Row" rwaccess="readonly">
        <shortdesc>Arrange artboards in a single row.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="Column" rwaccess="readonly">
        <shortdesc>Arrange artboards in a single column.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="RLGridByRow" rwaccess="readonly">
        <shortdesc>Arrange artboards in Grid by Row pattern from right-to-left.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="RLGridByCol" rwaccess="readonly">
        <shortdesc>Arrange artboards in Grid by Column pattern from right-to-left.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="RLRow" rwaccess="readonly">
        <shortdesc>Arrange artboards in a single row from right-to-left.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ImageColorSpace" enumeration="true">
    <shortdesc>The color space.</shortdesc>
    <elements type="class">
      <property name="GrayScale" rwaccess="readonly">
        <shortdesc>Gray color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RGB" rwaccess="readonly">
        <shortdesc>RGB color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="CMYK" rwaccess="readonly">
        <shortdesc>CMYK color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="LAB" rwaccess="readonly">
        <shortdesc>LAB color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="Separation" rwaccess="readonly">
        <shortdesc>Separation color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="DeviceN" rwaccess="readonly">
        <shortdesc>DeviceN color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="Indexed" rwaccess="readonly">
        <shortdesc>Indexed color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="StrokeCap" enumeration="true">
    <shortdesc>The stroke cap.</shortdesc>
    <elements type="class">
      <property name="BUTTENDCAP" rwaccess="readonly">
        <shortdesc>Butted cap.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ROUNDENDCAP" rwaccess="readonly">
        <shortdesc>Rounded cap.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PROJECTINGENDCAP" rwaccess="readonly">
        <shortdesc>Projecting cap.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="StrokeJoin" enumeration="true">
    <shortdesc>The stroke joint.</shortdesc>
    <elements type="class">
      <property name="MITERENDJOIN" rwaccess="readonly">
        <shortdesc>Mitered joints.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ROUNDENDJOIN" rwaccess="readonly">
        <shortdesc>Rounded joints.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BEVELENDJOIN" rwaccess="readonly">
        <shortdesc>Beveled joints.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PathPointSelection" enumeration="true">
    <shortdesc>The path point selection state.</shortdesc>
    <elements type="class">
      <property name="NOSELECTION" rwaccess="readonly">
        <shortdesc>Path point not selected.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ANCHORPOINT" rwaccess="readonly">
        <shortdesc>Anchor point selected.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="LEFTDIRECTION" rwaccess="readonly">
        <shortdesc>Left direction point selected.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="RIGHTDIRECTION" rwaccess="readonly">
        <shortdesc>Right direction point selected.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="LEFTRIGHTPOINT" rwaccess="readonly">
        <shortdesc>Left and right direction points selected.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PointType" enumeration="true">
    <shortdesc>The path point type: smooth/corner.</shortdesc>
    <elements type="class">
      <property name="SMOOTH" rwaccess="readonly">
        <shortdesc>Smooth path point.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CORNER" rwaccess="readonly">
        <shortdesc>Corner point.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TextType" enumeration="true">
    <shortdesc>The type of text art.</shortdesc>
    <elements type="class">
      <property name="POINTTEXT" rwaccess="readonly">
        <shortdesc>Text from a point.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="AREATEXT" rwaccess="readonly">
        <shortdesc>Text within an area.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PATHTEXT" rwaccess="readonly">
        <shortdesc>Text on a path.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TextAntialias" enumeration="true">
    <shortdesc>The type of text antialiasing.</shortdesc>
    <elements type="class">
      <property name="NONE" rwaccess="readonly">
        <shortdesc>Text from a point.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SHARP" rwaccess="readonly">
        <shortdesc>Text within an area.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="CRISP" rwaccess="readonly">
        <shortdesc>Text on a path.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="STRONG" rwaccess="readonly">
        <shortdesc>Text on a path.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="GradientType" enumeration="true">
    <shortdesc>The gradient type.</shortdesc>
    <elements type="class">
      <property name="LINEAR" rwaccess="readonly">
        <shortdesc>Linear gradient.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RADIAL" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TextOrientation" enumeration="true">
    <shortdesc>The orientation.</shortdesc>
    <elements type="class">
      <property name="HORIZONTAL" rwaccess="readonly">
        <shortdesc>Horizontal orientation.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="VERTICAL" rwaccess="readonly">
        <shortdesc>Vertical orientation.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="CropOptions" enumeration="true">
    <shortdesc>The crop style.</shortdesc>
    <elements type="class">
      <property name="Standard" rwaccess="readonly">
        <shortdesc>Standard crop style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Japanese" rwaccess="readonly">
        <shortdesc>Japanese crop style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RasterLinkState" enumeration="true">
    <shortdesc>The raster link state.</shortdesc>
    <elements type="class">
      <property name="NODATA" rwaccess="readonly">
        <shortdesc>Image data is not set.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="DATAFROMFILE" rwaccess="readonly">
        <shortdesc>Image data is from the linked file.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="DATAMODIFIED" rwaccess="readonly">
        <shortdesc>Image data has been modified.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TabStopAlignment" enumeration="true">
    <shortdesc>The tab alignment.</shortdesc>
    <elements type="class">
      <property name="Left" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="Center" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Right" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="Decimal" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Justification" enumeration="true">
    <shortdesc>The paragraph alignment.</shortdesc>
    <elements type="class">
      <property name="LEFT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="RIGHT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CENTER" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="FULLJUSTIFYLASTLINELEFT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="FULLJUSTIFYLASTLINERIGHT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="FULLJUSTIFYLASTLINECENTER" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="FULLJUSTIFY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Transformation" enumeration="true">
    <shortdesc>The transformation type.</shortdesc>
    <elements type="class">
      <property name="DOCUMENTORIGIN" rwaccess="readonly">
        <shortdesc>Transform relative to the illustration's page origin.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TOPLEFT" rwaccess="readonly">
        <shortdesc>Transform relative to the object's top left corner.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="LEFT" rwaccess="readonly">
        <shortdesc>Transform relative to the object's left edge.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="BOTTOMLEFT" rwaccess="readonly">
        <shortdesc>Transform relative to the object's bottom left corner.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="TOP" rwaccess="readonly">
        <shortdesc>Transform relative to the object's top edge.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="CENTER" rwaccess="readonly">
        <shortdesc>Transform relative to the object's center.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="BOTTOM" rwaccess="readonly">
        <shortdesc>Transform relative to the object's bottom edge.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="TOPRIGHT" rwaccess="readonly">
        <shortdesc>Transform relative to the object's top right corner.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="RIGHT" rwaccess="readonly">
        <shortdesc>Transform relative to the object's right edge.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="BOTTOMRIGHT" rwaccess="readonly">
        <shortdesc>Transform relative to the object's bottom right corner.</shortdesc>
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="LibraryType" enumeration="true">
    <shortdesc>Illustrator library types.</shortdesc>
    <elements type="class">
      <property name="ILLUSTRATORARTWORK" rwaccess="readonly">
        <shortdesc>Illustrator artwork.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SWATCHES" rwaccess="readonly">
        <shortdesc>Illustrator swatches library.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BRUSHES" rwaccess="readonly">
        <shortdesc>Illustrator brushes library.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="GRAPHICSTYLES" rwaccess="readonly">
        <shortdesc>Illustrator graphic styles library.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="SYMBOLS" rwaccess="readonly">
        <shortdesc>Illustrator symbols library.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentType" enumeration="true">
    <shortdesc>Savable document types.</shortdesc>
    <elements type="class">
      <property name="ILLUSTRATOR" rwaccess="readonly">
        <shortdesc>Illustrator file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="EPS" rwaccess="readonly">
        <shortdesc>EPS file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PDF" rwaccess="readonly">
        <shortdesc>Acrobat PDF file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="FXG" rwaccess="readonly">
        <shortdesc>FXG file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensScaleType" enumeration="true">
    <shortdesc>Export for screens scale type.</shortdesc>
    <elements type="class">
      <property name="SCALEBYFACTOR" rwaccess="readonly">
        <shortdesc>Scale artwork by factors like 1x, 2x, 3x and so on, where 1x means 72 ppi.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SCALEBYWIDTH" rwaccess="readonly">
        <shortdesc>Scale artwork by specifying artwork width in pixels like 100px, 124px etc. Height of the artwork is adjusted automatically to maintain the aspect ratio.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SCALEBYHEIGHT" rwaccess="readonly">
        <shortdesc>Scale artwork by specifying artwork height in pixels like 100px, 124px etc. Width of the artwork is adjusted automatically to maintain the aspect ratio.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SCALEBYRESOLUTION" rwaccess="readonly">
        <shortdesc>Scale artwork by specifying resolution in ppi like 72 ppi, 100 ppi, 144 ppi etc.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensType" enumeration="true">
    <shortdesc>Export for screens type.</shortdesc>
    <elements type="class">
      <property name="SE_JPEG100" rwaccess="readonly">
        <shortdesc>Export file in JPEG (100% quality) format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SE_JPEG80" rwaccess="readonly">
        <shortdesc>Export file in JPEG (80% quality) format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SE_JPEG50" rwaccess="readonly">
        <shortdesc>Export file in JPEG (50% quality) format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="SE_JPEG20" rwaccess="readonly">
        <shortdesc>Export file in JPEG (20% quality) format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="SE_SVG" rwaccess="readonly">
        <shortdesc>Export file in SVG format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="SE_PNG8" rwaccess="readonly">
        <shortdesc>Export file in PNG 8-bit format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="SE_PNG24" rwaccess="readonly">
        <shortdesc>Export file in PNG 24-bit format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="SE_PDF" rwaccess="readonly">
        <shortdesc>Export file in Acrobat PDF format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportType" enumeration="true">
    <shortdesc>Export file types.</shortdesc>
    <elements type="class">
      <property name="JPEG" rwaccess="readonly">
        <shortdesc>JPEG export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PHOTOSHOP" rwaccess="readonly">
        <shortdesc>Photoshop export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SVG" rwaccess="readonly">
        <shortdesc>SVG export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="PNG8" rwaccess="readonly">
        <shortdesc>PNG 8-bit export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="PNG24" rwaccess="readonly">
        <shortdesc>PNG 24-bit export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="GIF" rwaccess="readonly">
        <shortdesc>GIF export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="FLASH" rwaccess="readonly">
        <shortdesc>Flash export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="AUTOCAD" rwaccess="readonly">
        <shortdesc>AutoCAD export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="TIFF" rwaccess="readonly">
        <shortdesc>TIFF export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="WOSVG" rwaccess="readonly">
        <shortdesc>Web Optimized SVG export file format.</shortdesc>
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorReductionMethod" enumeration="true">
    <shortdesc>Method used to reduce color for PNG8 and GIF export formats.</shortdesc>
    <elements type="class">
      <property name="SELECTIVE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x536C7476</value>
        </datatype>
      </property>
      <property name="ADAPTIVE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x41647074</value>
        </datatype>
      </property>
      <property name="PERCEPTUAL" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x50726370</value>
        </datatype>
      </property>
      <property name="WEB" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x57656220</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorDitherMethod" enumeration="true">
    <shortdesc>Method used to dither colors for PNG8 and GIF export formats.</shortdesc>
    <elements type="class">
      <property name="NOREDUCTION" rwaccess="readonly">
        <shortdesc>No dithering.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0x4E6F6E65</value>
        </datatype>
      </property>
      <property name="DIFFUSION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x4466736E</value>
        </datatype>
      </property>
      <property name="PATTERNDITHER" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x5074726E</value>
        </datatype>
      </property>
      <property name="NOISE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0x424E6F69</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Compatibility" enumeration="true">
    <shortdesc>The compatibility type.</shortdesc>
    <elements type="class">
      <property name="ILLUSTRATOR3" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="JAPANESEVERSION3" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR8" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR9" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR10" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR11" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>11</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR12" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>12</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR13" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>13</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR14" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>14</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR15" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>15</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR16" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>16</value>
        </datatype>
      </property>
      <property name="ILLUSTRATOR17" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>17</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFXStandard" enumeration="true">
    <shortdesc>This provides a means for matching the color characteristics of a PDF document.</shortdesc>
    <elements type="class">
      <property name="PDFXNONE" rwaccess="readonly">
        <shortdesc>The user isn't complying with any PDF standard.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PDFX1A2001" rwaccess="readonly">
        <shortdesc>Supports only a CMYK and spot color workflow, targeted to a specific output device.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PDFX1A2003" rwaccess="readonly">
        <shortdesc>Supports only a CMYK and spot color workflow, targeted to a specific output device.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="PDFX32001" rwaccess="readonly">
        <shortdesc>Supports a color-managed workflow, allowing the use of device-independent color in addition to CMYK and spot colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="PDFX32002" rwaccess="readonly">
        <shortdesc>Supports a color-managed workflow, allowing the use of device-independent color in addition to CMYK and spot colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="PDFX32003" rwaccess="readonly">
        <shortdesc>Supports a color-managed workflow, allowing the use of device-independent color in addition to CMYK and spot colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="PDFX42007" rwaccess="readonly">
        <shortdesc>Supports a color-managed workflow, allowing the use of device-independent color in addition to CMYK and spot colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFCompatibility" enumeration="true">
    <shortdesc>The PDF compatibility type.</shortdesc>
    <elements type="class">
      <property name="ACROBAT4" rwaccess="readonly">
        <shortdesc>Acrobat version 4.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="ACROBAT5" rwaccess="readonly">
        <shortdesc>Acrobat version 5.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="ACROBAT6" rwaccess="readonly">
        <shortdesc>Acrobat version 6.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="ACROBAT7" rwaccess="readonly">
        <shortdesc>Acrobat version 7.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="ACROBAT8" rwaccess="readonly">
        <shortdesc>Acrobat version 8.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PhotoshopCompatibility" enumeration="true">
    <shortdesc>The Photoshop compatibility type.</shortdesc>
    <elements type="class">
      <property name="PHOTOSHOP8" rwaccess="readonly">
        <shortdesc>Photoshop version 8.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PHOTOSHOP6" rwaccess="readonly">
        <shortdesc>Photoshop version 6.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="CompressionQuality" enumeration="true">
    <shortdesc>The compression type.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>Automatic compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="JPEGMINIMUM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="JPEGLOW" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="JPEGMEDIUM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="JPEGHIGH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="JPEGMAXIMUM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="ZIP4BIT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="ZIP8BIT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEGMINIMUM" rwaccess="readonly">
        <shortdesc>Automatically choose between JPEG and ZIP performing minimum compression depending on images.</shortdesc>
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEGLOW" rwaccess="readonly">
        <shortdesc>Automatic JPEG compression low.</shortdesc>
        <datatype>
          <type>int</type>
          <value>11</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEGMEDIUM" rwaccess="readonly">
        <shortdesc>Automatic JPEG compression medium.</shortdesc>
        <datatype>
          <type>int</type>
          <value>12</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEGHIGH" rwaccess="readonly">
        <shortdesc>Automatic JPEG compression high.</shortdesc>
        <datatype>
          <type>int</type>
          <value>13</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEGMAXIMUM" rwaccess="readonly">
        <shortdesc>Automatic JPEG compression maximum.</shortdesc>
        <datatype>
          <type>int</type>
          <value>14</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEG2000MINIMUM" rwaccess="readonly">
        <shortdesc>Automatic JPEG2000 compression minimum.</shortdesc>
        <datatype>
          <type>int</type>
          <value>15</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEG2000LOW" rwaccess="readonly">
        <shortdesc>Automatic JPEG2000 compression low.</shortdesc>
        <datatype>
          <type>int</type>
          <value>16</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEG2000MEDIUM" rwaccess="readonly">
        <shortdesc>Automatic JPEG2000 compression medium.</shortdesc>
        <datatype>
          <type>int</type>
          <value>17</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEG2000HIGH" rwaccess="readonly">
        <shortdesc>Automatic JPEG2000 compression high.</shortdesc>
        <datatype>
          <type>int</type>
          <value>18</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEG2000MAXIMUM" rwaccess="readonly">
        <shortdesc>Automatic JPEG2000 compression maximum.</shortdesc>
        <datatype>
          <type>int</type>
          <value>19</value>
        </datatype>
      </property>
      <property name="AUTOMATICJPEG2000LOSSLESS" rwaccess="readonly">
        <shortdesc>Automatic JPEG2000 compression lossless.</shortdesc>
        <datatype>
          <type>int</type>
          <value>20</value>
        </datatype>
      </property>
      <property name="JPEG2000MINIMUM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>21</value>
        </datatype>
      </property>
      <property name="JPEG2000LOW" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>22</value>
        </datatype>
      </property>
      <property name="JPEG2000MEDIUM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>23</value>
        </datatype>
      </property>
      <property name="JPEG2000HIGH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>24</value>
        </datatype>
      </property>
      <property name="JPEG2000MAXIMUM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>25</value>
        </datatype>
      </property>
      <property name="JPEG2000LOSSLESS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>26</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorConversion" enumeration="true">
    <shortdesc>PDF color conversion policy.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>Preserves color data as is.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="COLORCONVERSIONTODEST" rwaccess="readonly">
        <shortdesc>Converts all colors to the profile selected for Destination.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="COLORCONVERSIONREPURPOSE" rwaccess="readonly">
        <shortdesc>Preserves color numbers for untagged content in the same color space as the destination profile. Not available with CMS off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorDestination" enumeration="true">
    <shortdesc>PDF destination profile.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>N/A.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="COLORDESTINATIONDOCCMYK" rwaccess="readonly">
        <shortdesc>Converts all colors to the profile selected for Destination.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="COLORDESTINATIONWORKINGCMYK" rwaccess="readonly">
        <shortdesc>Preserves color numbers for untagged content in the same color space as the destination profile. Not available with CMS off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="COLORDESTINATIONDOCRGB" rwaccess="readonly">
        <shortdesc>Preserves color numbers for untagged content in the same color space as the destination profile. Not available with CMS off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="COLORDESTINATIONWORKINGRGB" rwaccess="readonly">
        <shortdesc>Preserves color numbers for untagged content in the same color space as the destination profile. Not available with CMS off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="COLORDESTINATIONPROFILE" rwaccess="readonly">
        <shortdesc>Preserves color numbers for untagged content in the same color space as the destination profile. Not available with CMS off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorProfile" enumeration="true">
    <shortdesc>PDF ICC profile inclusion.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>All profiles removed (embedProfile == false)</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="INCLUDEALLPROFILE" rwaccess="readonly">
        <shortdesc>Everything gets tagged (embedProfile == true)</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="LEAVEPROFILEUNCHANGED" rwaccess="readonly">
        <shortdesc>Leave tagged items tagged, untagged items untagged.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="INCLUDERGBPROFILE" rwaccess="readonly">
        <shortdesc>Tag all RGB, leave CMYK unchanged.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="INCLUDEDESTPROFILE" rwaccess="readonly">
        <shortdesc>Everything ends up tagged with the destination profile.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="MonochromeCompression" enumeration="true">
    <shortdesc>The monochrome compression type.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>Automatic compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="CCIT3" rwaccess="readonly">
        <shortdesc>CCITT Group 3 compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CCIT4" rwaccess="readonly">
        <shortdesc>CCITT Group 4 compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="MONOZIP" rwaccess="readonly">
        <shortdesc>ZIP compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="RUNLENGTH" rwaccess="readonly">
        <shortdesc>RLE compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFTrimMarkWeight" enumeration="true">
    <shortdesc>Pdf trim mark weight options.</shortdesc>
    <elements type="class">
      <property name="TRIMMARKWEIGHT0125" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TRIMMARKWEIGHT025" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TRIMMARKWEIGHT05" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFOverprint" enumeration="true">
    <shortdesc>Pdf overprint options.</shortdesc>
    <elements type="class">
      <property name="PRESERVEPDFOVERPRINT" rwaccess="readonly">
        <shortdesc>Preserve overprint.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="DISCARDPDFOVERPRINT" rwaccess="readonly">
        <shortdesc>Discard overprint.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFPrintAllowedEnum" enumeration="true">
    <shortdesc>Pdf print permissions.</shortdesc>
    <elements type="class">
      <property name="PRINT128NONE" rwaccess="readonly">
        <shortdesc>Printing allowed none - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PRINT128LOWRESOLUTION" rwaccess="readonly">
        <shortdesc>Print allowed only in low resolution - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PRINT128HIGHRESOLUTION" rwaccess="readonly">
        <shortdesc>Print high resolution allowed - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="PRINT40NONE" rwaccess="readonly">
        <shortdesc>Printing allowed none - 40bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="PRINT40HIGHRESOLUTION" rwaccess="readonly">
        <shortdesc>Print high resolution allowed - 40bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFChangesAllowedEnum" enumeration="true">
    <shortdesc>Options available for making changes to a pdf document.</shortdesc>
    <elements type="class">
      <property name="CHANGE128NONE" rwaccess="readonly">
        <shortdesc>No changes allowed - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CHANGE128EDITPAGE" rwaccess="readonly">
        <shortdesc>Editing page allowed - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="CHANGE128FILLFORM" rwaccess="readonly">
        <shortdesc>Filling in of form field and signing allowed - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="CHANGE128COMMENTING" rwaccess="readonly">
        <shortdesc>Comment allowed - 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="CHANGE128ANYCHANGES" rwaccess="readonly">
        <shortdesc>Any changes allowed except extracting of pages- 128bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="CHANGE40NONE" rwaccess="readonly">
        <shortdesc>No changes allowed - 40bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="CHANGE40COMMENTING" rwaccess="readonly">
        <shortdesc>Comment allowed - 40bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="CHANGE40PAGELAYOUT" rwaccess="readonly">
        <shortdesc>Page layout allowed - 40bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="CHANGE40ANYCHANGES" rwaccess="readonly">
        <shortdesc>Any changes allowed except extracting of pages- 40bit.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DownsampleMethod" enumeration="true">
    <shortdesc>The resample type.</shortdesc>
    <elements type="class">
      <property name="NODOWNSAMPLE" rwaccess="readonly">
        <shortdesc>Downsampling.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="AVERAGEDOWNSAMPLE" rwaccess="readonly">
        <shortdesc>Average Downsampling.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SUBSAMPLE" rwaccess="readonly">
        <shortdesc>Subsampling.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BICUBICDOWNSAMPLE" rwaccess="readonly">
        <shortdesc>Bicubic Downsampling.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="EPSPreview" enumeration="true">
    <shortdesc>The preview type.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>No preview.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="BWMACINTOSH" rwaccess="readonly">
        <shortdesc>Black and white Macintosh preview.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="COLORMACINTOSH" rwaccess="readonly">
        <shortdesc>Color Macintosh preview.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="BWTIFF" rwaccess="readonly">
        <shortdesc>Black and white PC preview.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="COLORTIFF" rwaccess="readonly">
        <shortdesc>Color PC preview.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="TRANSPARENTCOLORTIFF" rwaccess="readonly">
        <shortdesc>Transparent color PC preview (8 or later)</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="EPSPostScriptLevelEnum" enumeration="true">
    <shortdesc>The PostScript levels available when saving EPS files.</shortdesc>
    <elements type="class">
      <property name="LEVEL2" rwaccess="readonly">
        <shortdesc>PostScript Level 2.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="LEVEL3" rwaccess="readonly">
        <shortdesc>PostScript Level 3.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrinterPostScriptLevelEnum" enumeration="true">
    <shortdesc>The PostScript levels supported by various printers.</shortdesc>
    <elements type="class">
      <property name="PSLEVEL1" rwaccess="readonly">
        <shortdesc>PostScript Level 1.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PSLEVEL2" rwaccess="readonly">
        <shortdesc>PostScript Level 2.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PSLEVEL3" rwaccess="readonly">
        <shortdesc>PostScript Level 3.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SaveOptions" enumeration="true">
    <shortdesc>The options that may be applied when saving a file.</shortdesc>
    <elements type="class">
      <property name="SAVECHANGES" rwaccess="readonly">
        <shortdesc>Save changes.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="DONOTSAVECHANGES" rwaccess="readonly">
        <shortdesc>Do not save changes.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PROMPTTOSAVECHANGES" rwaccess="readonly">
        <shortdesc>Ask the user whether to save.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RulerUnits" enumeration="true">
    <elements type="class">
      <property name="Unknown" rwaccess="readonly">
        <shortdesc>Ruler units are unknown.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Inches" rwaccess="readonly">
        <shortdesc>Ruler units are unknown.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="Centimeters" rwaccess="readonly">
        <shortdesc>Ruler units are measured in centimeters.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="Points" rwaccess="readonly">
        <shortdesc>Ruler units are measured in points.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="Picas" rwaccess="readonly">
        <shortdesc>Ruler units are measured in picas.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="Millimeters" rwaccess="readonly">
        <shortdesc>Ruler units are measured in millimeters.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="Qs" rwaccess="readonly">
        <shortdesc>Ruler units are measured in Qs.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="Pixels" rwaccess="readonly">
        <shortdesc>Ruler units are measured in pixels.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="BlendModes" enumeration="true">
    <shortdesc>Blend modes used when compositing an object.</shortdesc>
    <elements type="class">
      <property name="NORMAL" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="MULTIPLY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SCREEN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="OVERLAY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="SOFTLIGHT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="HARDLIGHT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="COLORDODGE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="COLORBURN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="DARKEN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="LIGHTEN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="DIFFERENCE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
      <property name="EXCLUSION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>11</value>
        </datatype>
      </property>
      <property name="HUE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>12</value>
        </datatype>
      </property>
      <property name="SATURATIONBLEND" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>13</value>
        </datatype>
      </property>
      <property name="COLORBLEND" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>14</value>
        </datatype>
      </property>
      <property name="LUMINOSITY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>15</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="KnockoutState" enumeration="true">
    <shortdesc>Knockout state of a page item.</shortdesc>
    <elements type="class">
      <property name="Unknown" rwaccess="readonly">
        <shortdesc>Unknown/uninitialized knockout state.</shortdesc>
        <datatype>
          <type>int</type>
          <value>-1</value>
        </datatype>
      </property>
      <property name="DISABLED" rwaccess="readonly">
        <shortdesc>Knockout off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="ENABLED" rwaccess="readonly">
        <shortdesc>Knockout off.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="INHERITED" rwaccess="readonly">
        <shortdesc>Knockout state inherited from group?</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ZOrderMethod" enumeration="true">
    <shortdesc>How to re-arrange the art item.</shortdesc>
    <elements type="class">
      <property name="BRINGTOFRONT" rwaccess="readonly">
        <shortdesc>Move art to front of it's group or layer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="BRINGFORWARD" rwaccess="readonly">
        <shortdesc>Move art one step forward in it's group or layer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SENDBACKWARD" rwaccess="readonly">
        <shortdesc>Move art one step backwards in it's group or layer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="SENDTOBACK" rwaccess="readonly">
        <shortdesc>Move art to back of it's group or layer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SVGDTDVersion" enumeration="true">
    <shortdesc>The version of the SVG DTD.</shortdesc>
    <elements type="class">
      <property name="SVG1_0" rwaccess="readonly">
        <shortdesc>SVG 1.0.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SVG1_1" rwaccess="readonly">
        <shortdesc>SVG 1.1.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SVGTINY1_1" rwaccess="readonly">
        <shortdesc>SVG Tiny 1.1.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="SVGTINY1_1PLUS" rwaccess="readonly">
        <shortdesc>SVG Tiny 1.1 Plus.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="SVGBASIC1_1" rwaccess="readonly">
        <shortdesc>SVG Basic 1.1.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="SVGTINY1_2" rwaccess="readonly">
        <shortdesc>SVG Tiny 1.2.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SVGFontType" enumeration="true">
    <shortdesc>What font type to include with the file?</shortdesc>
    <elements type="class">
      <property name="SVGFONT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="OUTLINEFONT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SVGFontSubsetting" enumeration="true">
    <shortdesc>What fonts to include with the file?</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>Use system fonts.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="GLYPHSUSED" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="COMMONENGLISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="GLYPHSUSEDPLUSENGLISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="COMMONROMAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="GLYPHSUSEDPLUSROMAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="ALLGLYPHS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SVGDocumentEncoding" enumeration="true">
    <elements type="class">
      <property name="ASCII" rwaccess="readonly">
        <shortdesc>ISO 8859-1.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="UTF8" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="UTF16" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SVGCSSPropertyLocation" enumeration="true">
    <elements type="class">
      <property name="ENTITIES" rwaccess="readonly">
        <shortdesc>Style attributes with entity reference.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="STYLEATTRIBUTES" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="STYLEELEMENTS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="PRESENTATIONATTRIBUTES" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SVGIdType" enumeration="true">
    <shortdesc>Type of SVG Id.</shortdesc>
    <elements type="class">
      <property name="SVGIDMINIMAL" rwaccess="readonly">
        <shortdesc>Style attributes with entity reference.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SVGIDREGULAR" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SVGIDUNIQUE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RasterImageLocation" enumeration="true">
    <shortdesc>Decide where the raster images will be stored.</shortdesc>
    <elements type="class">
      <property name="EMBED" rwaccess="readonly">
        <shortdesc>Embed the raster images in the svg file.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="LINK" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PRESERVE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="OutputFlattening" enumeration="true">
    <shortdesc>How should transparency be flattened for pre-AI9 file formats.</shortdesc>
    <elements type="class">
      <property name="PRESERVEPATHS" rwaccess="readonly">
        <shortdesc>Discard transparency.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="PRESERVEAPPEARANCE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorModel" enumeration="true">
    <shortdesc>Color model of the custom color.</shortdesc>
    <elements type="class">
      <property name="REGISTRATION" rwaccess="readonly">
        <shortdesc>Registration color (prints on in all separations)</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="PROCESS" rwaccess="readonly">
        <shortdesc>Process color (mixed ink)</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SPOT" rwaccess="readonly">
        <shortdesc>Spot color (separate ink)</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SpotColorKind" enumeration="true">
    <shortdesc>Custom color kind of the spot color.</shortdesc>
    <elements type="class">
      <property name="SPOTCMYK" rwaccess="readonly">
        <shortdesc>Solid ink, expressed in four CMYK values.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SPOTRGB" rwaccess="readonly">
        <shortdesc>Solid color, expressed as three RGB values.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SPOTLAB" rwaccess="readonly">
        <shortdesc>Lab color. Only valid for spot colors.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FlashExportStyle" enumeration="true">
    <elements type="class">
      <property name="ARTBOARDSTOFILES" rwaccess="readonly">
        <shortdesc>Illustrator Artboards to Flash Files.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="ASFLASHFILE" rwaccess="readonly">
        <shortdesc>Illustrator file to Flash file.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="LAYERSASFRAMES" rwaccess="readonly">
        <shortdesc>Illustrator layers to Flash frames.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="LAYERSASFILES" rwaccess="readonly">
        <shortdesc>Illustrator layers to Flash files.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="LAYERSASSYMBOLS" rwaccess="readonly">
        <shortdesc>Illustrator layers to Flash Symbols.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ArtClippingOption" enumeration="true">
    <shortdesc>How the arts should be clipped.</shortdesc>
    <elements type="class">
      <property name="OUTPUTARTBOUNDS" rwaccess="readonly">
        <shortdesc>Output size is the size of the artwork.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="OUTPUTARTBOARDBOUNDS" rwaccess="readonly">
        <shortdesc>Output size is the size of the artboard.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="OUTPUTCROPRECTBOUNDS" rwaccess="readonly">
        <shortdesc>Output size is the size of the crop area.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FlashExportVersion" enumeration="true">
    <shortdesc>Version of the SWF File to be exported.</shortdesc>
    <elements type="class">
      <property name="FLASHVERSION1" rwaccess="readonly">
        <shortdesc>SWF Version 1.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="FLASHVERSION2" rwaccess="readonly">
        <shortdesc>SWF Version 2.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="FLASHVERSION3" rwaccess="readonly">
        <shortdesc>SWF Version 3.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="FLASHVERSION4" rwaccess="readonly">
        <shortdesc>SWF Version 4.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="FLASHVERSION5" rwaccess="readonly">
        <shortdesc>SWF Version 5.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="FLASHVERSION6" rwaccess="readonly">
        <shortdesc>SWF Version 6.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="FLASHVERSION7" rwaccess="readonly">
        <shortdesc>SWF Version 7.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="FLASHVERSION8" rwaccess="readonly">
        <shortdesc>SWF Version 8.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="FLASHVERSION9" rwaccess="readonly">
        <shortdesc>SWF Version 9.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FlashImageFormat" enumeration="true">
    <elements type="class">
      <property name="LOSSLESS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="LOSSY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="LayerOrderType" enumeration="true">
    <elements type="class">
      <property name="BOTTOMUP" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TOPDOWN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="BlendAnimationType" enumeration="true">
    <elements type="class">
      <property name="NOBLENDANIMATION" rwaccess="readonly">
        <shortdesc>No blend animation.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="INSEQUENCE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="INBUILD" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FlashJPEGMethod" enumeration="true">
    <elements type="class">
      <property name="Standard" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Optimized" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FlashPlaybackSecurity" enumeration="true">
    <elements type="class">
      <property name="PlaybackLocal" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PlaybackNetwork" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="VariableKind" enumeration="true">
    <elements type="class">
      <property name="Unknown" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="VISIBILITY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TEXTUAL" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="IMAGE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="GRAPH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADExportFileFormat" enumeration="true">
    <elements type="class">
      <property name="DXF" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="DWG" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADCompatibility" enumeration="true">
    <elements type="class">
      <property name="AutoCADRelease13" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="AutoCADRelease14" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="AutoCADRelease15" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="AutoCADRelease18" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="AutoCADRelease21" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="AutoCADRelease24" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADUnit" enumeration="true">
    <elements type="class">
      <property name="Points" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="Picas" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Inches" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="Millimeters" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="Centimeters" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="Pixels" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADColors" enumeration="true">
    <elements type="class">
      <property name="Max8Colors" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="Max16Colors" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Max256Colors" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TrueColors" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADRasterFormat" enumeration="true">
    <elements type="class">
      <property name="PNG" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="JPEG" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADExportOption" enumeration="true">
    <elements type="class">
      <property name="PreserveAppearance" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="MaximumEditability" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoCADGlobalScaleOption" enumeration="true">
    <elements type="class">
      <property name="OriginalSize" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="FitArtboard" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ScaleByValue" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TIFFByteOrder" enumeration="true">
    <shortdesc>Byte Order of TIFF file.</shortdesc>
    <elements type="class">
      <property name="IBMPC" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="MACINTOSH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="UserInteractionLevel" enumeration="true">
    <shortdesc>COM user interaction enumeration.</shortdesc>
    <elements type="class">
      <property name="DONTDISPLAYALERTS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>-1</value>
        </datatype>
      </property>
      <property name="DISPLAYALERTS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PolarityValues" enumeration="true">
    <elements type="class">
      <property name="POSITIVE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="NEGATIVE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>-1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="JavaScriptExecutionMode" enumeration="true">
    <shortdesc>When should a JavaScript debugger be shown.</shortdesc>
    <elements type="class">
      <property name="never" rwaccess="readonly">
        <shortdesc>Never show the JavaScript debugger. Treat runtime errors by throwing a JavaScript exceptions.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="OnRuntimeError" rwaccess="readonly">
        <shortdesc>Show the JavaScript debugger is a runtime error occurs.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BeforeRunning" rwaccess="readonly">
        <shortdesc>Show the JavaScript debugger at the first line of the JavaScript.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintArtworkDesignation" enumeration="true">
    <shortdesc>The artwork layers/objects to be printed.</shortdesc>
    <elements type="class">
      <property name="VISIBLEPRINTABLELAYERS" rwaccess="readonly">
        <shortdesc>Print visible printable layers.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="VISIBLELAYERS" rwaccess="readonly">
        <shortdesc>Print visible layers.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ALLLAYERS" rwaccess="readonly">
        <shortdesc>Print all layers.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintingBounds" enumeration="true">
    <shortdesc>The printing bounds type.</shortdesc>
    <elements type="class">
      <property name="ARTBOARDBOUNDS" rwaccess="readonly">
        <shortdesc>Use artboard bounds.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="ARTWORKBOUNDS" rwaccess="readonly">
        <shortdesc>Use artwork bounds.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CROPBOUNDS" rwaccess="readonly">
        <shortdesc>Use crop bounds.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintColorSeparationMode" enumeration="true">
    <shortdesc>The color separation mode.</shortdesc>
    <elements type="class">
      <property name="COMPOSITE" rwaccess="readonly">
        <shortdesc>The composite mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="HOSTBASEDSEPARATION" rwaccess="readonly">
        <shortdesc>The host based color separation mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="INRIPSEPARATION" rwaccess="readonly">
        <shortdesc>The InRIP color separation mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintOrientation" enumeration="true">
    <shortdesc>The artwork printing orientation.</shortdesc>
    <elements type="class">
      <property name="PORTRAIT" rwaccess="readonly">
        <shortdesc>Portrait.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="LANDSCAPE" rwaccess="readonly">
        <shortdesc>Landscape.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="REVERSEPORTRAIT" rwaccess="readonly">
        <shortdesc>Reverse portrait.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="REVERSELANDSCAPE" rwaccess="readonly">
        <shortdesc>Reverse landscape.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="AUTOROTATE" rwaccess="readonly">
        <shortdesc>Auto Rotate.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintPosition" enumeration="true">
    <shortdesc>The artwork printing position on media.</shortdesc>
    <elements type="class">
      <property name="TRANSLATETOPLEFT" rwaccess="readonly">
        <shortdesc>Translate to the top left of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TRANSLATETOP" rwaccess="readonly">
        <shortdesc>Translate to the top center of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TRANSLATETOPRIGHT" rwaccess="readonly">
        <shortdesc>Translate to the top right of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="TRANSLATELEFT" rwaccess="readonly">
        <shortdesc>Translate to the left center of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="TRANSLATECENTER" rwaccess="readonly">
        <shortdesc>Translate to the center of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="TRANSLATERIGHT" rwaccess="readonly">
        <shortdesc>Translate to the right center of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="TRANSLATEBOTTOMLEFT" rwaccess="readonly">
        <shortdesc>Translate to the bottom left of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="TRANSLATEBOTTOM" rwaccess="readonly">
        <shortdesc>Translate to the bottom center of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="TRANSLATEBOTTOMRIGHT" rwaccess="readonly">
        <shortdesc>Translate to the bottom right of media.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintTiling" enumeration="true">
    <shortdesc>The page tiling type.</shortdesc>
    <elements type="class">
      <property name="TILESINGLEFULLPAGE" rwaccess="readonly">
        <shortdesc>Tile single full page.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TILEFULLPAGES" rwaccess="readonly">
        <shortdesc>Tile full pages.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TILEIMAGEABLEAREAS" rwaccess="readonly">
        <shortdesc>Tile imageable areas.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PageMarksTypes" enumeration="true">
    <shortdesc>The page marks style type.</shortdesc>
    <elements type="class">
      <property name="Roman" rwaccess="readonly">
        <shortdesc>Roman page marks style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="Japanese" rwaccess="readonly">
        <shortdesc>Japanese page marks style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintFontDownloadMode" enumeration="true">
    <shortdesc>The printer font download mode.</shortdesc>
    <elements type="class">
      <property name="DOWNLOADNONE" rwaccess="readonly">
        <shortdesc>Download none.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="DOWNLOADSUBSET" rwaccess="readonly">
        <shortdesc>Download subset.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="DOWNLOADCOMPLETE" rwaccess="readonly">
        <shortdesc>Download complete.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FontSubstitutionPolicy" enumeration="true">
    <shortdesc>The font substitution policy.</shortdesc>
    <elements type="class">
      <property name="SUBSTITUTEOBLIQUE" rwaccess="readonly">
        <shortdesc>Substitute oblique font.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SUBSTITUTETINT" rwaccess="readonly">
        <shortdesc>Substitute tint font.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SUBSTITUTEDEVICE" rwaccess="readonly">
        <shortdesc>Substitute device font.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PostScriptImageCompressionType" enumeration="true">
    <shortdesc>The PostScript image compression type.</shortdesc>
    <elements type="class">
      <property name="IMAGECOMPRESSIONNONE" rwaccess="readonly">
        <shortdesc>No image compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="RLE" rwaccess="readonly">
        <shortdesc>RLE image compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="JPEG" rwaccess="readonly">
        <shortdesc>JPEG image compression.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintColorProfile" enumeration="true">
    <shortdesc>The color profile type.</shortdesc>
    <elements type="class">
      <property name="OLDSTYLEPROFILE" rwaccess="readonly">
        <shortdesc>Use old style AI color profile.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SOURCEPROFILE" rwaccess="readonly">
        <shortdesc>Same as source color profile.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PRINTERPROFILE" rwaccess="readonly">
        <shortdesc>Same as printer color profile.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="CUSTOMPROFILE" rwaccess="readonly">
        <shortdesc>Use custom color profile.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintColorIntent" enumeration="true">
    <shortdesc>The color intent type.</shortdesc>
    <elements type="class">
      <property name="PERCEPTUALINTENT" rwaccess="readonly">
        <shortdesc>Perceptual color intent.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SATURATIONINTENT" rwaccess="readonly">
        <shortdesc>Saturation color intent.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RELATIVECOLORIMETRIC" rwaccess="readonly">
        <shortdesc>Relative colorimetric.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="ABSOLUTECOLORIMETRIC" rwaccess="readonly">
        <shortdesc>Absolute colorimetric.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrinterTypeEnum" enumeration="true">
    <shortdesc>The printer type.</shortdesc>
    <elements type="class">
      <property name="Unknown" rwaccess="readonly">
        <shortdesc>Unknown printer type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="POSTSCRIPTPRINTER" rwaccess="readonly">
        <shortdesc>PostScript printer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="NONPOSTSCRIPTPRINTER" rwaccess="readonly">
        <shortdesc>Non PostScript printer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrinterColorMode" enumeration="true">
    <shortdesc>The printer color mode.</shortdesc>
    <elements type="class">
      <property name="COLORPRINTER" rwaccess="readonly">
        <shortdesc>Color printer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="GRAYSCALEPRINTER" rwaccess="readonly">
        <shortdesc>Grayscale printer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="BLACKANDWHITEPRINTER" rwaccess="readonly">
        <shortdesc>Black and white printer.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="InkPrintStatus" enumeration="true">
    <shortdesc>The ink printing status.</shortdesc>
    <elements type="class">
      <property name="DISABLEINK" rwaccess="readonly">
        <shortdesc>Disable the ink during print.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="ENABLEINK" rwaccess="readonly">
        <shortdesc>Enable the ink during print.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="CONVERTINK" rwaccess="readonly">
        <shortdesc>Convert to process color during print.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="InkType" enumeration="true">
    <shortdesc>The ink type.</shortdesc>
    <elements type="class">
      <property name="CYANINK" rwaccess="readonly">
        <shortdesc>Cyan color ink.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="MAGENTAINK" rwaccess="readonly">
        <shortdesc>Magenta color ink.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="YELLOWINK" rwaccess="readonly">
        <shortdesc>Yellow color ink.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BLACKINK" rwaccess="readonly">
        <shortdesc>Black color ink.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="CUSTOMINK" rwaccess="readonly">
        <shortdesc>Custom color ink.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TrappingType" enumeration="true">
    <shortdesc>The trapping type.</shortdesc>
    <elements type="class">
      <property name="NORMALTRAPPING" rwaccess="readonly">
        <shortdesc>Normal trapping type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TRANSPARENT" rwaccess="readonly">
        <shortdesc>Transparent trapping type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="OPAQUE" rwaccess="readonly">
        <shortdesc>Opaque trapping type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="IGNOREOPAQUE" rwaccess="readonly">
        <shortdesc>Ignore opaque trapping type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoKernType" enumeration="true">
    <shortdesc>The auto kern type.</shortdesc>
    <elements type="class">
      <property name="NOAUTOKERN" rwaccess="readonly">
        <shortdesc>No auto kerning.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="AUTO" rwaccess="readonly">
        <shortdesc>Auto kerning.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="OPTICAL" rwaccess="readonly">
        <shortdesc>Optical kerning.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="METRICSROMANONLY" rwaccess="readonly">
        <shortdesc>Metrics roman only.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AutoLeadingType" enumeration="true">
    <shortdesc>The auto leading type.</shortdesc>
    <elements type="class">
      <property name="BOTTOMTOBOTTOM" rwaccess="readonly">
        <shortdesc>Roman leading type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TOPTOTOP" rwaccess="readonly">
        <shortdesc>Japanese leading type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="CaseChangeType" enumeration="true">
    <shortdesc>The case change type.</shortdesc>
    <elements type="class">
      <property name="UPPERCASE" rwaccess="readonly">
        <shortdesc>Change to upper case.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="LOWERCASE" rwaccess="readonly">
        <shortdesc>Change to lower case.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TITLECASE" rwaccess="readonly">
        <shortdesc>Change to title case.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SENTENCECASE" rwaccess="readonly">
        <shortdesc>Change to sentence case.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FontCapsOption" enumeration="true">
    <shortdesc>The font capitalization option.</shortdesc>
    <elements type="class">
      <property name="NORMALCAPS" rwaccess="readonly">
        <shortdesc>Normal caps.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SMALLCAPS" rwaccess="readonly">
        <shortdesc>Small caps.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ALLCAPS" rwaccess="readonly">
        <shortdesc>All caps.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="ALLSMALLCAPS" rwaccess="readonly">
        <shortdesc>All small caps.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FontBaselineOption" enumeration="true">
    <shortdesc>The font baseline option.</shortdesc>
    <elements type="class">
      <property name="NORMALBASELINE" rwaccess="readonly">
        <shortdesc>Normal baseline.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="SUPERSCRIPT" rwaccess="readonly">
        <shortdesc>Fauxed superscript baseline.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SUBSCRIPT" rwaccess="readonly">
        <shortdesc>Fauxed subscript baseline.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FontOpenTypePositionOption" enumeration="true">
    <shortdesc>The OpenType font position option.</shortdesc>
    <elements type="class">
      <property name="OPENTYPEDEFAULT" rwaccess="readonly">
        <shortdesc>Default position.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="OPENTYPESUPERSCRIPT" rwaccess="readonly">
        <shortdesc>OpenType superscript position.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="OPENTYPESUBSCRIPT" rwaccess="readonly">
        <shortdesc>OpenType subscript position.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="NUMERATOR" rwaccess="readonly">
        <shortdesc>OpenType numerator position.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="DENOMINATOR" rwaccess="readonly">
        <shortdesc>OpenType denominator position.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FigureStyleType" enumeration="true">
    <shortdesc>The figure style type.</shortdesc>
    <elements type="class">
      <property name="DEFAULTFIGURESTYLE" rwaccess="readonly">
        <shortdesc>Default figure style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TABULAR" rwaccess="readonly">
        <shortdesc>Tabular lining style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PROPORTIONALOLDSTYLE" rwaccess="readonly">
        <shortdesc>Proportional oldstyle.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PROPORTIONAL" rwaccess="readonly">
        <shortdesc>Proportional lining style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="TABULAROLDSTYLE" rwaccess="readonly">
        <shortdesc>Tabular oldstyle.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="BaselineDirectionType" enumeration="true">
    <shortdesc>The baseline direction type.</shortdesc>
    <elements type="class">
      <property name="Standard" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="VerticalRotated" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TateChuYoko" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="LanguageType" enumeration="true">
    <shortdesc>The language of text.</shortdesc>
    <elements type="class">
      <property name="ENGLISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="FINNISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="STANDARDFRENCH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="CANADIANFRENCH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="STANDARDGERMAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="OLDGERMAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="SWISSGERMAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="ITALIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="BOKMALNORWEGIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="NYNORSKNORWEGIAN" rwaccess="readonly">
        <shortdesc>Nynorsk Norwegian.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="STANDARDPORTUGUESE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
      <property name="BRAZILLIANPORTUGUESE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>11</value>
        </datatype>
      </property>
      <property name="SPANISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>12</value>
        </datatype>
      </property>
      <property name="SWEDISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>13</value>
        </datatype>
      </property>
      <property name="UKENGLISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>14</value>
        </datatype>
      </property>
      <property name="DUTCH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>15</value>
        </datatype>
      </property>
      <property name="DANISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>16</value>
        </datatype>
      </property>
      <property name="CATALAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>17</value>
        </datatype>
      </property>
      <property name="RUSSIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>18</value>
        </datatype>
      </property>
      <property name="UKRANIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>19</value>
        </datatype>
      </property>
      <property name="BULGARIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>20</value>
        </datatype>
      </property>
      <property name="SERBIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>21</value>
        </datatype>
      </property>
      <property name="CZECH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>22</value>
        </datatype>
      </property>
      <property name="POLISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>23</value>
        </datatype>
      </property>
      <property name="RUMANIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>24</value>
        </datatype>
      </property>
      <property name="GREEK" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>25</value>
        </datatype>
      </property>
      <property name="TURKISH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>26</value>
        </datatype>
      </property>
      <property name="ICELANDIC" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>27</value>
        </datatype>
      </property>
      <property name="HUNGARIAN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>28</value>
        </datatype>
      </property>
      <property name="CHINESE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>29</value>
        </datatype>
      </property>
      <property name="JAPANESE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>30</value>
        </datatype>
      </property>
      <property name="ARABIC" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>39</value>
        </datatype>
      </property>
      <property name="FARSI" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>41</value>
        </datatype>
      </property>
      <property name="GERMAN2006REFORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>42</value>
        </datatype>
      </property>
      <property name="DUTCH2005REFORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>43</value>
        </datatype>
      </property>
      <property name="SWISSGERMAN2006REFORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>44</value>
        </datatype>
      </property>
      <property name="HINDI" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>49</value>
        </datatype>
      </property>
      <property name="MARATHI" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>50</value>
        </datatype>
      </property>
      <property name="BENGALIINDIA" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>51</value>
        </datatype>
      </property>
      <property name="PUNJABI" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>52</value>
        </datatype>
      </property>
      <property name="GUJARATI" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>53</value>
        </datatype>
      </property>
      <property name="ORIYA" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>54</value>
        </datatype>
      </property>
      <property name="TAMIL" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>55</value>
        </datatype>
      </property>
      <property name="TELUGU" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>56</value>
        </datatype>
      </property>
      <property name="KANNADA" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>57</value>
        </datatype>
      </property>
      <property name="MALAYALAM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>58</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AlternateGlyphsForm" enumeration="true">
    <shortdesc>The alternate glyphs form of text.</shortdesc>
    <elements type="class">
      <property name="DEFAULTFORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TRADITIONAL" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="EXPERT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="JIS78FORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="JIS83FORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="HALFWIDTH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="THIRDWIDTH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="QUARTERWIDTH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="FULLWIDTH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="PROPORTIONALWIDTH" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
      <property name="JIS90FORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>10</value>
        </datatype>
      </property>
      <property name="JIS04FORM" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>11</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="StyleRunAlignmentType" enumeration="true">
    <shortdesc>The style run alignment.</shortdesc>
    <elements type="class">
      <property name="bottom" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="icfBottom" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="ROMANBASELINE" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="center" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="icfTop" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="top" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="WariChuJustificationType" enumeration="true">
    <shortdesc>The Wari-Chu alignment type.</shortdesc>
    <elements type="class">
      <property name="Left" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="Right" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Center" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="WARICHUFULLJUSTIFYLASTLINELEFT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="WARICHUFULLJUSTIFYLASTLINERIGHT" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="WARICHUFULLJUSTIFYLASTLINECENTER" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="WARICHUFULLJUSTIFY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="WARICHUAUTOJUSTIFY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="KashidasType" enumeration="true">
    <shortdesc>The kashida type constants.</shortdesc>
    <elements type="class">
      <property name="DEFAULT_KASHIDAS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="KASHIDAS_ON" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="KASHIDAS_OFF" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DirOverrideType" enumeration="true">
    <shortdesc>Direction override type constants.</shortdesc>
    <elements type="class">
      <property name="DEFAULT_DIRECTION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="LEFT_TO_RIGHT_DIRECTION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RIGHT_TO_LEFT_DIRECTION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DigitSetType" enumeration="true">
    <shortdesc>Digit set type constants.</shortdesc>
    <elements type="class">
      <property name="DEFAULT_DIGITS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="ARABIC_DIGITS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="HINDI_DIGITS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="FARSI_DIGITS" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DiacVPosType" enumeration="true">
    <shortdesc>Diacritic vertical position type constants.</shortdesc>
    <elements type="class">
      <property name="DEFAULT_POSITION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="LOOSE_POSITION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="MEDIUM_POSITION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TIGHT_POSITION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="OPENTYPE_POSITION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="KashidaWidthType" enumeration="true">
    <shortdesc>The kashida width type constants.</shortdesc>
    <elements type="class">
      <property name="kashidaNone" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="kashidaSmall" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="kashidaMedium" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="kashidaLong" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="kashidaStylistic" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ComposerEngineType" enumeration="true">
    <shortdesc>The composer type constants.</shortdesc>
    <elements type="class">
      <property name="latinCJKComposer" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="optycaComposer" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="adornment" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ParagraphDirectionType" enumeration="true">
    <shortdesc>The composer type constants.</shortdesc>
    <elements type="class">
      <property name="LEFT_TO_RIGHT_DIRECTION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="RIGHT_TO_LEFT_DIRECTION" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="BurasagariTypeEnum" enumeration="true">
    <shortdesc>The Burasagari type.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="Standard" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="Forced" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="KinsokuOrderEnum" enumeration="true">
    <shortdesc>The preferred Kinsoku order.</shortdesc>
    <elements type="class">
      <property name="PUSHIN" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="PUSHOUTFIRST" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PUSHOUTONLY" rwaccess="readonly">
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFBoxType" enumeration="true">
    <shortdesc>Crop box.</shortdesc>
    <elements type="class">
      <property name="PDFARTBOX" rwaccess="readonly">
        <shortdesc>Crop to ArtBox. The art box defines the extent of the page's meaningful content (including potential white space) as intended by the page's creator.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="PDFCROPBOX" rwaccess="readonly">
        <shortdesc>Crop to CropBox. The crop box is the region of the page to display and to print.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PDFTRIMBOX" rwaccess="readonly">
        <shortdesc>Crop to TrimBox. The trim box specifies the positioning of the page's content within the imposition.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="PDFBLEEDBOX" rwaccess="readonly">
        <shortdesc>Crop to BleedBox. The bleed box defines the region to which the contents of the page should be clipped when output in a production environment.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="PDFMEDIABOX" rwaccess="readonly">
        <shortdesc>Crop to MediaBox. The media box is a natural size of the page. For example, the dimensions of A4 sheet of paper.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="PDFBOUNDINGBOX" rwaccess="readonly">
        <shortdesc>Crop to Bounding Box. The bounding box is the rectangle that encloses all text, graphics, and images on the page.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TracingMethodType" enumeration="true">
    <shortdesc>The tracing method: abutting and overlapping.</shortdesc>
    <elements type="class">
      <property name="TRACINGMETHODABUTTING" rwaccess="readonly">
        <shortdesc>Tracing abutting method.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TRACINGMETHODOVERLAPPING" rwaccess="readonly">
        <shortdesc>Tracing overlapping method.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TracingModeType" enumeration="true">
    <shortdesc>The tracing mode: color, grayscale, black and white.</shortdesc>
    <elements type="class">
      <property name="TRACINGMODECOLOR" rwaccess="readonly">
        <shortdesc>Color tracing mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TRACINGMODEGRAY" rwaccess="readonly">
        <shortdesc>Grayscale tracing mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TRACINGMODEBLACKANDWHITE" rwaccess="readonly">
        <shortdesc>Black and white tracing mode.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TracingColorType" enumeration="true">
    <shortdesc>The input color type Full Color or Limited colors.</shortdesc>
    <elements type="class">
      <property name="TRACINGLIMITEDCOLOR" rwaccess="readonly">
        <shortdesc>Use Limited colors for Tracing.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TRACINGFULLCOLOR" rwaccess="readonly">
        <shortdesc>Use Full colors for Tracing.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ViewType" enumeration="true">
    <shortdesc>Controls the type of vector view.</shortdesc>
    <elements type="class">
      <property name="TRACINGVIEWVECTORTRACINGRESULT" rwaccess="readonly">
        <shortdesc>View artwork.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="TRACINGVIEWVECTOROUTLINESWITHTRACING" rwaccess="readonly">
        <shortdesc>View paths and transparent fills.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TRACINGVIEWVECTOROUTLINES" rwaccess="readonly">
        <shortdesc>View just the paths.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="TRACINGVIEWVECTORWITHTRANSPARENTIMAGE" rwaccess="readonly">
        <shortdesc>View Outlines with Transparent Image.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="TRACINGVIEWIMAGE" rwaccess="readonly">
        <shortdesc>View Source Image.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RasterizationColorModel" enumeration="true">
    <shortdesc>Controls the color model for the rasterization.</shortdesc>
    <elements type="class">
      <property name="DEFAULTCOLORMODEL" rwaccess="readonly">
        <shortdesc>Rasterize in the default document color space.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="GRAYSCALE" rwaccess="readonly">
        <shortdesc>Rasterize as grayscale image.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BITMAP" rwaccess="readonly">
        <shortdesc>Rasterize as 1-bit bitmap.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="AntiAliasingMethod" enumeration="true">
    <shortdesc>Controls the type of antialiasing method used in the rasterization.</shortdesc>
    <elements type="class">
      <property name="None" rwaccess="readonly">
        <shortdesc>No anti-aliasing allowed.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="ARTOPTIMIZED" rwaccess="readonly">
        <shortdesc>Optimize for the art object.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="TYPEOPTIMIZED" rwaccess="readonly">
        <shortdesc>Optimize for the type object.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ColorConvertPurpose" enumeration="true">
    <shortdesc>Denotes the purpose of color conversion using ConvertSmapleColor method.</shortdesc>
    <elements type="class">
      <property name="defaultpurpose" rwaccess="readonly">
        <shortdesc>Do standard conversion, without black preservation.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="previewpurpose" rwaccess="readonly">
        <shortdesc>Conversion options appropriate to creating an image for screen display.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="exportpurpose" rwaccess="readonly">
        <shortdesc>Conversion options appropriate to creating an image for print or export.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="dummypurpose" rwaccess="readonly">
        <shortdesc>Dummy option.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FXGVersion" enumeration="true">
    <shortdesc>The FXG file format version.</shortdesc>
    <elements type="class">
      <property name="VERSION1PT0" rwaccess="readonly">
        <shortdesc>FXG version 1.0.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="VERSION2PT0" rwaccess="readonly">
        <shortdesc>FXG version 2.0.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FiltersPreservePolicy" enumeration="true">
    <shortdesc>Filters preserve policy used by FXG file format.</shortdesc>
    <elements type="class">
      <property name="EXPANDFILTERS" rwaccess="readonly">
        <shortdesc>Preserve the appearance of filters by expanding it.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RASTERIZEFILTERS" rwaccess="readonly">
        <shortdesc>Preserve the appearance of filters by rasterizing it.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="KEEPFILTERSEDITABLE" rwaccess="readonly">
        <shortdesc>Preserve the editability of filters.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TextPreservePolicy" enumeration="true">
    <shortdesc>Text preserve policy used by FXG file format.</shortdesc>
    <elements type="class">
      <property name="OUTLINETEXT" rwaccess="readonly">
        <shortdesc>Preserve the appearance of text by outlining it.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RASTERIZETEXT" rwaccess="readonly">
        <shortdesc>Preserve the appearance of text by rasterizing it.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="KEEPTEXTEDITABLE" rwaccess="readonly">
        <shortdesc>Preserve the editability of text.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="AUTOMATICALLYCONVERTTEXT" rwaccess="readonly">
        <shortdesc>Automatically convert text.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="GradientsPreservePolicy" enumeration="true">
    <shortdesc>Gradients preserve policy used by FXG file format.</shortdesc>
    <elements type="class">
      <property name="KEEPGRADIENTSEDITABLE" rwaccess="readonly">
        <shortdesc>Preserve the editability of gradients.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="AUTOMATICALLYCONVERTGRADIENTS" rwaccess="readonly">
        <shortdesc>Automatically Convert Gradients.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="BlendsExpandPolicy" enumeration="true">
    <shortdesc>Blends Expand policy used by FXG file format.</shortdesc>
    <elements type="class">
      <property name="AUTOMATICALLYCONVERTBLENDS" rwaccess="readonly">
        <shortdesc>Automatically Convert Blends.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RASTERIZEBLENDS" rwaccess="readonly">
        <shortdesc>Expand Blends by Rasterizing.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="CoordinateSystem" enumeration="true">
    <shortdesc>Coordinate system used by Illustrator.</shortdesc>
    <elements type="class">
      <property name="DOCUMENTCOORDINATESYSTEM" rwaccess="readonly">
        <shortdesc>Document coordinate system.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="ARTBOARDCOORDINATESYSTEM" rwaccess="readonly">
        <shortdesc>Artboard coordinate system.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="SymbolRegistrationPoint" enumeration="true">
    <shortdesc>The symbol registration point.</shortdesc>
    <elements type="class">
      <property name="SYMBOLTOPLEFTPOINT" rwaccess="readonly">
        <shortdesc>Top left point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="SYMBOLTOPMIDDLEPOINT" rwaccess="readonly">
        <shortdesc>Top middle point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="SYMBOLTOPRIGHTPOINT" rwaccess="readonly">
        <shortdesc>Top right point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="SYMBOLMIDDLELEFTPOINT" rwaccess="readonly">
        <shortdesc>Middle left point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="SYMBOLCENTERPOINT" rwaccess="readonly">
        <shortdesc>Center point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="SYMBOLMIDDLERIGHTPOINT" rwaccess="readonly">
        <shortdesc>Middle right point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
      <property name="SYMBOLBOTTOMLEFTPOINT" rwaccess="readonly">
        <shortdesc>Bottom left point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>7</value>
        </datatype>
      </property>
      <property name="SYMBOLBOTTOMMIDDLEPOINT" rwaccess="readonly">
        <shortdesc>Bottom middle point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>8</value>
        </datatype>
      </property>
      <property name="SYMBOLBOTTOMRIGHTPOINT" rwaccess="readonly">
        <shortdesc>Bottom right point of symbol bounding box.</shortdesc>
        <datatype>
          <type>int</type>
          <value>9</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PerspectiveGridPlaneType" enumeration="true">
    <shortdesc>Perspective grid plane types.</shortdesc>
    <elements type="class">
      <property name="NOPLANE" rwaccess="readonly">
        <shortdesc>Invalid Perspective Grid Plane Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="LEFTPLANE" rwaccess="readonly">
        <shortdesc>Perspective Grid Left Plane Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="RIGHTPLANE" rwaccess="readonly">
        <shortdesc>Perspective Grid Right Plane Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="FLOORPLANE" rwaccess="readonly">
        <shortdesc>Perspective Grid Floor Plane Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FirstBaselineType" enumeration="true">
    <shortdesc>Text Item First baseline types.</shortdesc>
    <elements type="class">
      <property name="BASELINEASCENT" rwaccess="readonly">
        <shortdesc>First Baseline Ascent Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="BASELINECAPHEIGHT" rwaccess="readonly">
        <shortdesc>First baseline Cap Height Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="BASELINELEADING" rwaccess="readonly">
        <shortdesc>First Baseline Leading Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="BASELINEXHEIGHT" rwaccess="readonly">
        <shortdesc>First Baseline x Height Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="BASELINEEMBOXHEIGHT" rwaccess="readonly">
        <shortdesc>First Baseline Em Box Height Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
      <property name="BASELINEFIXED" rwaccess="readonly">
        <shortdesc>First Baseline Fixed Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>5</value>
        </datatype>
      </property>
      <property name="BASELINELEGACY" rwaccess="readonly">
        <shortdesc>First Baseline Legacy Type.</shortdesc>
        <datatype>
          <type>int</type>
          <value>6</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentLayoutStyle" enumeration="true">
    <shortdesc>Document layout style types.</shortdesc>
    <elements type="class">
      <property name="CASCADE" rwaccess="readonly">
        <shortdesc>Arranges document in cascaded style.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="HORIZONTALTILE" rwaccess="readonly">
        <shortdesc>Arranges documents as horizontal tiles.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="VERTICALTILE" rwaccess="readonly">
        <shortdesc>Arranges documents as vertical tiles.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
      <property name="FLOATALL" rwaccess="readonly">
        <shortdesc>Arranges all documents floating layout.</shortdesc>
        <datatype>
          <type>int</type>
          <value>3</value>
        </datatype>
      </property>
      <property name="CONSOLIDATEALL" rwaccess="readonly">
        <shortdesc>Consolidates all documents.</shortdesc>
        <datatype>
          <type>int</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="JPEGCompressionMethodType" enumeration="true">
    <shortdesc>JPEG Compression Method type.</shortdesc>
    <elements type="class">
      <property name="BASELINESTANDARD" rwaccess="readonly">
        <shortdesc>Select Baseline (Standard) to use a format recognized by most web browsers.</shortdesc>
        <datatype>
          <type>int</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="BASELINEOPTIMIZED" rwaccess="readonly">
        <shortdesc>Select Baseline Optimized for optimized color and a slightly smaller file size. Not supported by all web browsers.</shortdesc>
        <datatype>
          <type>int</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="PROGRESSIVE" rwaccess="readonly">
        <shortdesc>Select Progressive to display a series of increasingly detailed scans (you specify how many in ProgressiveScan) as the image downloads. Not supported by all web browsers.</shortdesc>
        <datatype>
          <type>int</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Assets" dynamic="true">
    <shortdesc>A collection of assets.</shortdesc>
    <elements type="class">
      <method name="addFromSelection">
        <shortdesc>Creates an asset from the selected arts.</shortdesc>
        <datatype>
          <type>Asset</type>
        </datatype>
      </method>
      <method name="add">
        <shortdesc>Creates an asset from the given art(s)</shortdesc>
        <parameters>
          <parameter name="sourceArt">
            <shortdesc>The page item(s) to apply to.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Asset</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Asset">Asset</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes the asset with specified id.</shortdesc>
        <parameters>
          <parameter name="assetID">
            <shortdesc>UID of the asset to be deleted.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getByName">
        <shortdesc>Gets the first asset with specified name.</shortdesc>
        <parameters>
          <parameter name="assetName">
            <shortdesc>Name of the asset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Asset">Asset</type>
        </datatype>
      </method>
      <method name="getByID">
        <shortdesc>Gets the asset with the specified AssetID.</shortdesc>
        <parameters>
          <parameter name="assetID">
            <shortdesc>The UID of the asset.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Asset">Asset</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Artboards" dynamic="true">
    <shortdesc>A collection of artboards.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Add artboard object.</shortdesc>
        <parameters>
          <parameter name="artboardRect">
            <shortdesc>Size and position of artboard.</shortdesc>
            <datatype>
              <type href="#/Rect">Rect</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Artboard</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Artboard">Artboard</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Delete artboard object.</shortdesc>
        <parameters>
          <parameter name="index">
            <shortdesc>Index of the crop area to be deleted.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getByName">
        <shortdesc>Get the first Artboard with specified name.</shortdesc>
        <parameters>
          <parameter name="artboardName">
            <shortdesc>The name of the artboard.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Artboard">Artboard</type>
        </datatype>
      </method>
      <method name="insert">
        <shortdesc>Insert an Artboard at specified location.</shortdesc>
        <parameters>
          <parameter name="artboardRect">
            <shortdesc>Size and position of artboard.</shortdesc>
            <datatype>
              <type href="#/Rect">Rect</type>
            </datatype>
          </parameter>
          <parameter name="index">
            <shortdesc>Index position where artboard should be inserted.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getActiveArtboardIndex">
        <shortdesc>Retrieves the index position of the active artboard in the document's list.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </method>
      <method name="setActiveArtboardIndex">
        <shortdesc>Makes a specific artboard active, and makes it current in the iteration order.</shortdesc>
        <parameters>
          <parameter name="index">
            <shortdesc>The 0-based index position of the artboard in the document list.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="Documents" dynamic="true">
    <shortdesc>A collection of documents.</shortdesc>
    <elements type="class">
      <method name="addDocument">
        <shortdesc>Create a new document from a preset.</shortdesc>
        <parameters>
          <parameter name="startupPreset">
            <shortdesc>The name of a startup document preset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="presetSettings" optional="true">
            <shortdesc>Custom settings to apply to the preset.</shortdesc>
            <datatype>
              <type href="#/DocumentPreset">DocumentPreset</type>
            </datatype>
          </parameter>
          <parameter name="showOptionsDialog" optional="true">
            <shortdesc>If false, do not show Options dialog.</shortdesc>
            <datatype>
              <type>bool</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Document</type>
        </datatype>
      </method>
      <method name="addDocumentWithDialogOption">
        <shortdesc>Create a document from the preset with option to throw dialog to customize present settings.</shortdesc>
        <parameters>
          <parameter name="startupPreset">
            <shortdesc>The name of startup document preset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="showOptionsDialog" optional="true">
            <shortdesc>Argument controls if options Dialog is shown or not.</shortdesc>
            <datatype>
              <type>bool</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Document</type>
        </datatype>
      </method>
      <method name="add">
        <shortdesc>A document.</shortdesc>
        <parameters>
          <parameter name="documentColorSpace" optional="true">
            <shortdesc>The color model used for the document.</shortdesc>
            <datatype>
              <type href="#/DocumentColorSpace">DocumentColorSpace</type>
              <value>DocumentColorSpace.CMYK</value>
            </datatype>
          </parameter>
          <parameter name="width" optional="true">
            <shortdesc>Width of the artboard.</shortdesc>
            <datatype>
              <type>number</type>
              <value>612.0</value>
            </datatype>
          </parameter>
          <parameter name="height" optional="true">
            <shortdesc>Height of the artboard.</shortdesc>
            <datatype>
              <type>number</type>
              <value>792.0</value>
            </datatype>
          </parameter>
          <parameter name="numArtboards" optional="true">
            <shortdesc>Number of artboards for new document.Range (1:100).</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
              <value>1</value>
            </datatype>
          </parameter>
          <parameter name="artboardLayout" optional="true">
            <shortdesc>Layout of artboards for new document.</shortdesc>
            <datatype>
              <type href="#/DocumentArtboardLayout">DocumentArtboardLayout</type>
              <value>DocumentArtboardLayout.GridByRow</value>
            </datatype>
          </parameter>
          <parameter name="artboardSpacing" optional="true">
            <shortdesc>Spacing between artboards for new document.</shortdesc>
            <datatype>
              <type>number</type>
              <value>20.0</value>
            </datatype>
          </parameter>
          <parameter name="artboardRowsOrCols" optional="true">
            <shortdesc>Number of rows (for rows layout) OR column(for column layouts)of artboards.Range is 1 to (docNumArtboards - 1) or 1 for single row or column layouts.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
              <value>1</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Document</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Document">Document</type>
        </datatype>
      </method>
      <method name="arrange">
        <shortdesc>Arranges the documents in the specified style.</shortdesc>
        <parameters>
          <parameter name="layoutStyle">
            <shortdesc>The document layout style.</shortdesc>
            <datatype>
              <type href="#/DocumentLayoutStyle">DocumentLayoutStyle</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Layers" dynamic="true">
    <shortdesc>A collection of layers.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a layer.</shortdesc>
        <datatype>
          <type>Layer</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Layer">Layer</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="GroupItems" dynamic="true">
    <shortdesc>A collection of group items.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a group item.</shortdesc>
        <datatype>
          <type>GroupItem</type>
        </datatype>
      </method>
      <method name="createFromFile">
        <shortdesc>Create a group item from a vector graphics file.</shortdesc>
        <parameters>
          <parameter name="imageFile">
            <shortdesc>The vector graphics file to be embedded.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>GroupItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GroupItem">GroupItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="PageItems" dynamic="true">
    <shortdesc>A collection of page items.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PageItem">PageItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="PathItems" dynamic="true">
    <shortdesc>A collection of path items.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a path.</shortdesc>
        <datatype>
          <type>PathItem</type>
        </datatype>
      </method>
      <method name="ellipse">
        <shortdesc>Create an elliptical path item.</shortdesc>
        <parameters>
          <parameter name="top" optional="true">
            <shortdesc>The ellipse's bounds.</shortdesc>
            <datatype>
              <type>number</type>
              <value>100</value>
            </datatype>
          </parameter>
          <parameter name="left" optional="true">
            <shortdesc>The ellipse's bounds.</shortdesc>
            <datatype>
              <type>number</type>
              <value>100</value>
            </datatype>
          </parameter>
          <parameter name="width" optional="true">
            <shortdesc>The ellipse's bounds.</shortdesc>
            <datatype>
              <type>number</type>
              <value>50</value>
            </datatype>
          </parameter>
          <parameter name="height" optional="true">
            <shortdesc>The height of the ellipse.</shortdesc>
            <datatype>
              <type>number</type>
              <value>100</value>
            </datatype>
          </parameter>
          <parameter name="reversed" optional="true">
            <shortdesc>Is the ellipse path reversed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
          <parameter name="inscribed" optional="true">
            <shortdesc>Is the ellipse path inscribed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>PathItem</type>
        </datatype>
      </method>
      <method name="rectangle">
        <shortdesc>Used to create a rectangular path item. Not for path item access.</shortdesc>
        <parameters>
          <parameter name="top">
            <shortdesc>The top coordinate of the rectangle's bounds.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="left">
            <shortdesc>The left coordinate of the rectangle's bounds.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="width">
            <shortdesc>The width of the rectangle.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="height">
            <shortdesc>The height of the rectangle.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="reversed" optional="true">
            <shortdesc>Is the rectangle path reversed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>PathItem</type>
        </datatype>
      </method>
      <method name="roundedRectangle">
        <shortdesc>Used to create a rounded-corner rectangular path item. Not for path item access.</shortdesc>
        <parameters>
          <parameter name="top">
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="left">
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="width">
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="height">
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="horizontalRadius" optional="true">
            <shortdesc>Horizontal corner radius.</shortdesc>
            <datatype>
              <type>number</type>
              <value>15</value>
            </datatype>
          </parameter>
          <parameter name="verticalRadius" optional="true">
            <shortdesc>Vertical corner radius.</shortdesc>
            <datatype>
              <type>number</type>
              <value>20</value>
            </datatype>
          </parameter>
          <parameter name="reversed" optional="true">
            <shortdesc>Is the rectangle path reversed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>PathItem</type>
        </datatype>
      </method>
      <method name="polygon">
        <shortdesc>Used to create a regular polygon path item. Not for path item access.</shortdesc>
        <parameters>
          <parameter name="centerX" optional="true">
            <datatype>
              <type>number</type>
              <value>200</value>
            </datatype>
          </parameter>
          <parameter name="centerY" optional="true">
            <datatype>
              <type>number</type>
              <value>300</value>
            </datatype>
          </parameter>
          <parameter name="radius" optional="true">
            <shortdesc>The radius of the polygon points.</shortdesc>
            <datatype>
              <type>number</type>
              <value>50</value>
            </datatype>
          </parameter>
          <parameter name="sides" optional="true">
            <shortdesc>The number of sides on the polygon.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
              <value>8</value>
            </datatype>
          </parameter>
          <parameter name="reversed" optional="true">
            <shortdesc>Is the polygon path reversed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>PathItem</type>
        </datatype>
      </method>
      <method name="star">
        <shortdesc>Used to create a star-shaped path item. Not for path item access.</shortdesc>
        <parameters>
          <parameter name="centerX" optional="true">
            <datatype>
              <type>number</type>
              <value>200</value>
            </datatype>
          </parameter>
          <parameter name="centerY" optional="true">
            <datatype>
              <type>number</type>
              <value>300</value>
            </datatype>
          </parameter>
          <parameter name="radius" optional="true">
            <shortdesc>The outside radius of the star points.</shortdesc>
            <datatype>
              <type>number</type>
              <value>50</value>
            </datatype>
          </parameter>
          <parameter name="innerRadius" optional="true">
            <shortdesc>The inside radius of the star points.</shortdesc>
            <datatype>
              <type>number</type>
              <value>20</value>
            </datatype>
          </parameter>
          <parameter name="points" optional="true">
            <shortdesc>The number of points on the star.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
              <value>5</value>
            </datatype>
          </parameter>
          <parameter name="reversed" optional="true">
            <shortdesc>Is the star path reversed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>PathItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PathItem">PathItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="PathPoints" dynamic="true">
    <shortdesc>A collection of path points.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a path point.</shortdesc>
        <datatype>
          <type>PathPoint</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PathPoint">PathPoint</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="CompoundPathItems" dynamic="true">
    <shortdesc>A collection of compound path items.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a compound path item.</shortdesc>
        <datatype>
          <type>CompoundPathItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/CompoundPathItem">CompoundPathItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Stories" dynamic="true">
    <shortdesc>A collection of stories.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Story">Story</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="TextFrameItems" dynamic="true">
    <shortdesc>A collection of text frame items.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a point text frame item.</shortdesc>
        <datatype>
          <type>TextFrameItem</type>
        </datatype>
      </method>
      <method name="pointText">
        <shortdesc>Create a point text frame item.</shortdesc>
        <parameters>
          <parameter name="anchor">
            <shortdesc>The position (coordinates) of the anchor point.</shortdesc>
            <datatype>
              <type href="#/Point">Point</type>
            </datatype>
          </parameter>
          <parameter name="orientation" optional="true">
            <shortdesc>The orientation of the text.</shortdesc>
            <datatype>
              <type href="#/TextOrientation">TextOrientation</type>
              <value>TextOrientation.HORIZONTAL</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextFrameItem</type>
        </datatype>
      </method>
      <method name="areaText">
        <shortdesc>Create an area text frame item.</shortdesc>
        <parameters>
          <parameter name="textPath">
            <shortdesc>The path item associated with the text frame.</shortdesc>
            <datatype>
              <type href="#/PathItem">PathItem</type>
            </datatype>
          </parameter>
          <parameter name="orientation" optional="true">
            <shortdesc>The orientation of the text.</shortdesc>
            <datatype>
              <type href="#/TextOrientation">TextOrientation</type>
              <value>TextOrientation.HORIZONTAL</value>
            </datatype>
          </parameter>
          <parameter name="baseFrame" optional="true">
            <shortdesc>The base text frame if it has one.</shortdesc>
            <datatype>
              <type href="#/TextFrameItem">TextFrameItem</type>
            </datatype>
          </parameter>
          <parameter name="postFix" optional="true">
            <shortdesc>Whether to postfix/prefix the new text frame to the specified base text frame.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextFrameItem</type>
        </datatype>
      </method>
      <method name="pathText">
        <shortdesc>Create an on-path text frame item.</shortdesc>
        <parameters>
          <parameter name="textPath">
            <shortdesc>The path item associated with the text frame.</shortdesc>
            <datatype>
              <type href="#/PathItem">PathItem</type>
            </datatype>
          </parameter>
          <parameter name="startTValue" optional="true">
            <shortdesc>The start position of text along a path, as a value relative to the path's segments (path text only)</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
          <parameter name="endTValue" optional="true">
            <shortdesc>The end position of text along a path, as a value relative to the path's segments (path text only)</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
          <parameter name="orientation" optional="true">
            <shortdesc>The orientation of the text.</shortdesc>
            <datatype>
              <type href="#/TextOrientation">TextOrientation</type>
              <value>TextOrientation.HORIZONTAL</value>
            </datatype>
          </parameter>
          <parameter name="baseFrame" optional="true">
            <shortdesc>The base text frame if it has one.</shortdesc>
            <datatype>
              <type href="#/TextFrameItem">TextFrameItem</type>
            </datatype>
          </parameter>
          <parameter name="postFix" optional="true">
            <shortdesc>Whether to postfix/prefix the new text frame to the specified base text frame.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextFrameItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="LegacyTextItems" dynamic="true">
    <shortdesc>A collection of legacy text items.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/LegacyTextItem">LegacyTextItem</type>
        </datatype>
      </method>
      <method name="convertToNative">
        <shortdesc>Create text frames from all legacy text items. The original legacy text items will be deleted.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="TextRanges" dynamic="true">
    <shortdesc>A collection of text range items.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="InsertionPoints" dynamic="true">
    <shortdesc>A collection of insertion points.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/InsertionPoint">InsertionPoint</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Characters" dynamic="true">
    <shortdesc>A collection of characters.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a character.</shortdesc>
        <parameters>
          <parameter name="contents">
            <shortdesc>The text string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextRange</type>
        </datatype>
      </method>
      <method name="addBefore">
        <parameters>
          <parameter name="contents">
            <shortdesc>The text string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextRange</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Words" dynamic="true">
    <shortdesc>A collection of words.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a word.</shortdesc>
        <parameters>
          <parameter name="contents">
            <shortdesc>The text string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextRange</type>
        </datatype>
      </method>
      <method name="addBefore">
        <parameters>
          <parameter name="contents">
            <shortdesc>The text string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextRange</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Lines" dynamic="true">
    <shortdesc>A collection of lines.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Paragraphs" dynamic="true">
    <shortdesc>A collection of Paragraphs.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a text art item.</shortdesc>
        <parameters>
          <parameter name="contents">
            <shortdesc>The text string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextRange</type>
        </datatype>
      </method>
      <method name="addBefore">
        <parameters>
          <parameter name="contents">
            <shortdesc>The text string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>TextRange</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="CharacterStyles" dynamic="true">
    <shortdesc>A collection of character styles.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a named character style.</shortdesc>
        <parameters>
          <parameter name="name">
            <shortdesc>The character style name.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>CharacterStyle</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/CharacterStyle">CharacterStyle</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="ParagraphStyles" dynamic="true">
    <shortdesc>A collection of paragraph styles.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a named paragraph style.</shortdesc>
        <parameters>
          <parameter name="name">
            <shortdesc>The paragraph style name.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>ParagraphStyle</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/ParagraphStyle">ParagraphStyle</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Spots" dynamic="true">
    <shortdesc>A collection of custom spot colors.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a spot color.</shortdesc>
        <datatype>
          <type>Spot</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Spot">Spot</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Swatches" dynamic="true">
    <shortdesc>A collection of swatches.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a swatch.</shortdesc>
        <datatype>
          <type>Swatch</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Swatch">Swatch</type>
        </datatype>
      </method>
      <method name="getSelected">
        <shortdesc>Get selected swatches in the document.</shortdesc>
        <parameters>
          <parameter name="includeSwatchInGroup" optional="true">
            <shortdesc>The selected element should include swatches in group.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Swatch">Swatch</type>
          <array />
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="SwatchGroups" dynamic="true">
    <shortdesc>A collection of Swatch groups.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a Swatch group.</shortdesc>
        <datatype>
          <type>SwatchGroup</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/SwatchGroup">SwatchGroup</type>
        </datatype>
      </method>
      <method name="getSelected">
        <shortdesc>Get selected swatchGroups in the document.</shortdesc>
        <datatype>
          <type href="#/SwatchGroup">SwatchGroup</type>
          <array />
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Gradients" dynamic="true">
    <shortdesc>A collection of gradients.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a gradient.</shortdesc>
        <datatype>
          <type>Gradient</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Gradient">Gradient</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="GradientStops" dynamic="true">
    <shortdesc>A collection of gradient stops.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a gradient stop.</shortdesc>
        <datatype>
          <type>GradientStop</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GradientStop">GradientStop</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Patterns" dynamic="true">
    <shortdesc>A collection of patterns.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a pattern.</shortdesc>
        <datatype>
          <type>Pattern</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Pattern">Pattern</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Symbols" dynamic="true">
    <shortdesc>A collection of symbols.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a symbol.</shortdesc>
        <parameters>
          <parameter name="sourceArt">
            <shortdesc>The art item from which to make this symbol.</shortdesc>
            <datatype>
              <type href="#/PageItem">PageItem</type>
            </datatype>
          </parameter>
          <parameter name="registrationPoint" optional="true">
            <shortdesc>The symbol registration point.</shortdesc>
            <datatype>
              <type href="#/SymbolRegistrationPoint">SymbolRegistrationPoint</type>
              <value>SymbolRegistrationPoint.SYMBOLCENTERPOINT</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Symbol</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Symbol">Symbol</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="SymbolItems" dynamic="true">
    <shortdesc>A collection of symbol items.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>An instance of a symbol item.</shortdesc>
        <parameters>
          <parameter name="symbol">
            <shortdesc>The symbol to make an instance of.</shortdesc>
            <datatype>
              <type href="#/Symbol">Symbol</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>SymbolItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/SymbolItem">SymbolItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Brushes" dynamic="true">
    <shortdesc>A collection of brushes.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a brush.</shortdesc>
        <parameters>
          <parameter name="brushDefinition">
            <shortdesc>The brush definition from which the brush would be created.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="brushName" optional="true">
            <shortdesc>The name of the brush.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Brush</type>
        </datatype>
      </method>
      <method name="addAndLoad">
        <shortdesc>Create a brush, select the brush tool and load the created brush in the brush tool.</shortdesc>
        <parameters>
          <parameter name="brushDefinition">
            <shortdesc>The brush definition from which the brush would be created.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>Brush</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Brush">Brush</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="ArtStyles" dynamic="true">
    <shortdesc>A collection of art styles.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/ArtStyle">ArtStyle</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="TextFonts" dynamic="true">
    <shortdesc>A collection of fonts.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextFont">TextFont</type>
        </datatype>
      </method>
      <method name="getFontByName">
        <shortdesc>Get the Text Font with the font name , if not avaiable it will create the substitute font.</shortdesc>
        <parameters>
          <parameter name="fontName">
            <shortdesc>The name of the font to find or create substitute.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextFont">TextFont</type>
        </datatype>
      </method>
      <method name="isFontAvailable">
        <shortdesc>Check if any original font is present with the given name.</shortdesc>
        <parameters>
          <parameter name="fontName">
            <shortdesc>The name of the font to find.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="getCurrentFont">
        <shortdesc>Returns the current font name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Tags" dynamic="true">
    <shortdesc>The collection of tags associated with a page item.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a tag.</shortdesc>
        <datatype>
          <type>Tag</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Tag">Tag</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="RasterItems" dynamic="true">
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/RasterItem">RasterItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="PlacedItems" dynamic="true">
    <elements type="class">
      <method name="add">
        <shortdesc>Create a placed item.</shortdesc>
        <datatype>
          <type>PlacedItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PlacedItem">PlacedItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="EmbeddedItems" dynamic="true">
    <shortdesc>EmbeddedItems Collection.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create an embedded item.</shortdesc>
        <datatype>
          <type>EmbedItem</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/EmbedItem">EmbedItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="MeshItems" dynamic="true">
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/MeshItem">MeshItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="GraphItems" dynamic="true">
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GraphItem">GraphItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="PluginItems" dynamic="true">
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PluginItem">PluginItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="NonNativeItems" dynamic="true">
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/NonNativeItem">NonNativeItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Views" dynamic="true">
    <shortdesc>A collection of views.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/View">View</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Variables" dynamic="true">
    <shortdesc>A collection of variables.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a variable.</shortdesc>
        <datatype>
          <type>Variable</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Variable">Variable</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="DataSets" dynamic="true">
    <shortdesc>A collection of datasets.</shortdesc>
    <elements type="class">
      <method name="add">
        <shortdesc>Create a data set.</shortdesc>
        <datatype>
          <type>DataSet</type>
        </datatype>
      </method>
    </elements>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>Number of elements in the collection.</shortdesc>
        <datatype>
          <type>int</type>
        </datatype>
      </property>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getByName">
        <shortdesc>Get the first element in the collection with the provided name.</shortdesc>
        <parameters>
          <parameter name="name">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/DataSet">DataSet</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="OpenOptions" dynamic="true">
    <shortdesc>Options which may be supplied when opening a file.</shortdesc>
    <elements type="class">
      <property name="updateLegacyText">
        <shortdesc>Choose to update all text objects for documents saved with legacy texts (pre-Illustrator 11)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="updateLegacyGradientMesh">
        <shortdesc>Choose to preserve the spot colors in the gradient mesh objects for legacy documents (pre-Illustrator CS3)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="openAs">
        <shortdesc>Open the file as library.</shortdesc>
        <datatype>
          <type href="#/LibraryType">LibraryType</type>
          <value>LibraryType.ILLUSTRATORARTWORK</value>
        </datatype>
      </property>
      <property name="preserveLegacyArtboard">
        <shortdesc>Preserve Legacy Artboard (pre-Illustrator CS4) when opening in CS4 or later.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="convertCropAreaToArtboard">
        <shortdesc>Convert crop area to Artboard when opening legacy document (pre-Illustrator CS4) in CS4 or later. If false then crop areas are discarded.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="createArtboardWithArtworkBoundingBox">
        <shortdesc>Create Artboard with dimentions of artwork bounding box when opening legacy document (pre-Illustrator CS4) in CS4 or later.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="convertTilesToArtboard">
        <shortdesc>Convert print tiles to Artboard when opening legacy document (pre-Illustrator CS4) in CS4 or later.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="addToRecentFiles">
        <shortdesc>Add this file to the list of recently opened files.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="FXGSaveOptions" dynamic="true">
    <shortdesc>Options which may be supplied when saving a document as an FXG file.</shortdesc>
    <elements type="class">
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be saved.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="version">
        <shortdesc>The version of the FXG file format to create.</shortdesc>
        <datatype>
          <type href="#/FXGVersion">FXGVersion</type>
          <value>FXGVersion.VERSION2PT0</value>
        </datatype>
      </property>
      <property name="preserveEditingCapabilities">
        <shortdesc>Choose to preserve the editing capabilities of FXG.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="includeUnusedSymbols">
        <shortdesc>Choose to include unused symbols.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="downsampleLinkedImages">
        <shortdesc>Choose to downsample the linked images(72ppi)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeMetadata">
        <shortdesc>Choose to include metadata (XMP)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="filtersPolicy">
        <shortdesc>The policy used by FXG to preserve filters.</shortdesc>
        <datatype>
          <type href="#/FiltersPreservePolicy">FiltersPreservePolicy</type>
          <value>FiltersPreservePolicy.KEEPFILTERSEDITABLE</value>
        </datatype>
      </property>
      <property name="textPolicy">
        <shortdesc>The policy used by FXG to preserve text.</shortdesc>
        <datatype>
          <type href="#/TextPreservePolicy">TextPreservePolicy</type>
          <value>TextPreservePolicy.AUTOMATICALLYCONVERTTEXT</value>
        </datatype>
      </property>
      <property name="gradientsPolicy">
        <shortdesc>The policy used by FXG to preserve gradients.</shortdesc>
        <datatype>
          <type href="#/GradientsPreservePolicy">GradientsPreservePolicy</type>
          <value>GradientsPreservePolicy.AUTOMATICALLYCONVERTGRADIENTS</value>
        </datatype>
      </property>
      <property name="blendsPolicy">
        <shortdesc>The policy used by FXG to expand blends.</shortdesc>
        <datatype>
          <type href="#/BlendsExpandPolicy">BlendsExpandPolicy</type>
          <value>BlendsExpandPolicy.AUTOMATICALLYCONVERTBLENDS</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="EPSSaveOptions" dynamic="true">
    <shortdesc>Options which may be supplied when saving a document as an Illustrator EPS file.</shortdesc>
    <elements type="class">
      <property name="compatibility">
        <shortdesc>What Illustrator file format version to create.</shortdesc>
        <datatype>
          <type href="#/Compatibility">Compatibility</type>
          <value>Compatibility.ILLUSTRATOR17</value>
        </datatype>
      </property>
      <property name="preview">
        <shortdesc>EPS preview format.</shortdesc>
        <datatype>
          <type href="#/EPSPreview">EPSPreview</type>
        </datatype>
      </property>
      <property name="embedLinkedFiles">
        <shortdesc>Are linked image files to be included in the saved document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeDocumentThumbnails">
        <shortdesc>Include thumbnail image of the EPS artwork.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="embedAllFonts">
        <shortdesc>Embed all fonts used by the document in the saved file (version 7 or later)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="cmykPostScript">
        <shortdesc>Use CMYK PostScript.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="postScript">
        <shortdesc>PostScript level to use (level 1 valid for file format version 8 or older)</shortdesc>
        <datatype>
          <type href="#/EPSPostScriptLevelEnum">EPSPostScriptLevelEnum</type>
          <value>EPSPostScriptLevelEnum.LEVEL2</value>
        </datatype>
      </property>
      <property name="flattenOutput">
        <shortdesc>How should transparency be flattened for older file format versions (pre-version 9)</shortdesc>
        <datatype>
          <type href="#/OutputFlattening">OutputFlattening</type>
          <value>OutputFlattening.PRESERVEAPPEARANCE</value>
        </datatype>
      </property>
      <property name="compatibleGradientPrinting">
        <shortdesc>Create a raster item of the gradient or gradient mesh so that PostScript Level 2 printers can print the object.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="overprint">
        <datatype>
          <type href="#/PDFOverprint">PDFOverprint</type>
          <value>PDFOverprint.PRESERVEPDFOVERPRINT</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be saved.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PDFSaveOptions" dynamic="true">
    <shortdesc>Options which may be supplied when saving a document as a PDF file.</shortdesc>
    <elements type="class">
      <property name="pDFPreset">
        <shortdesc>The max string length is 255 bytes. Name of PDF preset to use.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="compatibility">
        <shortdesc>The version of the Acrobat file format to create.</shortdesc>
        <datatype>
          <type href="#/PDFCompatibility">PDFCompatibility</type>
          <value>PDFCompatibility.ACROBAT5</value>
        </datatype>
      </property>
      <property name="pDFXStandard">
        <shortdesc>This control includes the None option for when the user is not complying with any PDF standard.</shortdesc>
        <datatype>
          <type href="#/PDFXStandard">PDFXStandard</type>
          <value>PDFXStandard.PDFXNONE</value>
        </datatype>
      </property>
      <property name="pDFXStandardDescription">
        <shortdesc>This displays the description from the selected preset.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="preserveEditability">
        <shortdesc>Preserve Illustrator editing capabilities when saving the document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="generateThumbnails">
        <shortdesc>Generate thumbnails for the saved document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="optimization">
        <shortdesc>Should the PDF document be optimized for fast web viewing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="viewAfterSaving">
        <shortdesc>View PDF after saving.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="colorCompression">
        <shortdesc>How should color bitmap images be compressed.</shortdesc>
        <datatype>
          <type href="#/CompressionQuality">CompressionQuality</type>
          <value>CompressionQuality.None</value>
        </datatype>
      </property>
      <property name="colorTileSize">
        <shortdesc>Tile size when compressing with JPEG2000.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <value>256</value>
        </datatype>
      </property>
      <property name="colorDownsamplingMethod">
        <shortdesc>How should color bitmap images be resampled.</shortdesc>
        <datatype>
          <type href="#/DownsampleMethod">DownsampleMethod</type>
          <value>DownsampleMethod.NODOWNSAMPLE</value>
        </datatype>
      </property>
      <property name="colorDownsampling">
        <shortdesc>If zero, no downsampling, otherwise, the resolution to downsample color bitmap images to.</shortdesc>
        <datatype>
          <type>number</type>
          <value>150</value>
        </datatype>
      </property>
      <property name="colorDownsamplingImageThreshold">
        <shortdesc>Downsample if the image's resolution is above this value.</shortdesc>
        <datatype>
          <type>number</type>
          <value>225</value>
        </datatype>
      </property>
      <property name="grayscaleCompression">
        <shortdesc>How should grayscale bitmap images be compressed.</shortdesc>
        <datatype>
          <type href="#/CompressionQuality">CompressionQuality</type>
          <value>CompressionQuality.None</value>
        </datatype>
      </property>
      <property name="grayscaleTileSize">
        <shortdesc>Tile size when compressing with JPEG2000.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <value>256</value>
        </datatype>
      </property>
      <property name="grayscaleDownsamplingMethod">
        <shortdesc>How should grayscale bitmap images be resampled.</shortdesc>
        <datatype>
          <type href="#/DownsampleMethod">DownsampleMethod</type>
          <value>DownsampleMethod.NODOWNSAMPLE</value>
        </datatype>
      </property>
      <property name="grayscaleDownsampling">
        <shortdesc>If zero, no downsampling, otherwise, the resolution to downsample grayscale images to.</shortdesc>
        <datatype>
          <type>number</type>
          <value>150</value>
        </datatype>
      </property>
      <property name="grayscaleDownsamplingImageThreshold">
        <shortdesc>Downsample if the image's resolution is above this value.</shortdesc>
        <datatype>
          <type>number</type>
          <value>225</value>
        </datatype>
      </property>
      <property name="monochromeCompression">
        <shortdesc>How should monochrome bitmap images be compressed.</shortdesc>
        <datatype>
          <type href="#/MonochromeCompression">MonochromeCompression</type>
          <value>MonochromeCompression.None</value>
        </datatype>
      </property>
      <property name="monochromeDownsamplingMethod">
        <shortdesc>How should monochrome bitmap images be resampled.</shortdesc>
        <datatype>
          <type href="#/DownsampleMethod">DownsampleMethod</type>
          <value>DownsampleMethod.NODOWNSAMPLE</value>
        </datatype>
      </property>
      <property name="monochromeDownsampling">
        <shortdesc>If zero, no downsampling, otherwise, the resolution to downsample images to.</shortdesc>
        <datatype>
          <type>number</type>
          <value>300</value>
        </datatype>
      </property>
      <property name="monochromeDownsamplingImageThreshold">
        <shortdesc>Downsample if the image's resolution is above this value.</shortdesc>
        <datatype>
          <type>number</type>
          <value>450</value>
        </datatype>
      </property>
      <property name="compressArt">
        <shortdesc>Should line art and text be compressed?</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="trimMarks">
        <shortdesc>Draw trim marks.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="registrationMarks">
        <shortdesc>Draw registration marks.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="colorBars">
        <shortdesc>Draw color bars.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="pageInformation">
        <shortdesc>Draw page information.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="pageMarksType">
        <shortdesc>The page marks style.</shortdesc>
        <datatype>
          <type href="#/PageMarksTypes">PageMarksTypes</type>
          <value>PageMarksTypes.Roman</value>
        </datatype>
      </property>
      <property name="trimMarkWeight">
        <shortdesc>Trim mark weight.</shortdesc>
        <datatype>
          <type href="#/PDFTrimMarkWeight">PDFTrimMarkWeight</type>
          <value>PDFTrimMarkWeight.TRIMMARKWEIGHT0125</value>
        </datatype>
      </property>
      <property name="offset">
        <shortdesc>Custom offset (in points) for using the custom paper.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="bleedOffsetRect">
        <shortdesc>The bleed offset rect.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="bleedLink">
        <shortdesc>Link 4 bleed values.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="colorConversionID">
        <shortdesc>PDF color conversion policy. Three choices are available: (1)No Color Conversion (2) Repurpose (3) Convert to Destination.</shortdesc>
        <datatype>
          <type href="#/ColorConversion">ColorConversion</type>
          <value>ColorConversion.None</value>
        </datatype>
      </property>
      <property name="colorDestinationID">
        <shortdesc>When NoColorConversion is specified for Color Conversion, NoColorDestination is set.</shortdesc>
        <datatype>
          <type href="#/ColorDestination">ColorDestination</type>
          <value>ColorDestination.None</value>
        </datatype>
      </property>
      <property name="colorProfileID">
        <shortdesc>If CMS is off, Don't Include Profiles is set.</shortdesc>
        <datatype>
          <type href="#/ColorProfile">ColorProfile</type>
          <value>ColorProfile.None</value>
        </datatype>
      </property>
      <property name="outputIntentProfile">
        <shortdesc>When CMS is on, the output intent profile is the same profile selected for Destination in the Color group box.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="outputCondition">
        <shortdesc>This is an optional comment which, if present, is added to the PDF file and describes the intended printing condition.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="outputConditionID">
        <shortdesc>If selected for Output Intent Profile Name, you can set the name of a registered printing condition.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="registryName">
        <shortdesc>URL to the site where the specified output condition is registered. No validation is performed on the URL.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="trapped">
        <shortdesc>This indicates if manual trapping has been prepared in the document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="fontSubsetThreshold">
        <shortdesc>Include a subset of fonts when less than this percentage of characters are used.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <max>100</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="flattenerPreset">
        <shortdesc>The transparency flattener preset name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="flattenerOptions">
        <shortdesc>The printing flattener options.</shortdesc>
        <datatype>
          <type href="#/PrintFlattenerOptions">PrintFlattenerOptions</type>
        </datatype>
      </property>
      <property name="printerResolution">
        <shortdesc>Flattening printer resolution.</shortdesc>
        <datatype>
          <type>number</type>
          <value>800</value>
        </datatype>
      </property>
      <property name="acrobatLayers">
        <shortdesc>Create acrobat layers from top-level layers - acrobat 6 only option.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="requireDocumentPassword">
        <shortdesc>Require a password to open the document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="documentPassword">
        <shortdesc>A password string to open the document.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="requirePermissionPassword">
        <shortdesc>Use a password to restrict editing security settings.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="permissionPassword">
        <shortdesc>A password string to restrict editing security settings.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
      <property name="pDFAllowPrinting">
        <shortdesc>PDF security printing permission.</shortdesc>
        <datatype>
          <type href="#/PDFPrintAllowedEnum">PDFPrintAllowedEnum</type>
          <value>PDFPrintAllowedEnum.PRINT128HIGHRESOLUTION</value>
        </datatype>
      </property>
      <property name="pDFChangesAllowed">
        <shortdesc>PDF security changes allowed.</shortdesc>
        <datatype>
          <type href="#/PDFChangesAllowedEnum">PDFChangesAllowedEnum</type>
          <value>PDFChangesAllowedEnum.CHANGE128ANYCHANGES</value>
        </datatype>
      </property>
      <property name="enableCopy">
        <shortdesc>Enable copying of text 128-bit.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="enableAccess">
        <shortdesc>Enable accessing 128-bit.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="enablePlainText">
        <shortdesc>Enable plaintext metadata 128-bit - available only for acrobat 6.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="enableCopyAccess">
        <shortdesc>Enable copying and accessing 40-bit.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>Considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="IllustratorSaveOptions" dynamic="true">
    <shortdesc>Options which may be supplied when saving a document as an Illustrator file.</shortdesc>
    <elements type="class">
      <property name="compatibility">
        <shortdesc>What Illustrator file format version to create.</shortdesc>
        <datatype>
          <type href="#/Compatibility">Compatibility</type>
          <value>Compatibility.ILLUSTRATOR17</value>
        </datatype>
      </property>
      <property name="fontSubsetThreshold">
        <shortdesc>Include a subset of fonts when less than this percentage of characters are used (version 9 or later)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <max>100</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="embedICCProfile">
        <shortdesc>Embed the document's ICC profile in the saved file (version 9 or later)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="embedLinkedFiles">
        <shortdesc>Are linked image files to be included in the saved document (versions 7 or later)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="flattenOutput">
        <shortdesc>How should transparency be flattened for older file format versions (pre-version 9)</shortdesc>
        <datatype>
          <type href="#/OutputFlattening">OutputFlattening</type>
          <value>OutputFlattening.PRESERVEAPPEARANCE</value>
        </datatype>
      </property>
      <property name="pdfCompatible">
        <shortdesc>Save as a PDF compatible file (version 10 or later)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="compressed">
        <shortdesc>Should the saved file be compressed (version 10 or later)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be saved.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true ,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Matrix" dynamic="true">
    <elements type="class">
      <property name="mValueA">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="mValueB">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="mValueC">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="mValueD">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="mValueTX">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="mValueTY">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensItemToExport" dynamic="true">
    <shortdesc>An item that needs to be exported; for example, a document, artboard, or asset.</shortdesc>
    <elements type="class">
      <property name="artboards">
        <shortdesc>Range of artboards to export [possible values: '', 'all'(default), range]</shortdesc>
        <datatype>
          <type>string</type>
          <value>all</value>
        </datatype>
      </property>
      <property name="assets">
        <shortdesc>Array of asset id to export (default:empty)</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <array />
        </datatype>
      </property>
      <property name="document">
        <shortdesc>Whether to export the document or not.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensOptionsJPEG" dynamic="true">
    <shortdesc>Options which may be provided when exporting a document as a JPEG100 file.</shortdesc>
    <elements type="class">
      <property name="compressionMethod">
        <shortdesc>Should the image be compressed.</shortdesc>
        <datatype>
          <type href="#/JPEGCompressionMethodType">JPEGCompressionMethodType</type>
          <value>JPEGCompressionMethodType.BASELINESTANDARD</value>
        </datatype>
      </property>
      <property name="progressiveScan">
        <shortdesc>Specify the number of detailed scans when downloading a JPEG file using the Progressive option as the CompressionMethod.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>3</min>
          <max>5</max>
          <value>3</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type href="#/AntiAliasingMethod">AntiAliasingMethod</type>
          <value>AntiAliasingMethod.ARTOPTIMIZED</value>
        </datatype>
      </property>
      <property name="embedICCProfile">
        <shortdesc>Embed an ICC profile when exporting.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="scaleType">
        <shortdesc>How should the resulting image be scaled.</shortdesc>
        <datatype>
          <type href="#/ExportForScreensScaleType">ExportForScreensScaleType</type>
          <value>ExportForScreensScaleType.SCALEBYFACTOR</value>
        </datatype>
      </property>
      <property name="scaleTypeValue">
        <shortdesc>The value by which the resulting image should be scaled.</shortdesc>
        <datatype>
          <type>number</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensOptionsPNG8" dynamic="true">
    <shortdesc>Options which may be provided when exporting a document as an 8 bit PNG file.</shortdesc>
    <elements type="class">
      <property name="colorCount">
        <shortdesc>Number of colors in exported color table.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>2</min>
          <max>256</max>
          <value>128</value>
        </datatype>
      </property>
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="interlaced">
        <shortdesc>Should the resulting image be interlaced.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="matte">
        <shortdesc>Should the artboard be matted with a color.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="matteColor">
        <shortdesc>The color to use when matting the artboard (default: white)</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type href="#/AntiAliasingMethod">AntiAliasingMethod</type>
          <value>AntiAliasingMethod.ARTOPTIMIZED</value>
        </datatype>
      </property>
      <property name="scaleType">
        <shortdesc>How should the resulting image be scaled.</shortdesc>
        <datatype>
          <type href="#/ExportForScreensScaleType">ExportForScreensScaleType</type>
          <value>ExportForScreensScaleType.SCALEBYFACTOR</value>
        </datatype>
      </property>
      <property name="scaleTypeValue">
        <shortdesc>The value by which the resulting image should be scaled.</shortdesc>
        <datatype>
          <type>number</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensOptionsPNG24" dynamic="true">
    <shortdesc>Options which may be provided when exporting a document as an 24 bit PNG file.</shortdesc>
    <elements type="class">
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type href="#/AntiAliasingMethod">AntiAliasingMethod</type>
          <value>AntiAliasingMethod.ARTOPTIMIZED</value>
        </datatype>
      </property>
      <property name="backgroundBlack">
        <shortdesc>Should the resulting image rasterize against a black background (with value true) or white background(with value false) if it doesn't use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="interlaced">
        <shortdesc>Should the resulting image be interlaced.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="scaleType">
        <shortdesc>How should the resulting image be scaled.</shortdesc>
        <datatype>
          <type href="#/ExportForScreensScaleType">ExportForScreensScaleType</type>
          <value>ExportForScreensScaleType.SCALEBYFACTOR</value>
        </datatype>
      </property>
      <property name="scaleTypeValue">
        <shortdesc>The value by which the resulting image should be scaled.</shortdesc>
        <datatype>
          <type>number</type>
          <value>1</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensOptionsWebOptimizedSVG" dynamic="true">
    <shortdesc>Options which may be provided when exporting a document as a web optimized SVG file.</shortdesc>
    <elements type="class">
      <property name="fontType">
        <shortdesc>The type of font that should be included in the exported file.</shortdesc>
        <datatype>
          <type href="#/SVGFontType">SVGFontType</type>
          <value>SVGFontType.SVGFONT</value>
        </datatype>
      </property>
      <property name="coordinatePrecision">
        <shortdesc>Decimal precision for element coordinate values.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
          <max>7</max>
          <value>3</value>
        </datatype>
      </property>
      <property name="cssProperties">
        <shortdesc>How should the CSS properties of the document be included in the document.</shortdesc>
        <datatype>
          <type href="#/SVGCSSPropertyLocation">SVGCSSPropertyLocation</type>
          <value>SVGCSSPropertyLocation.STYLEATTRIBUTES</value>
        </datatype>
      </property>
      <property name="svgId">
        <shortdesc>How object names (IDs) are generated in exported SVG.</shortdesc>
        <datatype>
          <type href="#/SVGIdType">SVGIdType</type>
          <value>SVGIdType.SVGIDREGULAR</value>
        </datatype>
      </property>
      <property name="svgMinify">
        <shortdesc>Reduces the size of the svg.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="svgResponsive">
        <shortdesc>Makes the SVG Responsive.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="rasterImageLocation">
        <shortdesc>Should the raster images in the exported file be included.</shortdesc>
        <datatype>
          <type href="#/RasterImageLocation">RasterImageLocation</type>
          <value>RasterImageLocation.PRESERVE</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportForScreensPDFOptions" dynamic="true">
    <shortdesc>Options which may be provided when exporting a document as a PDF file.</shortdesc>
    <elements type="class">
      <property name="pdfPreset">
        <shortdesc>The max string length is 255 bytes. Name of PDF preset to use.</shortdesc>
        <datatype>
          <type>string</type>
          <value>[Smallest File Size]</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsJPEG" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as a JPEG file.</shortdesc>
    <elements type="class">
      <property name="qualitySetting">
        <shortdesc>Quality of resulting image.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>30</value>
        </datatype>
      </property>
      <property name="optimization">
        <shortdesc>Should the image be optimized for web viewing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="blurAmount">
        <shortdesc>Blur the resulting image this much.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>2.0</max>
          <value>0</value>
        </datatype>
      </property>
      <property name="matte">
        <shortdesc>Should the artboard be matted with a color.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="matteColor">
        <shortdesc>The color to use when matting the artboard (default: white)</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="horizontalScale">
        <shortdesc>Horizontal scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>776.19</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="verticalScale">
        <shortdesc>Vertical scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>776.19</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="artBoardClipping">
        <shortdesc>Should the resulting image be clipped to the artboard.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveAsHTML">
        <shortdesc>Should the resulting image be saved as HTML.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsPNG8" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as an 8 bit PNG file.</shortdesc>
    <elements type="class">
      <property name="colorCount">
        <shortdesc>Number of colors in exported color table.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>2</min>
          <max>256</max>
          <value>128</value>
        </datatype>
      </property>
      <property name="colorReduction">
        <shortdesc>Method used to reduce the number of colors.</shortdesc>
        <datatype>
          <type href="#/ColorReductionMethod">ColorReductionMethod</type>
          <value>ColorReductionMethod.SELECTIVE</value>
        </datatype>
      </property>
      <property name="colorDither">
        <shortdesc>Method used to dither colors.</shortdesc>
        <datatype>
          <type href="#/ColorDitherMethod">ColorDitherMethod</type>
          <value>ColorDitherMethod.DIFFUSION</value>
        </datatype>
      </property>
      <property name="ditherPercent">
        <shortdesc>How much should the colors be dithered.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>100</max>
          <value>88</value>
        </datatype>
      </property>
      <property name="webSnap">
        <shortdesc>How much should the color table be changed to match the web palette.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>100</max>
          <value>0</value>
        </datatype>
      </property>
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="interlaced">
        <shortdesc>Should the resulting image be interlaced.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="matte">
        <shortdesc>Should the artboard be matted with a color.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="matteColor">
        <shortdesc>The color to use when matting the artboard (default: white)</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="horizontalScale">
        <shortdesc>Horizontal scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <value>100</value>
        </datatype>
      </property>
      <property name="verticalScale">
        <shortdesc>Vertical scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <value>100</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="artBoardClipping">
        <shortdesc>Should the resulting image be clipped to the artboard.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveAsHTML">
        <shortdesc>Should the resulting image be saved as HTML.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsPNG24" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as an 24 bit PNG file.</shortdesc>
    <elements type="class">
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="matte">
        <shortdesc>Should the artboard be matted with a color.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="matteColor">
        <shortdesc>The color to use when matting the artboard (default: white)</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="horizontalScale">
        <shortdesc>Horizontal scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <value>100</value>
        </datatype>
      </property>
      <property name="verticalScale">
        <shortdesc>Vertical scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <value>100</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="artBoardClipping">
        <shortdesc>Should the resulting image be clipped to the artboard.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveAsHTML">
        <shortdesc>Should the resulting image be saved as HTML.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="dimensions">
        <shortdesc>Dimensions in which to contain the resulting raster.</shortdesc>
        <datatype>
          <type href="#/Dimensions">Dimensions</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsGIF" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as a GIF file.</shortdesc>
    <elements type="class">
      <property name="colorCount">
        <shortdesc>Number of colors in exported color table.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>2</min>
          <max>256</max>
          <value>128</value>
        </datatype>
      </property>
      <property name="colorReduction">
        <shortdesc>Method used to reduce the number of colors.</shortdesc>
        <datatype>
          <type href="#/ColorReductionMethod">ColorReductionMethod</type>
          <value>ColorReductionMethod.SELECTIVE</value>
        </datatype>
      </property>
      <property name="infoLossPercent">
        <shortdesc>Level of information loss during compression.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>100</max>
          <value>0</value>
        </datatype>
      </property>
      <property name="colorDither">
        <shortdesc>Method used to dither colors.</shortdesc>
        <datatype>
          <type href="#/ColorDitherMethod">ColorDitherMethod</type>
          <value>ColorDitherMethod.DIFFUSION</value>
        </datatype>
      </property>
      <property name="ditherPercent">
        <shortdesc>How much should the colors be dithered.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>100</max>
          <value>88</value>
        </datatype>
      </property>
      <property name="webSnap">
        <shortdesc>How much should the color table be changed to match the web pallet.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>100</max>
          <value>0</value>
        </datatype>
      </property>
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="interlaced">
        <shortdesc>Should the resulting image be interlaced.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="matte">
        <shortdesc>Should the artboard be matted with a color.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="matteColor">
        <shortdesc>The color to use when matting the artboard (default: white)</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="horizontalScale">
        <shortdesc>Horizontal scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <value>100</value>
        </datatype>
      </property>
      <property name="verticalScale">
        <shortdesc>Vertical scaling factor.</shortdesc>
        <datatype>
          <type>number</type>
          <value>100</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="artBoardClipping">
        <shortdesc>Should the resulting image be clipped to the artboard.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveAsHTML">
        <shortdesc>Should the resulting image be saved as HTML.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsPhotoshop" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as a Photoshop file.</shortdesc>
    <elements type="class">
      <property name="imageColorSpace">
        <shortdesc>The color space of the exported file.</shortdesc>
        <datatype>
          <type href="#/ImageColorSpace">ImageColorSpace</type>
          <value>ImageColorSpace.RGB</value>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>The resolution of the exported file.</shortdesc>
        <datatype>
          <type>number</type>
          <min>72.0</min>
          <max>2400.0</max>
          <value>150</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="writeLayers">
        <shortdesc>Preserve document layers when exporting.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="editableText">
        <shortdesc>Export text objects as editable text layers.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="embedICCProfile">
        <shortdesc>Embed an ICC profile when exporting.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="warnings">
        <shortdesc>Should a warning dialog be displayed because of conflicts in the export settings.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="maximumEditability">
        <shortdesc>Preserve as much of the original document's structure as possible when exporting.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be exported.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsSVG" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as an SVG file.</shortdesc>
    <elements type="class">
      <property name="DTD">
        <shortdesc>The version of DTD that the exported file should be conforming to.</shortdesc>
        <datatype>
          <type href="#/SVGDTDVersion">SVGDTDVersion</type>
          <value>SVGDTDVersion.SVG1_1</value>
        </datatype>
      </property>
      <property name="fontType">
        <shortdesc>The type of font that should be included in the exported file.</shortdesc>
        <datatype>
          <type href="#/SVGFontType">SVGFontType</type>
          <value>SVGFontType.SVGFONT</value>
        </datatype>
      </property>
      <property name="fontSubsetting">
        <shortdesc>What font glyphs should be included in the exported file.</shortdesc>
        <datatype>
          <type href="#/SVGFontSubsetting">SVGFontSubsetting</type>
          <value>SVGFontSubsetting.ALLGLYPHS</value>
        </datatype>
      </property>
      <property name="embedRasterImages">
        <shortdesc>Should the raster images in the exported file be included.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="coordinatePrecision">
        <shortdesc>Decimal precision for element coordinate values.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
          <max>7</max>
          <value>3</value>
        </datatype>
      </property>
      <property name="documentEncoding">
        <shortdesc>How should the text in the document be encoded.</shortdesc>
        <datatype>
          <type href="#/SVGDocumentEncoding">SVGDocumentEncoding</type>
          <value>SVGDocumentEncoding.ASCII</value>
        </datatype>
      </property>
      <property name="cssProperties">
        <shortdesc>How should the CSS properties of the document be included in the document.</shortdesc>
        <datatype>
          <type href="#/SVGCSSPropertyLocation">SVGCSSPropertyLocation</type>
          <value>SVGCSSPropertyLocation.STYLEATTRIBUTES</value>
        </datatype>
      </property>
      <property name="compressed">
        <shortdesc>Should the exported file be compressed.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="optimizeForSVGViewer">
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeVariablesAndDatasets">
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeFileInfo">
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeUnusedStyles">
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="slices">
        <shortdesc>Preserve slice data in exported document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="preserveEditability">
        <shortdesc>Preserve Illustrator editing capabilities when exporting the document.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="sVGAutoKerning">
        <shortdesc>Is SVG auto kerning allowed?</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="sVGTextOnPath">
        <shortdesc>Is SVG text-on-path construct allowed?</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be saved.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsWebOptimizedSVG" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as a Web optimized SVG file.</shortdesc>
    <elements type="class">
      <property name="fontType">
        <shortdesc>The type of font that should be included in the exported file.</shortdesc>
        <datatype>
          <type href="#/SVGFontType">SVGFontType</type>
          <value>SVGFontType.SVGFONT</value>
        </datatype>
      </property>
      <property name="coordinatePrecision">
        <shortdesc>Decimal precision for element coordinate values.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
          <max>7</max>
          <value>3</value>
        </datatype>
      </property>
      <property name="cssProperties">
        <shortdesc>How should the CSS properties of the document be included in the document.</shortdesc>
        <datatype>
          <type href="#/SVGCSSPropertyLocation">SVGCSSPropertyLocation</type>
          <value>SVGCSSPropertyLocation.STYLEATTRIBUTES</value>
        </datatype>
      </property>
      <property name="svgId">
        <shortdesc>How object names (IDs) are generated in exported SVG.</shortdesc>
        <datatype>
          <type href="#/SVGIdType">SVGIdType</type>
          <value>SVGIdType.SVGIDREGULAR</value>
        </datatype>
      </property>
      <property name="svgMinify">
        <shortdesc>Reduces the size of the svg.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="svgResponsive">
        <shortdesc>Makes the SVG Responsive.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="rasterImageLocation">
        <shortdesc>Should the raster images in the exported file be included.</shortdesc>
        <datatype>
          <type href="#/RasterImageLocation">RasterImageLocation</type>
          <value>RasterImageLocation.PRESERVE</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be saved.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsFlash" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as an Flash (.SWF) file.</shortdesc>
    <elements type="class">
      <property name="exportStyle">
        <shortdesc>How should the Flash file be created.</shortdesc>
        <datatype>
          <type href="#/FlashExportStyle">FlashExportStyle</type>
          <value>FlashExportStyle.ASFLASHFILE</value>
        </datatype>
      </property>
      <property name="exportVersion">
        <shortdesc>Which version of SWF to export.</shortdesc>
        <datatype>
          <type href="#/FlashExportVersion">FlashExportVersion</type>
          <value>FlashExportVersion.FLASHVERSION9</value>
        </datatype>
      </property>
      <property name="frameRate">
        <shortdesc>When exporting layers to Flash frames.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.01</min>
          <max>120</max>
          <value>12</value>
        </datatype>
      </property>
      <property name="looping">
        <shortdesc>Should the Flash file be set to loop when run.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="readOnly">
        <shortdesc>Prevent the exported file from being imported by other applications.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artClipping">
        <shortdesc>How should the arts be clipped during the output.</shortdesc>
        <datatype>
          <type href="#/ArtClippingOption">ArtClippingOption</type>
          <value>ArtClippingOption.OUTPUTARTBOUNDS</value>
        </datatype>
      </property>
      <property name="curveQuality">
        <shortdesc>How much curve information should be preserved.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>10</max>
          <value>7</value>
        </datatype>
      </property>
      <property name="imageFormat">
        <shortdesc>How should the images in the exported Flash file be compressed.</shortdesc>
        <datatype>
          <type href="#/FlashImageFormat">FlashImageFormat</type>
          <value>FlashImageFormat.LOSSLESS</value>
        </datatype>
      </property>
      <property name="jpegQuality">
        <shortdesc>Level of compression.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>10</max>
          <value>3</value>
        </datatype>
      </property>
      <property name="jpegMethod">
        <shortdesc>What method to use.</shortdesc>
        <datatype>
          <type href="#/FlashJPEGMethod">FlashJPEGMethod</type>
          <value>FlashJPEGMethod.Standard</value>
        </datatype>
      </property>
      <property name="playbackAccess">
        <shortdesc>What access should the SWF file have - local or network access.</shortdesc>
        <datatype>
          <type href="#/FlashPlaybackSecurity">FlashPlaybackSecurity</type>
          <value>FlashPlaybackSecurity.PlaybackLocal</value>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>Pixels per inch.</shortdesc>
        <datatype>
          <type>number</type>
          <min>72</min>
          <max>2400</max>
          <value>72</value>
        </datatype>
      </property>
      <property name="replacing">
        <shortdesc>If a file with the same name already exists, should it be replaced?</shortdesc>
        <datatype>
          <type href="#/SaveOptions">SaveOptions</type>
          <value>SaveOptions.PROMPTTOSAVECHANGES</value>
        </datatype>
      </property>
      <property name="convertTextToOutlines">
        <shortdesc>Should all text be converted to outlines.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="compressed">
        <shortdesc>Should the exported file be compressed.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="backgroundColor">
        <shortdesc>The background color.</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="backgroundLayers">
        <shortdesc>A list of layers to be included as the static background in all exported Flash frames.</shortdesc>
        <datatype>
          <type href="#/Layer">Layer</type>
          <array />
        </datatype>
      </property>
      <property name="layerOrder">
        <shortdesc>The order in which the layers will be exported to Flash frames.</shortdesc>
        <datatype>
          <type href="#/LayerOrderType">LayerOrderType</type>
          <value>LayerOrderType.BOTTOMUP</value>
        </datatype>
      </property>
      <property name="blendAnimation">
        <shortdesc>Controls how the blend art objects are animated when export to Flash frames.</shortdesc>
        <datatype>
          <type href="#/BlendAnimationType">BlendAnimationType</type>
          <value>BlendAnimationType.NOBLENDANIMATION</value>
        </datatype>
      </property>
      <property name="ignoreTextKerning">
        <shortdesc>Should the kerning information for text objects be ignored.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="exportAllSymbols">
        <shortdesc>Should all symbol definitions in the palette be exported to the SWF File.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="preserveAppearance">
        <shortdesc>Choose whether to preserve artwork appearance or editability (default) during export.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeMetadata">
        <shortdesc>If true, include minimal XMP metadata in the exported file.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be exported.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsAutoCAD" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document to AutoCAD formats (.dwg or .dxf)</shortdesc>
    <elements type="class">
      <property name="exportFileFormat">
        <shortdesc>Which format to export the file as.</shortdesc>
        <datatype>
          <type href="#/AutoCADExportFileFormat">AutoCADExportFileFormat</type>
          <value>AutoCADExportFileFormat.DWG</value>
        </datatype>
      </property>
      <property name="version">
        <shortdesc>Release of AutoCAD to export to.</shortdesc>
        <datatype>
          <type href="#/AutoCADCompatibility">AutoCADCompatibility</type>
          <value>AutoCADCompatibility.AutoCADRelease24</value>
        </datatype>
      </property>
      <property name="unitScaleRatio">
        <shortdesc>Ratio by which to scale the output.</shortdesc>
        <datatype>
          <type>number</type>
          <value>1.0</value>
        </datatype>
      </property>
      <property name="unit">
        <shortdesc>Units from which to map.</shortdesc>
        <datatype>
          <type href="#/AutoCADUnit">AutoCADUnit</type>
          <value>AutoCADUnit.Millimeters</value>
        </datatype>
      </property>
      <property name="colors">
        <shortdesc>Number of colors to export into the AutoCAD file.</shortdesc>
        <datatype>
          <type href="#/AutoCADColors">AutoCADColors</type>
          <value>AutoCADColors.TrueColors</value>
        </datatype>
      </property>
      <property name="rasterFormat">
        <shortdesc>Raster format in which to export raster art.</shortdesc>
        <datatype>
          <type href="#/AutoCADRasterFormat">AutoCADRasterFormat</type>
          <value>AutoCADRasterFormat.PNG</value>
        </datatype>
      </property>
      <property name="exportOption">
        <shortdesc>Whether to preserve appearance or editability during export.</shortdesc>
        <datatype>
          <type href="#/AutoCADExportOption">AutoCADExportOption</type>
          <value>AutoCADExportOption.MaximumEditability</value>
        </datatype>
      </property>
      <property name="exportSelectedArtOnly">
        <shortdesc>Export selected art only.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="alterPathsForAppearance">
        <shortdesc>Alter paths for appearance.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="convertTextToOutlines">
        <shortdesc>Whether to convert text to outlines.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="scaleLineweights">
        <shortdesc>Whether to scale lineweights by the same amount as rest of the drawing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ExportOptionsTIFF" dynamic="true">
    <shortdesc>Options which may be supplied when exporting a document as a TIFF file.</shortdesc>
    <elements type="class">
      <property name="imageColorSpace">
        <shortdesc>The color space of the exported file.</shortdesc>
        <datatype>
          <type href="#/ImageColorSpace">ImageColorSpace</type>
          <value>ImageColorSpace.RGB</value>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>The resolution of the exported file.</shortdesc>
        <datatype>
          <type>number</type>
          <min>72.0</min>
          <max>2400.0</max>
          <value>150</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type href="#/AntiAliasingMethod">AntiAliasingMethod</type>
          <value>AntiAliasingMethod.ARTOPTIMIZED</value>
        </datatype>
      </property>
      <property name="lZWCompression">
        <shortdesc>Compress TIFF file with LZW Compression when exporting.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="byteOrder">
        <shortdesc>Mac or PC byte order when exporting.</shortdesc>
        <datatype>
          <type href="#/TIFFByteOrder">TIFFByteOrder</type>
          <value>TIFFByteOrder.IBMPC</value>
        </datatype>
      </property>
      <property name="embedICCProfile">
        <shortdesc>Embed an ICC profile when exporting.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="saveMultipleArtboards">
        <shortdesc>All the artboards or range of the artboards will be exported.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>If SaveMultipleArtboards is true,this will be considered for multi-asset extraction which specifies artboard range.Empty string will extracts all the artboards.Default is empty string.</shortdesc>
        <datatype>
          <type>string</type>
          <value></value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Color" dynamic="true">
    <shortdesc>The parent class for all color values used in Illustrator. See the specific color classes for more information.</shortdesc>
    <elements type="class" />
  </classdef>
  <classdef name="LabColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>An Lab color specification.</shortdesc>
    <elements type="class">
      <property name="l">
        <shortdesc>The L color value (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="a">
        <shortdesc>The a color value (between -128.0 and 127.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>-128.0</min>
          <max>127.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="b">
        <shortdesc>The b color value (between -128.0 and 127.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>-128.0</min>
          <max>127.0</max>
          <value>0.0</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Dimensions" dynamic="true">
    <shortdesc>Dimensions (height and width)</shortdesc>
    <elements type="class">
      <property name="width">
        <shortdesc>The Width parameter.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The Height parameter.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RGBColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>An RGB color specification.</shortdesc>
    <elements type="class">
      <property name="red">
        <shortdesc>The red color value (between 0.0 and 255.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>255.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="green">
        <shortdesc>The green color value (between 0.0 and 255.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>255.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="blue">
        <shortdesc>The blue color value (between 0.0 and 255.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>255.0</max>
          <value>0.0</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="CMYKColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>A CMYK color specification.</shortdesc>
    <elements type="class">
      <property name="cyan">
        <shortdesc>The cyan color value (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="magenta">
        <shortdesc>The magenta color value (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="yellow">
        <shortdesc>The yellow color value (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>0.0</value>
        </datatype>
      </property>
      <property name="black">
        <shortdesc>The black color value (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>0.0</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="GrayColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>A gray color specification.</shortdesc>
    <elements type="class">
      <property name="gray">
        <shortdesc>The gray value (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>0.0</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="NoColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>Represents the 'none' color.</shortdesc>
    <elements type="class" />
  </classdef>
  <classdef name="SpotColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>Information about the spot color.</shortdesc>
    <elements type="class">
      <property name="tint">
        <shortdesc>Percentage level of tint to be applied to the spot color.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
          <value>100.0</value>
        </datatype>
      </property>
      <property name="spot">
        <datatype>
          <type href="#/Spot">Spot</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PatternColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>A Pattern color specification.</shortdesc>
    <elements type="class">
      <property name="shiftDistance">
        <shortdesc>The distance to translate the (unscaled) prototype before filling.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="shiftAngle">
        <shortdesc>The angle to translate the (unscaled) prototype before filling.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="scaleFactor">
        <shortdesc>The fraction to scale the prototype before filling.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="rotation">
        <shortdesc>The angle to rotate the before filling.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="reflect">
        <shortdesc>Whether or not the prototype is reflected before filling.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="reflectAngle">
        <shortdesc>The axis around which to reflect.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="shearAngle">
        <shortdesc>The angle to slant the shear by.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="shearAxis">
        <shortdesc>The axis to shear with respect to.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="matrix">
        <shortdesc>Additional transformation arising from manipulating the path.</shortdesc>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </property>
      <property name="pattern">
        <datatype>
          <type href="#/Pattern">Pattern</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="GradientColor" dynamic="true">
    <superclass>Color</superclass>
    <shortdesc>A Gradient color specification.</shortdesc>
    <elements type="class">
      <property name="origin">
        <shortdesc>The gradient vector origin.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="angle">
        <shortdesc>The gradient vector angle.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="length">
        <shortdesc>The gradient vector length.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="hiliteAngle">
        <shortdesc>The gradient hilite vector angle.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="hiliteLength">
        <shortdesc>The gradient hilite vector length.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="matrix">
        <shortdesc>Additional transformation arising from manipulating the path.</shortdesc>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </property>
      <property name="gradient">
        <shortdesc>Reference to the object defining the gradient.</shortdesc>
        <datatype>
          <type href="#/Gradient">Gradient</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TabStopInfo" dynamic="true">
    <shortdesc>Tab stop information (returned by tab stops from a paragraph object)</shortdesc>
    <elements type="class">
      <property name="alignment">
        <shortdesc>The alignment of the tab stop.</shortdesc>
        <datatype>
          <type href="#/TabStopAlignment">TabStopAlignment</type>
          <value>TabStopAlignment.Left</value>
        </datatype>
      </property>
      <property name="decimalCharacter">
        <shortdesc>The character used for decimal tab stops.</shortdesc>
        <datatype>
          <type>string</type>
          <value>.</value>
        </datatype>
      </property>
      <property name="position">
        <shortdesc>The position of the tab stop expressed in points.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="leader">
        <shortdesc>The leader dot.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Printer" dynamic="true">
    <shortdesc>An installed printer.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The printer name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="printerInfo">
        <shortdesc>The printer information.</shortdesc>
        <datatype>
          <type href="#/PrinterInfo">PrinterInfo</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrinterInfo" dynamic="true">
    <shortdesc>Printer information.</shortdesc>
    <elements type="class">
      <property name="printerType">
        <shortdesc>The printer type.</shortdesc>
        <datatype>
          <type href="#/PrinterTypeEnum">PrinterTypeEnum</type>
        </datatype>
      </property>
      <property name="postScriptLevel">
        <shortdesc>The PostScript level.</shortdesc>
        <datatype>
          <type href="#/PrinterPostScriptLevelEnum">PrinterPostScriptLevelEnum</type>
        </datatype>
      </property>
      <property name="colorSupport">
        <shortdesc>The printer color capability.</shortdesc>
        <datatype>
          <type href="#/PrinterColorMode">PrinterColorMode</type>
        </datatype>
      </property>
      <property name="deviceResolution">
        <shortdesc>The printer default resolution.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maxDeviceResolution">
        <shortdesc>The printer maximum device resolution.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="inRIPSeparationSupport">
        <shortdesc>Does the printer support InRIP color separation?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="binaryPrintingSupport">
        <shortdesc>Does the printer support binary printing?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="paperSizes">
        <shortdesc>The list of supported paper sizes.</shortdesc>
        <datatype>
          <type href="#/Paper">Paper</type>
          <array />
        </datatype>
      </property>
      <property name="customPaperSupport">
        <shortdesc>Does the printer support custom paper size?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="customPaperTransverseSupport">
        <shortdesc>Does the printer support custom paper transverse?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="minPaperWidth">
        <shortdesc>Custom paper's minimum width.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maxPaperWidth">
        <shortdesc>Custom paper's maximum width.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="minPaperHeight">
        <shortdesc>Custom paper's minimum height.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maxPaperHeight">
        <shortdesc>Custom paper's maximum height.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="minPaperHeightOffset">
        <shortdesc>Custom paper's minimum height offset.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maxPaperHeightOffset">
        <shortdesc>Custom paper's maximum height offset.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="minPaperWidthOffset">
        <shortdesc>Custom paper's minimum width offset.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maxPaperWidthOffset">
        <shortdesc>Custom paper's maximum width offset.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PPDFile" dynamic="true">
    <shortdesc>A PPD file.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The PPD model name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="PPDInfo">
        <shortdesc>The PPD file information.</shortdesc>
        <datatype>
          <type href="#/PPDFileInfo">PPDFileInfo</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PPDFileInfo" dynamic="true">
    <shortdesc>PPD file information.</shortdesc>
    <elements type="class">
      <property name="languageLevel">
        <shortdesc>The PostScript language level.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="PPDFilePath">
        <shortdesc>Path specification for the PPD file.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="screenList">
        <shortdesc>List of color separation screens.</shortdesc>
        <datatype>
          <type href="#/Screen">Screen</type>
          <array />
        </datatype>
      </property>
      <property name="screenSpotFunctionList">
        <shortdesc>List of color separation screen spot functions.</shortdesc>
        <datatype>
          <type href="#/ScreenSpotFunction">ScreenSpotFunction</type>
          <array />
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Paper" dynamic="true">
    <shortdesc>Paper size.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The paper name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="paperInfo">
        <shortdesc>The paper information.</shortdesc>
        <datatype>
          <type href="#/PaperInfo">PaperInfo</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PaperInfo" dynamic="true">
    <shortdesc>Paper information.</shortdesc>
    <elements type="class">
      <property name="width">
        <shortdesc>The paper's width (in points)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The paper's height (in points)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="imageableArea">
        <shortdesc>The imageable area.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="customPaper">
        <shortdesc>Is it a custom paper?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Screen" dynamic="true">
    <shortdesc>Color separation screen.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The color separation screen name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="screenInfo">
        <shortdesc>The color separation screen information.</shortdesc>
        <datatype>
          <type href="#/ScreenInfo">ScreenInfo</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ScreenInfo" dynamic="true">
    <shortdesc>Screen information.</shortdesc>
    <elements type="class">
      <property name="defaultScreen">
        <shortdesc>Is it the default screen?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="frequency">
        <shortdesc>The screen's frequency.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="angle">
        <shortdesc>The screen's angle (in degrees)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ScreenSpotFunction" dynamic="true">
    <shortdesc>Color separation screen spot function.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The color separation screen spot function name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="spotFunction">
        <shortdesc>The spot function in terms of the PostScript commands.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Ink" dynamic="true">
    <shortdesc>Printer's ink.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The ink's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="inkInfo">
        <shortdesc>The ink information.</shortdesc>
        <datatype>
          <type href="#/InkInfo">InkInfo</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="InkInfo" dynamic="true">
    <shortdesc>Ink information.</shortdesc>
    <elements type="class">
      <property name="printingStatus">
        <shortdesc>The ink printing status.</shortdesc>
        <datatype>
          <type href="#/InkPrintStatus">InkPrintStatus</type>
        </datatype>
      </property>
      <property name="kind">
        <shortdesc>The ink type.</shortdesc>
        <datatype>
          <type href="#/InkType">InkType</type>
        </datatype>
      </property>
      <property name="trapping">
        <shortdesc>The trapping type.</shortdesc>
        <datatype>
          <type href="#/TrappingType">TrappingType</type>
        </datatype>
      </property>
      <property name="trappingOrder">
        <shortdesc>The order of trapping for the ink.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
        </datatype>
      </property>
      <property name="density">
        <shortdesc>The neutral density.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
        </datatype>
      </property>
      <property name="frequency">
        <shortdesc>The ink's frequency.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
        </datatype>
      </property>
      <property name="angle">
        <shortdesc>The ink's screen angle (in degrees)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="customColor">
        <shortdesc>The color of the custom ink.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="dotShape">
        <shortdesc>The dot shape name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="DocumentPreset" dynamic="true">
    <shortdesc>The new document preset to use for creating a new document.</shortdesc>
    <elements type="class">
      <property name="title">
        <shortdesc>The title for the new document.</shortdesc>
        <datatype>
          <type>string</type>
          <value>Untitled</value>
        </datatype>
      </property>
      <property name="width">
        <shortdesc>The width for the new document.</shortdesc>
        <datatype>
          <type>number</type>
          <value>612.0</value>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The height for the new document.</shortdesc>
        <datatype>
          <type>number</type>
          <value>792.0</value>
        </datatype>
      </property>
      <property name="numArtboards">
        <shortdesc>Number of artboards for new document.Range (1:100).</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="artboardLayout">
        <shortdesc>Layout for artboards.</shortdesc>
        <datatype>
          <type href="#/DocumentArtboardLayout">DocumentArtboardLayout</type>
          <value>DocumentArtboardLayout.GridByRow</value>
        </datatype>
      </property>
      <property name="artboardSpacing">
        <shortdesc>Spacing between artboards.</shortdesc>
        <datatype>
          <type>number</type>
          <value>20.0</value>
        </datatype>
      </property>
      <property name="artboardRowsOrCols">
        <shortdesc>Number of rows (for rows layout) OR column(for column layouts)of artboards.Range is 1 to (docNumArtboards - 1) or 1 for single row or column layouts.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <value>1</value>
        </datatype>
      </property>
      <property name="colorMode">
        <shortdesc>The color mode for the new document.</shortdesc>
        <datatype>
          <type href="#/DocumentColorSpace">DocumentColorSpace</type>
          <value>DocumentColorSpace.CMYK</value>
        </datatype>
      </property>
      <property name="units">
        <shortdesc>The units for the new document.</shortdesc>
        <datatype>
          <type href="#/RulerUnits">RulerUnits</type>
          <value>RulerUnits.Points</value>
        </datatype>
      </property>
      <property name="previewMode">
        <shortdesc>The preview mode for the new document.</shortdesc>
        <datatype>
          <type href="#/DocumentPreviewMode">DocumentPreviewMode</type>
          <value>DocumentPreviewMode.DefaultPreview</value>
        </datatype>
      </property>
      <property name="rasterResolution">
        <shortdesc>The raster resolution for the new document.</shortdesc>
        <datatype>
          <type href="#/DocumentRasterResolution">DocumentRasterResolution</type>
          <value>DocumentRasterResolution.ScreenResolution</value>
        </datatype>
      </property>
      <property name="transparencyGrid">
        <shortdesc>The transparency grid for the new document.</shortdesc>
        <datatype>
          <type href="#/DocumentTransparencyGrid">DocumentTransparencyGrid</type>
          <value>DocumentTransparencyGrid.TransparencyGridNone</value>
        </datatype>
      </property>
      <property name="documentBleedOffset">
        <shortdesc>Document bleed offset rect.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="documentBleedLink">
        <shortdesc>Document link for bleed values.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintOptions" dynamic="true">
    <shortdesc>The print options.</shortdesc>
    <elements type="class">
      <property name="printerName">
        <shortdesc>The name of the printer to print to.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="PPDName">
        <shortdesc>The name of the PPD to use.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="printPreset">
        <shortdesc>The name of a print preset to use.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="flattenerPreset">
        <shortdesc>The transparency flattener preset name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="paperOptions">
        <shortdesc>The paper options.</shortdesc>
        <datatype>
          <type href="#/PrintPaperOptions">PrintPaperOptions</type>
        </datatype>
      </property>
      <property name="jobOptions">
        <shortdesc>The printing job options.</shortdesc>
        <datatype>
          <type href="#/PrintJobOptions">PrintJobOptions</type>
        </datatype>
      </property>
      <property name="colorSeparationOptions">
        <shortdesc>The printing color separation options.</shortdesc>
        <datatype>
          <type href="#/PrintColorSeparationOptions">PrintColorSeparationOptions</type>
        </datatype>
      </property>
      <property name="coordinateOptions">
        <shortdesc>The printing coordinate options.</shortdesc>
        <datatype>
          <type href="#/PrintCoordinateOptions">PrintCoordinateOptions</type>
        </datatype>
      </property>
      <property name="pageMarksOptions">
        <shortdesc>The printing page marks options.</shortdesc>
        <datatype>
          <type href="#/PrintPageMarksOptions">PrintPageMarksOptions</type>
        </datatype>
      </property>
      <property name="fontOptions">
        <shortdesc>The printing font options.</shortdesc>
        <datatype>
          <type href="#/PrintFontOptions">PrintFontOptions</type>
        </datatype>
      </property>
      <property name="postScriptOptions">
        <shortdesc>The printing PostScript options.</shortdesc>
        <datatype>
          <type href="#/PrintPostScriptOptions">PrintPostScriptOptions</type>
        </datatype>
      </property>
      <property name="colorManagementOptions">
        <shortdesc>The printing color management options.</shortdesc>
        <datatype>
          <type href="#/PrintColorManagementOptions">PrintColorManagementOptions</type>
        </datatype>
      </property>
      <property name="flattenerOptions">
        <shortdesc>The printing flattener options.</shortdesc>
        <datatype>
          <type href="#/PrintFlattenerOptions">PrintFlattenerOptions</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintPaperOptions" dynamic="true">
    <shortdesc>The paper options.</shortdesc>
    <elements type="class">
      <property name="name">
        <shortdesc>The paper's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="width">
        <shortdesc>The custom width (in points) for using the custom paper.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The custom height (in points) for using the custom paper.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="offset">
        <shortdesc>Custom offset (in points) for using the custom paper.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
      <property name="transverse">
        <shortdesc>Whether to transverse the artwork (rotate 90 degrees) on the custom paper.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintJobOptions" dynamic="true">
    <shortdesc>The print job options.</shortdesc>
    <elements type="class">
      <property name="designation">
        <shortdesc>The layers/objects to be printed.</shortdesc>
        <datatype>
          <type href="#/PrintArtworkDesignation">PrintArtworkDesignation</type>
          <value>PrintArtworkDesignation.VISIBLEPRINTABLELAYERS</value>
        </datatype>
      </property>
      <property name="printArea">
        <shortdesc>The printing bounds.</shortdesc>
        <datatype>
          <type href="#/PrintingBounds">PrintingBounds</type>
          <value>PrintingBounds.ARTBOARDBOUNDS</value>
        </datatype>
      </property>
      <property name="copies">
        <shortdesc>The number of copies to print.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
          <value>1</value>
        </datatype>
      </property>
      <property name="reversePages">
        <shortdesc>Print pages in reverse order.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="collate">
        <shortdesc>Whether to collate print pages.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="file">
        <shortdesc>The file to be printed to.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="printAsBitmap">
        <shortdesc>Whether to print as bitmap.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="bitmapResolution">
        <shortdesc>The bitmap resolution.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <value>0</value>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The print job name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="printAllArtboards">
        <shortdesc>Whether to print all artboards.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>true</value>
        </datatype>
      </property>
      <property name="artboardRange">
        <shortdesc>Artboard Range to be printed if PrintAllArtboards is false.</shortdesc>
        <datatype>
          <type>string</type>
          <value>1-</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintColorSeparationOptions" dynamic="true">
    <shortdesc>Print color separation options.</shortdesc>
    <elements type="class">
      <property name="colorSeparationMode">
        <shortdesc>The color separation type.</shortdesc>
        <datatype>
          <type href="#/PrintColorSeparationMode">PrintColorSeparationMode</type>
          <value>PrintColorSeparationMode.COMPOSITE</value>
        </datatype>
      </property>
      <property name="convertSpotColors">
        <shortdesc>Whether to convert all spot colors to process colors.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="overPrintBlack">
        <shortdesc>Whether to overprint in black.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="inkList">
        <shortdesc>The list of inks for color separation.</shortdesc>
        <datatype>
          <type href="#/Ink">Ink</type>
          <array />
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintCoordinateOptions" dynamic="true">
    <shortdesc>The print coordinate options.</shortdesc>
    <elements type="class">
      <property name="orientation">
        <shortdesc>The artwork orientation.</shortdesc>
        <datatype>
          <type href="#/PrintOrientation">PrintOrientation</type>
          <value>PrintOrientation.PORTRAIT</value>
        </datatype>
      </property>
      <property name="emulsion">
        <shortdesc>Whether to flip artwork horizontally.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="position">
        <shortdesc>The artwork position on media.</shortdesc>
        <datatype>
          <type href="#/PrintPosition">PrintPosition</type>
          <value>PrintPosition.TRANSLATECENTER</value>
        </datatype>
      </property>
      <property name="fitToPage">
        <shortdesc>Whether to proportionally scale the artwork to fit on the page.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="horizontalScale">
        <shortdesc>The horizontal scaling factor expressed as a percentage (100 = 100%)</shortdesc>
        <datatype>
          <type>number</type>
          <min>1</min>
          <max>10000</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="verticalScale">
        <shortdesc>The vertical scaling factor expressed as a percentage (100 = 100%)</shortdesc>
        <datatype>
          <type>number</type>
          <min>1</min>
          <max>10000</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="tiling">
        <shortdesc>The page tiling mode.</shortdesc>
        <datatype>
          <type href="#/PrintTiling">PrintTiling</type>
          <value>PrintTiling.TILESINGLEFULLPAGE</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintPageMarksOptions" dynamic="true">
    <shortdesc>The page marks options.</shortdesc>
    <elements type="class">
      <property name="pageMarksType">
        <shortdesc>The page marks style.</shortdesc>
        <datatype>
          <type href="#/PageMarksTypes">PageMarksTypes</type>
          <value>PageMarksTypes.Roman</value>
        </datatype>
      </property>
      <property name="trimMarksWeight">
        <shortdesc>Stroke weight of trim marks.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <value>0.125</value>
        </datatype>
      </property>
      <property name="trimMarks">
        <shortdesc>Whether to enable trim marks printing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="registrationMarks">
        <shortdesc>Whether to enable registration marks printing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="colorBars">
        <shortdesc>Whether to enable color bars printing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="pageInfoMarks">
        <shortdesc>Whether to enable page info marks printing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="bleedOffsetRect">
        <shortdesc>The bleed offset rect.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="marksOffsetRect">
        <shortdesc>The page marks offset rect.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintFontOptions" dynamic="true">
    <shortdesc>The font options for printing.</shortdesc>
    <elements type="class">
      <property name="downloadFonts">
        <shortdesc>The font download mode.</shortdesc>
        <datatype>
          <type href="#/PrintFontDownloadMode">PrintFontDownloadMode</type>
          <value>PrintFontDownloadMode.DOWNLOADSUBSET</value>
        </datatype>
      </property>
      <property name="fontSubstitution">
        <shortdesc>The font substitution policy.</shortdesc>
        <datatype>
          <type href="#/FontSubstitutionPolicy">FontSubstitutionPolicy</type>
          <value>FontSubstitutionPolicy.SUBSTITUTEOBLIQUE</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintPostScriptOptions" dynamic="true">
    <shortdesc>The PostScript options.</shortdesc>
    <elements type="class">
      <property name="postScriptLevel">
        <shortdesc>The PostScript language level.</shortdesc>
        <datatype>
          <type href="#/PrinterPostScriptLevelEnum">PrinterPostScriptLevelEnum</type>
          <value>PrinterPostScriptLevelEnum.PSLEVEL2</value>
        </datatype>
      </property>
      <property name="binaryPrinting">
        <shortdesc>Whether to print in binary mode.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="negativePrinting">
        <shortdesc>Whether to print in negative mode.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="imageCompression">
        <shortdesc>The image compression type.</shortdesc>
        <datatype>
          <type href="#/PostScriptImageCompressionType">PostScriptImageCompressionType</type>
          <value>PostScriptImageCompressionType.IMAGECOMPRESSIONNONE</value>
        </datatype>
      </property>
      <property name="forceContinuousTone">
        <shortdesc>Whether to force continuous tone.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="compatibleShading">
        <shortdesc>Use PostScript level 1 compatible gradient and gradient mesh printing.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="shadingResolution">
        <shortdesc>The shading resolution.</shortdesc>
        <datatype>
          <type>number</type>
          <min>1</min>
          <max>9600</max>
          <value>300</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintColorManagementOptions" dynamic="true">
    <shortdesc>The color management options.</shortdesc>
    <elements type="class">
      <property name="colorProfileMode">
        <shortdesc>The color management profile mode.</shortdesc>
        <datatype>
          <type href="#/PrintColorProfile">PrintColorProfile</type>
          <value>PrintColorProfile.SOURCEPROFILE</value>
        </datatype>
      </property>
      <property name="intent">
        <shortdesc>The color management intent type.</shortdesc>
        <datatype>
          <type href="#/PrintColorIntent">PrintColorIntent</type>
          <value>PrintColorIntent.RELATIVECOLORIMETRIC</value>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The color management profile name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PrintFlattenerOptions" dynamic="true">
    <shortdesc>The transparency flattening options.</shortdesc>
    <elements type="class">
      <property name="flatteningBalance">
        <shortdesc>The flattening balance.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
          <max>100</max>
          <value>100</value>
        </datatype>
      </property>
      <property name="rasterizationResolution">
        <shortdesc>The rasterization resolution.</shortdesc>
        <datatype>
          <type>number</type>
          <min>1</min>
          <max>9600</max>
          <value>300</value>
        </datatype>
      </property>
      <property name="gradientResolution">
        <shortdesc>The gradient resolution.</shortdesc>
        <datatype>
          <type>number</type>
          <min>1</min>
          <max>9600</max>
          <value>300</value>
        </datatype>
      </property>
      <property name="convertTextToOutlines">
        <shortdesc>Whether to convert all text to outlines.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="convertStrokesToOutlines">
        <shortdesc>Whether to convert all strokes to outlines.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="clipComplexRegions">
        <shortdesc>Whether to clip complex regions.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="overprint">
        <shortdesc>Overprint.</shortdesc>
        <datatype>
          <type href="#/PDFOverprint">PDFOverprint</type>
          <value>PDFOverprint.PRESERVEPDFOVERPRINT</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ImageCaptureOptions" dynamic="true">
    <shortdesc>Options which may be supplied when capturing a portion of the artwork as an 24 bit PNG file.</shortdesc>
    <elements type="class">
      <property name="resolution">
        <shortdesc>The resolution of the captured image file.</shortdesc>
        <datatype>
          <type>number</type>
          <min>72.0</min>
          <max>2400.0</max>
          <value>150</value>
        </datatype>
      </property>
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="matte">
        <shortdesc>Should the artboard be matted with a color.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="matteColor">
        <shortdesc>The color to use when matting the artboard (default: white)</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RasterEffectOptions" dynamic="true">
    <shortdesc>The document raster effects settings.</shortdesc>
    <elements type="class">
      <property name="colorModel">
        <shortdesc>The color model for the rasterization.</shortdesc>
        <datatype>
          <type href="#/RasterizationColorModel">RasterizationColorModel</type>
          <value>RasterizationColorModel.DEFAULTCOLORMODEL</value>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>The rasterization resolution in dots-per-inch (dpi)</shortdesc>
        <datatype>
          <type>number</type>
          <min>72.0</min>
          <max>2400.0</max>
          <value>300</value>
        </datatype>
      </property>
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="antiAliasing">
        <shortdesc>Should the resulting image be antialiased.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="clippingMask">
        <shortdesc>Should a clipping mask be created for the resulting image.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="convertSpotColors">
        <shortdesc>Whether to convert all spot colors to process colors in the resulting image.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="padding">
        <shortdesc>The amount of white space (in points) to be added around the object during rasterization.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="RasterizeOptions" dynamic="true">
    <shortdesc>Options which may be supplied when rasterizing the artwork.</shortdesc>
    <elements type="class">
      <property name="colorModel">
        <shortdesc>The color model for the rasterization.</shortdesc>
        <datatype>
          <type href="#/RasterizationColorModel">RasterizationColorModel</type>
          <value>RasterizationColorModel.DEFAULTCOLORMODEL</value>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>The rasterization resolution in dots-per-inch (dpi)</shortdesc>
        <datatype>
          <type>number</type>
          <min>72.0</min>
          <max>2400.0</max>
          <value>300</value>
        </datatype>
      </property>
      <property name="transparency">
        <shortdesc>Should the resulting image use transparency.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="antiAliasingMethod">
        <shortdesc>The type of antialiasing method.</shortdesc>
        <datatype>
          <type href="#/AntiAliasingMethod">AntiAliasingMethod</type>
          <value>AntiAliasingMethod.ARTOPTIMIZED</value>
        </datatype>
      </property>
      <property name="clippingMask">
        <shortdesc>Should a clipping mask be created for the resulting image.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="convertSpotColors">
        <shortdesc>Whether to convert all spot colors to process colors in the resulting image.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="convertTextToOutlines">
        <shortdesc>Should all text be converted to outlines before rasterization.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="includeLayers">
        <shortdesc>Should the resulting image incorporates the layer attributes (such as opacity and blend mode)</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="backgroundBlack">
        <shortdesc>Should rasterize against a black background instead of white.</shortdesc>
        <datatype>
          <type>bool</type>
          <value>false</value>
        </datatype>
      </property>
      <property name="padding">
        <shortdesc>The amount of white space (in points) to be added around the object during rasterization.</shortdesc>
        <datatype>
          <type>number</type>
          <value>0</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Application" dynamic="true">
    <shortdesc>The Adobe Illustrator application.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name" rwaccess="readonly">
        <shortdesc>The application's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="path" rwaccess="readonly">
        <shortdesc>Path specification for the application.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="activeDocument">
        <shortdesc>The active document.</shortdesc>
        <datatype>
          <type href="#/Document">Document</type>
        </datatype>
      </property>
      <property name="userAdobeID" rwaccess="readonly">
        <shortdesc>The current users adobe id.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="userGUID" rwaccess="readonly">
        <shortdesc>The current user's GUID.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="version" rwaccess="readonly">
        <shortdesc>The version of the Adobe Illustrator application.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="buildNumber" rwaccess="readonly">
        <shortdesc>The build number of the Adobe Illustrator application.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="locale" rwaccess="readonly">
        <shortdesc>The Locale of the Adobe Illustrator application.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="scriptingVersion" rwaccess="readonly">
        <shortdesc>The version of the Scripting plugin.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="freeMemory" rwaccess="readonly">
        <shortdesc>The amount of unused memory within the Adobe Illustrator partition.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="browserAvailable" rwaccess="readonly">
        <shortdesc>Is a web browser available?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="selection">
        <shortdesc>The selection visible to the user.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <property name="visible" rwaccess="readonly">
        <shortdesc>Is the application visible.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="userInteractionLevel">
        <shortdesc>What level of interaction with the user should be allowed when handling script commands.</shortdesc>
        <datatype>
          <type href="#/UserInteractionLevel">UserInteractionLevel</type>
        </datatype>
      </property>
      <property name="coordinateSystem">
        <shortdesc>Coordinate System used by script.</shortdesc>
        <datatype>
          <type href="#/CoordinateSystem">CoordinateSystem</type>
        </datatype>
      </property>
      <property name="preferences" rwaccess="readonly">
        <shortdesc>Preferences for Illustrator.</shortdesc>
        <datatype>
          <type href="#/Preferences">Preferences</type>
        </datatype>
      </property>
      <property name="printerList" rwaccess="readonly">
        <shortdesc>The list of installed printers.</shortdesc>
        <datatype>
          <type href="#/Printer">Printer</type>
          <array />
        </datatype>
      </property>
      <property name="PPDFileList" rwaccess="readonly">
        <shortdesc>The list of PPD files currently available for use. For performance reasons, the PPDFile entry only contains the model name and file spec of each PPD file.</shortdesc>
        <datatype>
          <type href="#/PPDFile">PPDFile</type>
          <array />
        </datatype>
      </property>
      <property name="printPresetsList" rwaccess="readonly">
        <shortdesc>The list of print preset names currently available for use.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="startupPresetsList" rwaccess="readonly">
        <shortdesc>The list of presets available for creating a new document.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="PDFPresetsList" rwaccess="readonly">
        <shortdesc>The list of PDF preset names currently available for use.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="flattenerPresetsList" rwaccess="readonly">
        <shortdesc>The list of flattener style names currently available for use.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="tracingPresetsList" rwaccess="readonly">
        <shortdesc>The list of tracing preset names currently available for use.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="colorSettingsList" rwaccess="readonly">
        <shortdesc>The list of color settings files currently available for use.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
          <array />
        </datatype>
      </property>
      <property name="defaultColorSettings" rwaccess="readonly">
        <shortdesc>The default color settings file for the current application locale.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="pasteRemembersLayers">
        <shortdesc>Does paste operation remember layers structure?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="documents" rwaccess="readonly">
        <shortdesc>The open documents.</shortdesc>
        <datatype>
          <type href="#/Documents">Documents</type>
        </datatype>
      </property>
      <property name="textFonts" rwaccess="readonly">
        <shortdesc>Installed fonts.</shortdesc>
        <datatype>
          <type href="#/TextFonts">TextFonts</type>
        </datatype>
      </property>
      <method name="getHelloJSONData">
        <shortdesc>Returns the JSON Data required by Hello.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="getCCXUserJSONData">
        <shortdesc>Returns the JSON Data required by CCX Welcome.</shortdesc>
        <parameters>
          <parameter name="mode" optional="true">
            <shortdesc>Mode for which the data is to be provided.</shortdesc>
            <datatype>
              <type>string</type>
              <value></value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="getIsFileOpen">
        <shortdesc>Returns if the specified filePath is open.</shortdesc>
        <parameters>
          <parameter name="filePath">
            <shortdesc>The filePath to be checked.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="launchExtension">
        <shortdesc>Launch cep Extension given its ID.</shortdesc>
        <parameters>
          <parameter name="extensionID">
            <shortdesc>Arguments for Launching Extension - ID of extension in manifest.xml of corresponding extension.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </method>
      <method name="runAPITest">
        <shortdesc>Runs API Tests from the TestAPI Plug-in.</shortdesc>
        <parameters>
          <parameter name="testName">
            <shortdesc>Arguments for Running Tests - eg. Name of Test/Suite.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="aATLoadModel">
        <shortdesc>Loads the aat model to the editor.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATLoadUIExtension">
        <shortdesc>Loads a UI description as an extension to the editor.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATLoadLibExtension">
        <shortdesc>Loads a session file as an extension to the editor.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATExecuteSession">
        <shortdesc>Executes the active session in the sequencer.</shortdesc>
      </method>
      <method name="aATExecuteSessionFromFile">
        <shortdesc>Executes the active session in the sequencer.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>Execute a session file.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="aATGetEditorDialogFile">
        <shortdesc>Retrieves a file path to the AAT editor swf.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </method>
      <method name="getVersionString">
        <shortdesc>Retrieves a string representing the AAT version.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATGetErrorDialogFile">
        <shortdesc>Retrieves a file path to the AAT error dialog swf.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </method>
      <method name="aATErrorsExist">
        <shortdesc>Retrieves a boolean indicating the presence of errors in the last script to execute.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="getExecutionOutput">
        <shortdesc>Retrieves a string containing the results of the last script to execute.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATClear">
        <shortdesc>Clear the sequencer.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATGetSession">
        <shortdesc>Get the active session for the sequncer.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATSaveSession">
        <shortdesc>Saves the active session in the sequencer to a file.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATSaveAsSession">
        <shortdesc>Saves the active session in the sequencer to a new file.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATLoadSessionFile">
        <shortdesc>Loads a session into the sequencer.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATAddItem">
        <shortdesc>Add the specified to the sequencer.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to add.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="destinationSequenceID">
            <shortdesc>The UID for the owning sequence.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="destinationIndex">
            <shortdesc>The item UID where to insert.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="srcItemIDData">
            <shortdesc>The item ID of the item to construct.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="type">
            <shortdesc>The source of the item to construct.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATMoveItem">
        <shortdesc>Moves the specified in the sequencer.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to move.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="moveThisID">
            <shortdesc>The UID of the item to replace.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="newSessionIndex">
            <shortdesc>The index in the session of the destination top-most sequence.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="destinationSequenceID">
            <shortdesc>The UID for the owning sequence.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="destinationIndex">
            <shortdesc>The index where to insert.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATReplaceItem">
        <shortdesc>Replaces the specified to the sequencer.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to add.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="replaceThisID">
            <shortdesc>The UID of the item to replace.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="srcItemIDData">
            <shortdesc>The item ID of the item to construct.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="type">
            <shortdesc>The source of the item to construct.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATRemoveItem">
        <shortdesc>Removes the specified item from the sequencer.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to add.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="item">
            <shortdesc>The item UID.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATDuplicateItem">
        <shortdesc>Duplicates the specified item(s) from the sequencer.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to add.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="item">
            <shortdesc>The item UID(s)</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATEditItem">
        <shortdesc>Opens the specified item from the sequencer in the item editor.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to add.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="item">
            <shortdesc>The item UID.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="applyDataToItem">
        <shortdesc>Applies the data used in the item editor to the item.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to edit.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="item">
            <shortdesc>The item UID.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="data">
            <shortdesc>The data to apply in XML format.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="applySingleDataPointToItem">
        <shortdesc>Applies data to the specified item from the sequencer in the item editor.</shortdesc>
        <parameters>
          <parameter name="sessionIndex">
            <shortdesc>The index in the session of the top-most sequence for the item to add.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
          <parameter name="item">
            <shortdesc>The item UID.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="dataID">
            <shortdesc>The data to apply in XML format.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="data">
            <shortdesc>The data to apply in XML format.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="translateString">
        <shortdesc>Returns a string translated from the key and source data passed in.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The string to translate.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="source">
            <shortdesc>The plugin name from the source of the key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATFileSaveDialog">
        <shortdesc>Prompts the user to save a file or choose a file or directory and returns a relative path string to the file.</shortdesc>
        <parameters>
          <parameter name="path">
            <shortdesc>The path relative to the folder specified by Relative.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="relative">
            <shortdesc>The current relative path token.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="type">
            <shortdesc>The type of dialog to show in string format.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATFileRelativeChanged">
        <shortdesc>Switches a files relative token and path.</shortdesc>
        <parameters>
          <parameter name="path">
            <shortdesc>The path relative to the folder specified by Relative.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="relative">
            <shortdesc>The current relative path token.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="newRelative">
            <shortdesc>The new relative path token.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="aATGetListOfRelativePaths">
        <shortdesc>Gets an XML string listing the relative paths and the UI strings to display them.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="beginSyncSettingsAutomationTest">
        <shortdesc>Starts the automation tests for the Sync Settings feature.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="beginTypekitFontAutomationTest">
        <shortdesc>Starts the automation tests for the Typekit Font feature.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="cut">
        <shortdesc>Cut current selection to the clipboard.</shortdesc>
      </method>
      <method name="copy">
        <shortdesc>Copy current selection to the clipboard.</shortdesc>
      </method>
      <method name="paste">
        <shortdesc>Paste clipboard into the current document.</shortdesc>
      </method>
      <method name="isFillActive">
        <shortdesc>Checks if fill is active or not.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="isStrokeActive">
        <shortdesc>Checks if stroke is active or not.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="showColorPicker">
        <shortdesc>Invokes application's color picker.</shortdesc>
        <parameters>
          <parameter name="color">
            <shortdesc>The color to load in the color picker initially.</shortdesc>
            <datatype>
              <type href="#/Color">Color</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </method>
      <method name="openCloudLibraryAssetForEditing">
        <shortdesc>For Internal Use.</shortdesc>
        <parameters>
          <parameter name="assetURL">
            <shortdesc>For Internal use.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="thumbnailURL">
            <shortdesc>For Internal use.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="assetType">
            <shortdesc>For internal use.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>For internal use.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Document">Document</type>
        </datatype>
      </method>
      <method name="setThumbnailOptionsForCloudLibrary">
        <shortdesc>For Internal Use.</shortdesc>
        <parameters>
          <parameter name="options">
            <shortdesc>Options for the PNG24 export.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="undo">
        <shortdesc>Undo the last transaction.</shortdesc>
      </method>
      <method name="redo">
        <shortdesc>Redo the last transaction.</shortdesc>
      </method>
      <method name="doScript">
        <shortdesc>Play an action from the Actions Palette.</shortdesc>
        <parameters>
          <parameter name="action">
            <shortdesc>The name of the action to play (note that the case of letters in the Action name is important and must match the case of the name in the Actions palette)</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="from">
            <shortdesc>The name of the action set containing the action being played (note that the case of letters in the Action Set name is important and must match the case of the name in the Actions palette)</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="dialogs" optional="true">
            <shortdesc>Are dialog boxes associated with the action to be presented?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="executeMenuCommand">
        <shortdesc>Executes a menu command using the menu shortcut string.</shortdesc>
        <parameters>
          <parameter name="menuCommandString">
            <shortdesc>Menu command shortcut.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getPresetFileOfType">
        <shortdesc>Given a preset type, returns the full path to the application's default document profile for the type.</shortdesc>
        <parameters>
          <parameter name="presetType">
            <shortdesc>The preset type.</shortdesc>
            <datatype>
              <type href="#/DocumentPresetType">DocumentPresetType</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </method>
      <method name="loadAction">
        <shortdesc>Load an action into action palette.</shortdesc>
        <parameters>
          <parameter name="actionFilePath">
            <shortdesc>The path on the system of the action file to be loaded.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="unloadAction">
        <shortdesc>Unloads an action into action palette.</shortdesc>
        <parameters>
          <parameter name="setName">
            <shortdesc>Name of the set to be unloaded.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="actionName">
            <shortdesc>Name of the action to be unloaded.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="sendScriptMessage">
        <shortdesc>Sends the script message to the required plugin.</shortdesc>
        <parameters>
          <parameter name="pluginName">
            <shortdesc>Plugin to which message needs to be sent.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="messageSelector">
            <shortdesc>Functionality that is to be executed.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="inputString">
            <shortdesc>Pass any data encoded in a string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="getPresetSettings">
        <shortdesc>Given a preset name, tries and retrieves the settings from the preset template.</shortdesc>
        <parameters>
          <parameter name="preset">
            <shortdesc>The name of the preset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/DocumentPreset">DocumentPreset</type>
        </datatype>
      </method>
      <method name="redraw">
        <shortdesc>Force Illustrator to redraw its window(s)</shortdesc>
      </method>
      <method name="invertMatrix">
        <shortdesc>Invert a matrix.</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>The matrix to invert.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="isSingularMatrix">
        <shortdesc>Tests if a matrix is singular (cannot be inverted)</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>The matrix to check.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="concatenateTranslationMatrix">
        <shortdesc>Concatenate a translation to a transformation matrix.</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>The matrix that is to be added to.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
          <parameter name="deltaX" optional="true">
            <shortdesc>Horizontal transformation.</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
          <parameter name="deltaY" optional="true">
            <shortdesc>Vertical transformation.</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="concatenateScaleMatrix">
        <shortdesc>Concatenate a scale matrix to a transformation matrix.</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>The matrix that is to be added to.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
          <parameter name="scaleX" optional="true">
            <shortdesc>Horizontal scaling factor expressed as a percentage (100 = 100%)</shortdesc>
            <datatype>
              <type>number</type>
              <value>100.0</value>
            </datatype>
          </parameter>
          <parameter name="scaleY" optional="true">
            <shortdesc>Vertical scaling factor expressed as a percentage (100 = 100%)</shortdesc>
            <datatype>
              <type>number</type>
              <value>100.0</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="concatenateRotationMatrix">
        <shortdesc>Concatenate a rotation matrix to a transformation matrix.</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>The matrix that is to be added to.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
          <parameter name="angle">
            <shortdesc>Angle of rotation (in degrees)</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="concatenateMatrix">
        <shortdesc>Concatenate two transformation matrices.</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>The matrix that is to be added to.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
          <parameter name="secondMatrix">
            <shortdesc>Second transformation matrix.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="isEqualMatrix">
        <shortdesc>Compares two matrices for equality.</shortdesc>
        <parameters>
          <parameter name="matrix">
            <shortdesc>First transformation matrix to compare.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
          <parameter name="secondMatrix">
            <shortdesc>Second transformation matrix.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="getIdentityMatrix">
        <shortdesc>Returns an identity matrix.</shortdesc>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="getRotationMatrix">
        <shortdesc>Returns a rotation transformation matrix.</shortdesc>
        <parameters>
          <parameter name="angle" optional="true">
            <shortdesc>Angle of rotation (in degrees)</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="getScaleMatrix">
        <shortdesc>Returns a scale transformation matrix.</shortdesc>
        <parameters>
          <parameter name="scaleX" optional="true">
            <shortdesc>Horizontal scaling factor expressed as a percentage (100 = 100%)</shortdesc>
            <datatype>
              <type>number</type>
              <value>100.0</value>
            </datatype>
          </parameter>
          <parameter name="scaleY" optional="true">
            <shortdesc>Vertical scaling factor expressed as a percentage (100 = 100%)</shortdesc>
            <datatype>
              <type>number</type>
              <value>100.0</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="getTranslationMatrix">
        <shortdesc>Returns a translation matrix.</shortdesc>
        <parameters>
          <parameter name="deltaX" optional="true">
            <shortdesc>Horizontal transformation.</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
          <parameter name="deltaY" optional="true">
            <shortdesc>Vertical transformation.</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </method>
      <method name="open">
        <shortdesc>Open the specified document file.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>The file to be opened.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="documentColorSpace" optional="true">
            <shortdesc>Choose color space only for documents saved with multiple color models (pre-Illustrator 9)</shortdesc>
            <datatype>
              <type href="#/DocumentColorSpace">DocumentColorSpace</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Options for opening a particular type of file.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Document">Document</type>
        </datatype>
      </method>
      <method name="dumpPGFFile">
        <shortdesc>Dump the PGF portion of ai file to txt file.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>The AI file to be opened.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="documentColorSpace" optional="true">
            <shortdesc>Choose color space only for documents saved with multiple color models (pre-Illustrator 9)</shortdesc>
            <datatype>
              <type href="#/DocumentColorSpace">DocumentColorSpace</type>
            </datatype>
          </parameter>
          <parameter name="pGFFile">
            <shortdesc>Folder to save the output PGF file.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="quit">
        <shortdesc>Quit the application.</shortdesc>
      </method>
      <method name="beep" />
      <method name="translatePlaceholderText">
        <shortdesc>Translate the placeholder text to regular text. A method to enter unicode points in hex values.</shortdesc>
        <parameters>
          <parameter name="text">
            <shortdesc>The placeholder text to be translated.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="showPresets">
        <shortdesc>Get presets from the file.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File spec to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </method>
      <method name="loadColorSettings">
        <shortdesc>Load the color settings from the file. If the file is an empty file spec, the color management will be turned off.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File spec for the color settings.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getPPDFileInfo">
        <shortdesc>Get detailed info from the specified PPD file.</shortdesc>
        <parameters>
          <parameter name="name">
            <shortdesc>The model name of the PPD file.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PPDFileInfo">PPDFileInfo</type>
        </datatype>
      </method>
      <method name="getScriptableHelpGroup">
        <shortdesc>Get the scriptable help group object that represents the search widget in the app bar.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </method>
      <method name="convertSampleColor">
        <shortdesc>Converts a sample-component color from one color space to another.</shortdesc>
        <parameters>
          <parameter name="sourceColorSpace">
            <shortdesc>The source color space.</shortdesc>
            <datatype>
              <type href="#/ImageColorSpace">ImageColorSpace</type>
            </datatype>
          </parameter>
          <parameter name="sourceColor">
            <shortdesc>The color to convert, an array of color components. First location of the array should contain alpha if source-has-alpha is true.</shortdesc>
            <datatype>
              <type>number</type>
              <array />
            </datatype>
          </parameter>
          <parameter name="destColorSpace">
            <shortdesc>The destination color space.</shortdesc>
            <datatype>
              <type href="#/ImageColorSpace">ImageColorSpace</type>
            </datatype>
          </parameter>
          <parameter name="colorConvertPurpose">
            <shortdesc>The parameter which passes the purpose of conversion.</shortdesc>
            <datatype>
              <type href="#/ColorConvertPurpose">ColorConvertPurpose</type>
            </datatype>
          </parameter>
          <parameter name="sourceHasAlpha" optional="true">
            <shortdesc>True if alpha channel is present in source color.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
          <parameter name="destHasAlpha" optional="true">
            <shortdesc>True if alpha channel is present in destination color.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>number</type>
          <array />
        </datatype>
      </method>
      <method name="reflectCSAW">
        <shortdesc>Generate Creative Suite ActionScript Wrappers in specified directory.</shortdesc>
        <parameters>
          <parameter name="outputFolder">
            <shortdesc>Location for the output files.</shortdesc>
            <datatype>
              <type href="$COMMON/javascript.xml#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="switchWorkspace">
        <shortdesc>Switches between workspaces.</shortdesc>
        <parameters>
          <parameter name="workspaceName">
            <shortdesc>Workspace Name.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="deleteWorkspace">
        <shortdesc>Deletes an existing workspace.</shortdesc>
        <parameters>
          <parameter name="workspaceName">
            <shortdesc>Workspace Name.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="saveWorkspace">
        <shortdesc>Saves a new workspace.</shortdesc>
        <parameters>
          <parameter name="workspaceName">
            <shortdesc>Workspace Name.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="resetWorkspace">
        <shortdesc>Resets the current workspace.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="isTouchWorkspace">
        <shortdesc>Is In Touch Workspace.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="isUserSharingAppUsageData">
        <shortdesc>Is user sharing the application usage data.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Document" dynamic="true">
    <shortdesc>A document.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="stationery" rwaccess="readonly">
        <shortdesc>Is the file a stationery file?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="fullName" rwaccess="readonly">
        <shortdesc>The file associated with the document.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="activeLayer">
        <shortdesc>The active layer.</shortdesc>
        <datatype>
          <type href="#/Layer">Layer</type>
        </datatype>
      </property>
      <property name="activeView" rwaccess="readonly">
        <shortdesc>The document's current view.</shortdesc>
        <datatype>
          <type href="#/View">View</type>
        </datatype>
      </property>
      <property name="geometricBounds" rwaccess="readonly">
        <shortdesc>The bounds of the illustration excluding stroke width.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="visibleBounds" rwaccess="readonly">
        <shortdesc>The visible bounds of the illustration including stroke width.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="rulerOrigin">
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="rulerUnits" rwaccess="readonly">
        <datatype>
          <type href="#/RulerUnits">RulerUnits</type>
        </datatype>
      </property>
      <property name="pageOrigin">
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="cropBox">
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="cropStyle">
        <datatype>
          <type href="#/CropOptions">CropOptions</type>
        </datatype>
      </property>
      <property name="width" rwaccess="readonly">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="height" rwaccess="readonly">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="showPlacedImages" rwaccess="readonly">
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="outputResolution" rwaccess="readonly">
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="printTiles" rwaccess="readonly">
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="selection">
        <shortdesc>The selection within the document.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <property name="splitLongPaths" rwaccess="readonly">
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="tileFullPages" rwaccess="readonly">
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="useDefaultScreen" rwaccess="readonly">
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="documentColorSpace" rwaccess="readonly">
        <shortdesc>The color space used for the document.</shortdesc>
        <datatype>
          <type href="#/DocumentColorSpace">DocumentColorSpace</type>
        </datatype>
      </property>
      <property name="name" rwaccess="readonly">
        <shortdesc>The document's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="path" rwaccess="readonly">
        <shortdesc>Path specification for the document.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="saved">
        <shortdesc>Has the document been saved?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="defaultFilled">
        <shortdesc>Should a new path be filled?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="defaultFillColor">
        <shortdesc>Default fill color.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="defaultFillOverprint">
        <shortdesc>Will art beneath a filled object be overprinted by default?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="defaultStroked">
        <shortdesc>Should a new path be stroked?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="defaultStrokeColor">
        <shortdesc>Default stroke color.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="defaultStrokeOverprint">
        <shortdesc>Will art beneath a stroked object be overprinted by default?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="defaultStrokeWidth">
        <shortdesc>Default width of stroke.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="defaultStrokeDashes">
        <shortdesc>Default dash lengths (set to {} for a solid line)</shortdesc>
        <datatype>
          <type>number</type>
          <array />
        </datatype>
      </property>
      <property name="defaultStrokeDashOffset">
        <shortdesc>The default distance into the dash pattern at which the pattern should be started.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="defaultStrokeCap">
        <shortdesc>Default type of line capping.</shortdesc>
        <datatype>
          <type href="#/StrokeCap">StrokeCap</type>
        </datatype>
      </property>
      <property name="defaultStrokeJoin">
        <shortdesc>Default type of joints.</shortdesc>
        <datatype>
          <type href="#/StrokeJoin">StrokeJoin</type>
        </datatype>
      </property>
      <property name="defaultStrokeMiterLimit">
        <shortdesc>Specifies whether a join is mitered (pointed) or beveled (squared-off) by default.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="activeDataSet">
        <shortdesc>The active data set.</shortdesc>
        <datatype>
          <type href="#/DataSet">DataSet</type>
        </datatype>
      </property>
      <property name="variablesLocked">
        <shortdesc>The locked variables.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="XMPString">
        <shortdesc>The XMP packet string associated with the document.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="rasterEffectSettings">
        <shortdesc>The document raster effects settings.</shortdesc>
        <datatype>
          <type href="#/RasterEffectOptions">RasterEffectOptions</type>
        </datatype>
      </property>
      <property name="colorProfileName" rwaccess="readonly">
        <shortdesc>The name of the color profile of the document.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="assets" rwaccess="readonly">
        <shortdesc>All assets in the document.</shortdesc>
        <datatype>
          <type href="#/Assets">Assets</type>
        </datatype>
      </property>
      <property name="artboards" rwaccess="readonly">
        <shortdesc>All artboards in the document.</shortdesc>
        <datatype>
          <type href="#/Artboards">Artboards</type>
        </datatype>
      </property>
      <property name="compoundPathItems" rwaccess="readonly">
        <shortdesc>The compound path artwork in this collection.</shortdesc>
        <datatype>
          <type href="#/CompoundPathItems">CompoundPathItems</type>
        </datatype>
      </property>
      <property name="layers" rwaccess="readonly">
        <shortdesc>The layers in this document.</shortdesc>
        <datatype>
          <type href="#/Layers">Layers</type>
        </datatype>
      </property>
      <property name="pageItems" rwaccess="readonly">
        <shortdesc>All the artwork in this document.</shortdesc>
        <datatype>
          <type href="#/PageItems">PageItems</type>
        </datatype>
      </property>
      <property name="pathItems" rwaccess="readonly">
        <shortdesc>The path artwork in this document.</shortdesc>
        <datatype>
          <type href="#/PathItems">PathItems</type>
        </datatype>
      </property>
      <property name="tags" rwaccess="readonly">
        <shortdesc>The tags in this document.</shortdesc>
        <datatype>
          <type href="#/Tags">Tags</type>
        </datatype>
      </property>
      <property name="views" rwaccess="readonly">
        <shortdesc>The views in this document.</shortdesc>
        <datatype>
          <type href="#/Views">Views</type>
        </datatype>
      </property>
      <property name="rasterItems" rwaccess="readonly">
        <shortdesc>The raster art items in this document.</shortdesc>
        <datatype>
          <type href="#/RasterItems">RasterItems</type>
        </datatype>
      </property>
      <property name="placedItems" rwaccess="readonly">
        <shortdesc>The placed art items in this document.</shortdesc>
        <datatype>
          <type href="#/PlacedItems">PlacedItems</type>
        </datatype>
      </property>
      <property name="embeddedItems" rwaccess="readonly">
        <shortdesc>The embedded art items in this layer.</shortdesc>
        <datatype>
          <type href="#/EmbeddedItems">EmbeddedItems</type>
        </datatype>
      </property>
      <property name="meshItems" rwaccess="readonly">
        <shortdesc>The mesh art items in this document.</shortdesc>
        <datatype>
          <type href="#/MeshItems">MeshItems</type>
        </datatype>
      </property>
      <property name="pluginItems" rwaccess="readonly">
        <shortdesc>The plugin art items in this document.</shortdesc>
        <datatype>
          <type href="#/PluginItems">PluginItems</type>
        </datatype>
      </property>
      <property name="graphItems" rwaccess="readonly">
        <shortdesc>The graph art items in this document.</shortdesc>
        <datatype>
          <type href="#/GraphItems">GraphItems</type>
        </datatype>
      </property>
      <property name="nonNativeItems" rwaccess="readonly">
        <shortdesc>The non-native art items in this document.</shortdesc>
        <datatype>
          <type href="#/NonNativeItems">NonNativeItems</type>
        </datatype>
      </property>
      <property name="groupItems" rwaccess="readonly">
        <shortdesc>The group items in this document.</shortdesc>
        <datatype>
          <type href="#/GroupItems">GroupItems</type>
        </datatype>
      </property>
      <property name="textFrames" rwaccess="readonly">
        <shortdesc>The text frame items in this document.</shortdesc>
        <datatype>
          <type href="#/TextFrameItems">TextFrameItems</type>
        </datatype>
      </property>
      <property name="stories" rwaccess="readonly">
        <shortdesc>The story items in this document.</shortdesc>
        <datatype>
          <type href="#/Stories">Stories</type>
        </datatype>
      </property>
      <property name="characterStyles" rwaccess="readonly">
        <shortdesc>The list of character styles in this document.</shortdesc>
        <datatype>
          <type href="#/CharacterStyles">CharacterStyles</type>
        </datatype>
      </property>
      <property name="paragraphStyles" rwaccess="readonly">
        <shortdesc>The list of paragraph styles in this document.</shortdesc>
        <datatype>
          <type href="#/ParagraphStyles">ParagraphStyles</type>
        </datatype>
      </property>
      <property name="kinsokuSet" rwaccess="readonly">
        <shortdesc>The Kinsoku set.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="mojikumiSet" rwaccess="readonly">
        <shortdesc>The Mojikumi set.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="swatches" rwaccess="readonly">
        <shortdesc>The swatches in this document.</shortdesc>
        <datatype>
          <type href="#/Swatches">Swatches</type>
        </datatype>
      </property>
      <property name="swatchGroups" rwaccess="readonly">
        <shortdesc>The Swatch Groups in this document.</shortdesc>
        <datatype>
          <type href="#/SwatchGroups">SwatchGroups</type>
        </datatype>
      </property>
      <property name="gradients" rwaccess="readonly">
        <shortdesc>The gradients available in this document.</shortdesc>
        <datatype>
          <type href="#/Gradients">Gradients</type>
        </datatype>
      </property>
      <property name="patterns" rwaccess="readonly">
        <shortdesc>The patterns available in this document.</shortdesc>
        <datatype>
          <type href="#/Patterns">Patterns</type>
        </datatype>
      </property>
      <property name="spots" rwaccess="readonly">
        <shortdesc>The custom spot colors available in this document.</shortdesc>
        <datatype>
          <type href="#/Spots">Spots</type>
        </datatype>
      </property>
      <property name="symbols" rwaccess="readonly">
        <shortdesc>The symbols defined in this document.</shortdesc>
        <datatype>
          <type href="#/Symbols">Symbols</type>
        </datatype>
      </property>
      <property name="symbolItems" rwaccess="readonly">
        <shortdesc>The symbol items in this document.</shortdesc>
        <datatype>
          <type href="#/SymbolItems">SymbolItems</type>
        </datatype>
      </property>
      <property name="brushes" rwaccess="readonly">
        <shortdesc>The brushes defined in this document.</shortdesc>
        <datatype>
          <type href="#/Brushes">Brushes</type>
        </datatype>
      </property>
      <property name="graphicStyles" rwaccess="readonly">
        <shortdesc>The graphic styles defined in this document.</shortdesc>
        <datatype>
          <type href="#/ArtStyles">ArtStyles</type>
        </datatype>
      </property>
      <property name="variables" rwaccess="readonly">
        <shortdesc>The variables defined in this document.</shortdesc>
        <datatype>
          <type href="#/Variables">Variables</type>
        </datatype>
      </property>
      <property name="inkList" rwaccess="readonly">
        <shortdesc>The list of inks in this document.</shortdesc>
        <datatype>
          <type href="#/Ink">Ink</type>
          <array />
        </datatype>
      </property>
      <property name="dataSets" rwaccess="readonly">
        <shortdesc>The data sets defined in this document.</shortdesc>
        <datatype>
          <type href="#/DataSets">DataSets</type>
        </datatype>
      </property>
      <property name="legacyTextItems" rwaccess="readonly">
        <shortdesc>The text frame items in this story.</shortdesc>
        <datatype>
          <type href="#/LegacyTextItems">LegacyTextItems</type>
        </datatype>
      </property>
      <method name="close">
        <shortdesc>Close the specified document(s)</shortdesc>
        <parameters>
          <parameter name="saving" optional="true">
            <shortdesc>Specifies whether changes should be saved before closing.</shortdesc>
            <datatype>
              <type href="#/SaveOptions">SaveOptions</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="processGesture">
        <shortdesc>Process a gesture based on input points.</shortdesc>
        <parameters>
          <parameter name="gesturePointsFile">
            <shortdesc>File Path containing points constituting the gesture.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="save">
        <shortdesc>Save the document.</shortdesc>
      </method>
      <method name="saveAs">
        <shortdesc>Save the document with specific save options.</shortdesc>
        <parameters>
          <parameter name="saveIn">
            <shortdesc>The file to save the document in.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Options for the file type specified.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="print">
        <shortdesc>Print the document.</shortdesc>
        <parameters>
          <parameter name="options" optional="true">
            <shortdesc>Print options.</shortdesc>
            <datatype>
              <type href="#/PrintOptions">PrintOptions</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportForScreens">
        <shortdesc>Export the specified document/asset(s)/artboard(s)</shortdesc>
        <parameters>
          <parameter name="exportFolder">
            <shortdesc>The folder where the exported documents/assets/artboards are saved.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="exportFormat">
            <shortdesc>The file type in which the document is exported.</shortdesc>
            <datatype>
              <type href="#/ExportForScreensType">ExportForScreensType</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Options for the file type specified.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
          <parameter name="itemToExport" optional="true">
            <shortdesc>What to export.</shortdesc>
            <datatype>
              <type href="#/ExportForScreensItemToExport">ExportForScreensItemToExport</type>
            </datatype>
          </parameter>
          <parameter name="fileNamePrefix" optional="true">
            <shortdesc>String prepended to each file name.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportFile">
        <shortdesc>Export the specified document(s)</shortdesc>
        <parameters>
          <parameter name="exportFile">
            <shortdesc>The file to export the document to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="exportFormat">
            <shortdesc>The file type to export the document as.</shortdesc>
            <datatype>
              <type href="#/ExportType">ExportType</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Options for the file type specified.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportSelectionAsPNG">
        <shortdesc>Export the selection as PNG file.</shortdesc>
        <parameters>
          <parameter name="exportFile">
            <shortdesc>The file to export the selection to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Options for the PNG24 export.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportSelectionAsAi">
        <shortdesc>Export the selection as Ai file.</shortdesc>
        <parameters>
          <parameter name="exportFile">
            <shortdesc>The file to export the selection to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="importFile">
        <shortdesc>Import the file into current Ai document.</shortdesc>
        <parameters>
          <parameter name="importFile">
            <shortdesc>The file to import in the current document.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="isLinked">
            <shortdesc>Is AssetLiveLinked.</shortdesc>
            <datatype>
              <type>bool</type>
            </datatype>
          </parameter>
          <parameter name="libraryName" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="itemName" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="elementRef" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="modifiedTime" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="creationTime" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="adobeStockId" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="adobeStockLicense" optional="true">
            <shortdesc>For Internal Use.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="shouldLoadToPlaceGun" optional="true">
            <shortdesc>Whether or not to load the imported file to placegun.</shortdesc>
            <datatype>
              <type>bool</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="activate">
        <shortdesc>Activate the first window associated with the document.</shortdesc>
      </method>
      <method name="importVariables">
        <shortdesc>Import a library containing datasets, variables and their associated dynamic data. Importing variables will overwrite existing variables and datasets.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File spec to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportVariables">
        <shortdesc>Save datasets into an XML library. The datasets contain variables and their associated dynamic data.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>File spec to export to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="importCharacterStyles">
        <shortdesc>Load the character styles from the Illustrator file.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File spec to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="importParagraphStyles">
        <shortdesc>Load the paragraph styles from the Illustrator file.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File spec to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="importPrintPreset">
        <shortdesc>Apply the named print preset from the file to the current print setting.</shortdesc>
        <parameters>
          <parameter name="printPreset">
            <shortdesc>The name of a print preset to import.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="fileSpec">
            <shortdesc>File to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportPrintPreset">
        <shortdesc>Export the current print setting to the preset file.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>File to export to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="importPDFPreset">
        <shortdesc>Load all PDF presets from a file.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="replacingPreset" optional="true">
            <shortdesc>Should existing editable presets be replaced?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportPDFPreset">
        <shortdesc>Save all PDF presets to a file.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>File to export to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="importPerspectiveGridPreset">
        <shortdesc>Loads mentioned perspective grid preset, if preset name is specified, else loads all(if no preset name is specified) presets, from the specified file.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File to import from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="perspectivePreset" optional="true">
            <shortdesc>Name of perspective grid preset.</shortdesc>
            <datatype>
              <type>string</type>
              <value></value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="exportPerspectiveGridPreset">
        <shortdesc>Saves all perspective grid presets to a file.</shortdesc>
        <parameters>
          <parameter name="file">
            <shortdesc>File to export to.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="imageCapture">
        <shortdesc>Capture the artwork content inside the clip bound as raster image, and write out the captured image data into the target image file.</shortdesc>
        <parameters>
          <parameter name="imageFile">
            <shortdesc>The file to which the captured image should be written.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="clipBounds" optional="true">
            <shortdesc>The rectangular region of the artwork for image capture. If the parameter is omitted, the entire artwork bound is captured.</shortdesc>
            <datatype>
              <type href="#/Rect">Rect</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Describes the image capture options.</shortdesc>
            <datatype>
              <type href="#/ImageCaptureOptions">ImageCaptureOptions</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="windowCapture">
        <shortdesc>Capture the current document window to the target TIFF image file.</shortdesc>
        <parameters>
          <parameter name="imageFile">
            <shortdesc>The TIFF file to which the captured image should be written.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
          <parameter name="windowSize">
            <shortdesc>The size to make the window before capture.</shortdesc>
            <datatype>
              <type href="#/Point">Point</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="rasterize">
        <shortdesc>Rasterize the source art(s) within the specified clip bounds. The source art(s) are disposed as a result of the rasterization.</shortdesc>
        <parameters>
          <parameter name="sourceArt">
            <shortdesc>The page item(s) to be rasterized.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
          <parameter name="clipBounds" optional="true">
            <shortdesc>The rectangular region of the artwork for the rasterization. If the parameter is omitted, the bounds of the source art(s) is used instead.</shortdesc>
            <datatype>
              <type href="#/Rect">Rect</type>
            </datatype>
          </parameter>
          <parameter name="options" optional="true">
            <shortdesc>Describes the rasterization options.</shortdesc>
            <datatype>
              <type href="#/RasterizeOptions">RasterizeOptions</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PageItem">PageItem</type>
        </datatype>
      </method>
      <method name="rearrangeArtboards">
        <shortdesc>Rearrange Artboards in the document.</shortdesc>
        <parameters>
          <parameter name="artboardLayout" optional="true">
            <shortdesc>Layout of artboards for rearrangement.</shortdesc>
            <datatype>
              <type href="#/DocumentArtboardLayout">DocumentArtboardLayout</type>
              <value>DocumentArtboardLayout.GridByRow</value>
            </datatype>
          </parameter>
          <parameter name="artboardRowsOrCols" optional="true">
            <shortdesc>Number of rows (for rows layout) OR column(for column layouts)of artboards.Range is 1 to (docNumArtboards - 1) or 1 for single row or column layouts.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
              <value>1</value>
            </datatype>
          </parameter>
          <parameter name="artboardSpacing" optional="true">
            <shortdesc>Spacing between artboards.</shortdesc>
            <datatype>
              <type>number</type>
              <value>20.0</value>
            </datatype>
          </parameter>
          <parameter name="artboardMoveArtwork" optional="true">
            <shortdesc>Whether to move artwork with artboards.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="selectObjectsOnActiveArtboard">
        <shortdesc>Select art objects in active artboard.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="fitArtboardToSelectedArt">
        <shortdesc>Change the artboard to selected art bounds.</shortdesc>
        <parameters>
          <parameter name="index" optional="true">
            <shortdesc>The index of the artboard to update.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="convertCoordinate">
        <shortdesc>Converts the coordinate system of a single point from one coordinate system to another.</shortdesc>
        <parameters>
          <parameter name="coordinate">
            <shortdesc>The Coordinate to convert.</shortdesc>
            <datatype>
              <type href="#/Point">Point</type>
            </datatype>
          </parameter>
          <parameter name="source">
            <shortdesc>The source coordinate system.</shortdesc>
            <datatype>
              <type href="#/CoordinateSystem">CoordinateSystem</type>
            </datatype>
          </parameter>
          <parameter name="destination">
            <shortdesc>The destination coordinate system.</shortdesc>
            <datatype>
              <type href="#/CoordinateSystem">CoordinateSystem</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </method>
      <method name="selectPerspectivePreset">
        <shortdesc>Selects a predefined preset to define grid for the current document.</shortdesc>
        <parameters>
          <parameter name="perspectivePreset">
            <shortdesc>Name of perspective grid preset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="showPerspectiveGrid">
        <shortdesc>Shows the current active perspective grid for the document, if no active perspective grid then shows the default perspective grid for the document.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="hidePerspectiveGrid">
        <shortdesc>Hides the current active perspective grid for the document, if there is visible perspective grid.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="getPerspectiveActivePlane">
        <shortdesc>Gets the active plane of the active perspective grid of the document.</shortdesc>
        <datatype>
          <type href="#/PerspectiveGridPlaneType">PerspectiveGridPlaneType</type>
        </datatype>
      </method>
      <method name="setPerspectiveActivePlane">
        <shortdesc>Sets the active perspective plane for the active grid of the document.</shortdesc>
        <parameters>
          <parameter name="perspectiveGridPlane">
            <shortdesc>Type of perspective grid plane.</shortdesc>
            <datatype>
              <type href="#/PerspectiveGridPlaneType">PerspectiveGridPlaneType</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Layer" dynamic="true">
    <shortdesc>A layer.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="visible">
        <shortdesc>Is the layer visible?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="locked">
        <shortdesc>Is the layer editable?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="printable">
        <shortdesc>Is the layer printable?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="hasSelectedArtwork">
        <shortdesc>Is any artwork in this layer selected? Setting this property to false deselects all artwork in the layer.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="preview">
        <shortdesc>Is the layer rendered in preview mode?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="dimPlacedImages">
        <shortdesc>Is rendered as dimmed in this layer?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="color">
        <shortdesc>Color used when outlining artwork in this layer.</shortdesc>
        <datatype>
          <type href="#/RGBColor">RGBColor</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The layer's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="opacity">
        <shortdesc>The layer's opacity (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="zOrderPosition" rwaccess="readonly">
        <shortdesc>The drawing order of the layer.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="absoluteZOrderPosition" rwaccess="readonly">
        <shortdesc>The absolute drawing order of the layer.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="sliced">
        <shortdesc>Is the layer sliced (default: false)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="blendingMode">
        <shortdesc>The mode used when compositing an object.</shortdesc>
        <datatype>
          <type href="#/BlendModes">BlendModes</type>
        </datatype>
      </property>
      <property name="isIsolated">
        <shortdesc>Is the artwork isolated.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="artworkKnockout">
        <shortdesc>Is the artwork used to create a knockout.</shortdesc>
        <datatype>
          <type href="#/KnockoutState">KnockoutState</type>
        </datatype>
      </property>
      <property name="compoundPathItems" rwaccess="readonly">
        <shortdesc>The compound path artwork in this layer.</shortdesc>
        <datatype>
          <type href="#/CompoundPathItems">CompoundPathItems</type>
        </datatype>
      </property>
      <property name="pageItems" rwaccess="readonly">
        <shortdesc>All the artwork in this layer.</shortdesc>
        <datatype>
          <type href="#/PageItems">PageItems</type>
        </datatype>
      </property>
      <property name="pathItems" rwaccess="readonly">
        <shortdesc>The path artwork in this layer.</shortdesc>
        <datatype>
          <type href="#/PathItems">PathItems</type>
        </datatype>
      </property>
      <property name="rasterItems" rwaccess="readonly">
        <shortdesc>The raster art items in this layer.</shortdesc>
        <datatype>
          <type href="#/RasterItems">RasterItems</type>
        </datatype>
      </property>
      <property name="placedItems" rwaccess="readonly">
        <shortdesc>The placed art items in this layer.</shortdesc>
        <datatype>
          <type href="#/PlacedItems">PlacedItems</type>
        </datatype>
      </property>
      <property name="meshItems" rwaccess="readonly">
        <shortdesc>The mesh art items in this layer.</shortdesc>
        <datatype>
          <type href="#/MeshItems">MeshItems</type>
        </datatype>
      </property>
      <property name="pluginItems" rwaccess="readonly">
        <shortdesc>The plugin art items in this layer.</shortdesc>
        <datatype>
          <type href="#/PluginItems">PluginItems</type>
        </datatype>
      </property>
      <property name="graphItems" rwaccess="readonly">
        <shortdesc>The graph art items in this layer.</shortdesc>
        <datatype>
          <type href="#/GraphItems">GraphItems</type>
        </datatype>
      </property>
      <property name="nonNativeItems" rwaccess="readonly">
        <shortdesc>The non-native art items in this layer.</shortdesc>
        <datatype>
          <type href="#/NonNativeItems">NonNativeItems</type>
        </datatype>
      </property>
      <property name="groupItems" rwaccess="readonly">
        <shortdesc>The group items in this layer.</shortdesc>
        <datatype>
          <type href="#/GroupItems">GroupItems</type>
        </datatype>
      </property>
      <property name="textFrames" rwaccess="readonly">
        <shortdesc>The text frame items in this layer.</shortdesc>
        <datatype>
          <type href="#/TextFrameItems">TextFrameItems</type>
        </datatype>
      </property>
      <property name="layers" rwaccess="readonly">
        <shortdesc>Nested layers.</shortdesc>
        <datatype>
          <type href="#/Layers">Layers</type>
        </datatype>
      </property>
      <property name="symbolItems" rwaccess="readonly">
        <shortdesc>The symbol items in this layer.</shortdesc>
        <datatype>
          <type href="#/SymbolItems">SymbolItems</type>
        </datatype>
      </property>
      <property name="legacyTextItems" rwaccess="readonly">
        <shortdesc>The text frame items in this story.</shortdesc>
        <datatype>
          <type href="#/LegacyTextItems">LegacyTextItems</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Layer">Layer</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="zOrder">
        <shortdesc>Arranges the layer relative to other layers.</shortdesc>
        <parameters>
          <parameter name="zOrderCmd">
            <shortdesc>How to arrange the layer.</shortdesc>
            <datatype>
              <type href="#/ZOrderMethod">ZOrderMethod</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="View" dynamic="true">
    <shortdesc>A view.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="bounds" rwaccess="readonly">
        <shortdesc>The bounding rectangle of this view.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="centerPoint">
        <shortdesc>The center point of this view.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="zoom">
        <shortdesc>The zoom factor of this view.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="screenMode">
        <shortdesc>The mode of display.</shortdesc>
        <datatype>
          <type href="#/ScreenMode">ScreenMode</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Gradient" dynamic="true">
    <shortdesc>A gradient.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="type">
        <shortdesc>The gradient type.</shortdesc>
        <datatype>
          <type href="#/GradientType">GradientType</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The gradient's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="gradientStops" rwaccess="readonly">
        <shortdesc>The stops in this gradient.</shortdesc>
        <datatype>
          <type href="#/GradientStops">GradientStops</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="GradientStop" dynamic="true">
    <shortdesc>A gradient stop.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="midPoint">
        <shortdesc>Midpoint key value in percent.</shortdesc>
        <datatype>
          <type>number</type>
          <min>13</min>
          <max>87</max>
        </datatype>
      </property>
      <property name="rampPoint">
        <shortdesc>Location of color in the blend (in percent)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <max>100</max>
        </datatype>
      </property>
      <property name="color">
        <shortdesc>The color linked to this gradient stop.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="opacity">
        <shortdesc>The opacity (between 0.0 and 100.0) value for the gradient stop.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <max>100</max>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="Preferences" dynamic="true">
    <shortdesc>Preferences for Illustrator.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="photoshopFileOptions" rwaccess="readonly">
        <shortdesc>Options to use when opening or placing a Photoshop file.</shortdesc>
        <datatype>
          <type href="#/OpenOptionsPhotoshop">OpenOptionsPhotoshop</type>
        </datatype>
      </property>
      <property name="PDFFileOptions" rwaccess="readonly">
        <shortdesc>Options to use when opening or placing a PDF file.</shortdesc>
        <datatype>
          <type href="#/OpenOptionsPDF">OpenOptionsPDF</type>
        </datatype>
      </property>
      <property name="AutoCADFileOptions" rwaccess="readonly">
        <shortdesc>Options to use when opening or placing a AutoCAD file.</shortdesc>
        <datatype>
          <type href="#/OpenOptionsAutoCAD">OpenOptionsAutoCAD</type>
        </datatype>
      </property>
      <method name="getBooleanPreference">
        <shortdesc>Retrieve the value of the application preference key as boolean.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="setBooleanPreference">
        <shortdesc>Set the value of the application preference key as boolean.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="value">
            <shortdesc>The boolean value of the preference key.</shortdesc>
            <datatype>
              <type>bool</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getIntegerPreference">
        <shortdesc>Retrieve the value of the application preference key as integer.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </method>
      <method name="setIntegerPreference">
        <shortdesc>Set the value of the application preference key as integer.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="value">
            <shortdesc>The boolean value of the preference key.</shortdesc>
            <datatype>
              <type href="#/Int32">Int32</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getRealPreference">
        <shortdesc>Retrieve the value of the application preference key as real number.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>number</type>
        </datatype>
      </method>
      <method name="setRealPreference">
        <shortdesc>Set the value of the application preference key as real number.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="value">
            <shortdesc>The real value of the preference key.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getStringPreference">
        <shortdesc>Retrieve the value of the application preference key as string type.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
      <method name="setStringPreference">
        <shortdesc>Set the value of the application preference key as string type.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="value">
            <shortdesc>The string value of the preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="removePreference">
        <shortdesc>Delete the application preference key.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="preferenceExists">
        <shortdesc>Checks whether the application preference key exists.</shortdesc>
        <parameters>
          <parameter name="key">
            <shortdesc>The preference key.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Spot" dynamic="true">
    <shortdesc>A custom color.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The custom color's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="color">
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="colorType">
        <shortdesc>Type of the custom color.</shortdesc>
        <datatype>
          <type href="#/ColorModel">ColorModel</type>
        </datatype>
      </property>
      <property name="spotKind" rwaccess="readonly">
        <shortdesc>Kind of the spot color (i.e. RGB, CMYK or LAB), it is the name of color kind contained in spot.</shortdesc>
        <datatype>
          <type href="#/SpotColorKind">SpotColorKind</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getInternalColor">
        <shortdesc>Gets the internal color of a spot.</shortdesc>
        <datatype>
          <type>number</type>
          <array />
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Variable" dynamic="true">
    <shortdesc>Dynamic object used to create data-driven graphics.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="kind">
        <shortdesc>The variable's type.</shortdesc>
        <datatype>
          <type href="#/VariableKind">VariableKind</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The name of this variable.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="pageItems" rwaccess="readonly">
        <shortdesc>All the artwork in this document.</shortdesc>
        <datatype>
          <type href="#/PageItems">PageItems</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="DataSet" dynamic="true">
    <shortdesc>A set of variables and their associated dynamic data which will be used for dynamic publishing.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The name of this dataset.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="display">
        <shortdesc>Displays the dynamic data that has been captured in the dataset.</shortdesc>
      </method>
      <method name="update">
        <shortdesc>Re-apply the dynamic data of the active dataset to the artboard.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="Swatch" dynamic="true">
    <shortdesc>A color swatch.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The swatch's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="color">
        <shortdesc>The color information of the swatch.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="SwatchGroup" dynamic="true">
    <shortdesc>A Swatch group.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>Name of the swatch group.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="addSwatch">
        <shortdesc>Add a swatch to the group.</shortdesc>
        <parameters>
          <parameter name="swatch">
            <shortdesc>The swatch to be added to the group.</shortdesc>
            <datatype>
              <type href="#/Swatch">Swatch</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="getAllSwatches">
        <shortdesc>Get all swatches in the swatch group.</shortdesc>
        <datatype>
          <type href="#/Swatch">Swatch</type>
          <array />
        </datatype>
      </method>
      <method name="addSpot">
        <shortdesc>Add a spot swatch to the group.</shortdesc>
        <parameters>
          <parameter name="spot">
            <shortdesc>The spot swatch to be added to the group.</shortdesc>
            <datatype>
              <type href="#/Spot">Spot</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="Pattern" dynamic="true">
    <shortdesc>A pattern.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The pattern's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="Symbol" dynamic="true">
    <shortdesc>A symbol.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The symbol's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/Symbol">Symbol</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="Brush" dynamic="true">
    <shortdesc>A brush.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The brush's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="applyTo">
        <shortdesc>Apply a brush or art style to object(s)</shortdesc>
        <parameters>
          <parameter name="artItem">
            <shortdesc>The page item(s) to apply to.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="ArtStyle" dynamic="true">
    <shortdesc>An art style.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The art style's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="applyTo">
        <shortdesc>Apply a brush or art style to object(s)</shortdesc>
        <parameters>
          <parameter name="artItem">
            <shortdesc>The page item(s) to apply to.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="mergeTo">
        <shortdesc>Merge an art style to object(s) current style(s)</shortdesc>
        <parameters>
          <parameter name="artItem">
            <shortdesc>The page item(s) to merge to.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="TextFont" dynamic="true">
    <shortdesc>An installed font.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name" rwaccess="readonly">
        <shortdesc>The font's full name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="family" rwaccess="readonly">
        <shortdesc>The font's family name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="style" rwaccess="readonly">
        <shortdesc>The font's style name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="axisVector" rwaccess="readonly">
        <shortdesc>The font's Axis Vector.</shortdesc>
        <datatype>
          <type>number</type>
          <array />
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="PageItem" dynamic="true">
    <shortdesc>A page item object.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="URL">
        <shortdesc>The value of the Adobe URL tag assigned to this artwork item.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="note">
        <shortdesc>The note assigned to this artwork item.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="layer" rwaccess="readonly">
        <shortdesc>The layer to which this artwork belongs.</shortdesc>
        <datatype>
          <type href="#/Layer">Layer</type>
        </datatype>
      </property>
      <property name="locked">
        <shortdesc>Is this artwork item locked?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="hidden">
        <shortdesc>Is this artwork item hidden?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="selected">
        <shortdesc>Is this artwork item selected?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="position">
        <shortdesc>The position of the top left corner of the art item.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="width">
        <shortdesc>The width of the art item.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>16348.0</max>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The height of the art item.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>16348.0</max>
        </datatype>
      </property>
      <property name="geometricBounds" rwaccess="readonly">
        <shortdesc>The bounds of the artwork excluding stroke width.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="visibleBounds" rwaccess="readonly">
        <shortdesc>The visible bounds of the artwork including stroke width.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="controlBounds" rwaccess="readonly">
        <shortdesc>The bounds of the artwork including stroke width and controls.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The item's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="blendingMode">
        <shortdesc>The mode used when compositing an object.</shortdesc>
        <datatype>
          <type href="#/BlendModes">BlendModes</type>
        </datatype>
      </property>
      <property name="opacity">
        <shortdesc>The object's opacity (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
        </datatype>
      </property>
      <property name="isIsolated">
        <shortdesc>Is the artwork isolated.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="artworkKnockout">
        <shortdesc>Is the artwork used to create a knockout.</shortdesc>
        <datatype>
          <type href="#/KnockoutState">KnockoutState</type>
        </datatype>
      </property>
      <property name="zOrderPosition" rwaccess="readonly">
        <shortdesc>The drawing order of the art within it's group or layer.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="absoluteZOrderPosition" rwaccess="readonly">
        <shortdesc>The absolute drawing order of the layer.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="editable" rwaccess="readonly">
        <shortdesc>Can the art item be modified.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="sliced">
        <shortdesc>Is the art item sliced (default: false)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="top">
        <shortdesc>The top position of the art item.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="left">
        <shortdesc>The left position of the art item.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="visibilityVariable">
        <shortdesc>The visibility variable bound to this page item.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <property name="tags" rwaccess="readonly">
        <shortdesc>The collection of tags associated with this page item.</shortdesc>
        <datatype>
          <type href="#/Tags">Tags</type>
        </datatype>
      </property>
      <property name="pixelAligned">
        <shortdesc>Is this artwork item aligned to Pixel Grid?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="wrapped">
        <shortdesc>Wrap text frame objects around this object (text frame must be above the object)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="wrapOffset">
        <shortdesc>Use this offset when wrapping text around this object.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="wrapInside">
        <shortdesc>Should the text frame object be wrapped inside this object?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PageItem">PageItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PageItem">PageItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="translate">
        <shortdesc>Reposition art object(s)</shortdesc>
        <parameters>
          <parameter name="deltaX" optional="true">
            <shortdesc>Horizontal transformation.</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
          <parameter name="deltaY" optional="true">
            <shortdesc>Vertical transformation.</shortdesc>
            <datatype>
              <type>number</type>
              <value>0.0</value>
            </datatype>
          </parameter>
          <parameter name="transformObjects" optional="true">
            <shortdesc>Are art object positions and orientations affected?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="transformFillPatterns" optional="true">
            <shortdesc>Are the fill patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="transformFillGradients" optional="true">
            <shortdesc>Are the fill gradients assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="transformStrokePattern" optional="true">
            <shortdesc>Are the stroke patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="resize">
        <shortdesc>Scale art object(s)</shortdesc>
        <parameters>
          <parameter name="scaleX">
            <shortdesc>Horizontal scaling factor expressed as a percentage (100 = 100%)</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="scaleY">
            <shortdesc>Vertical scaling factor expressed as a percentage (100 = 100%)</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="changePositions" optional="true">
            <shortdesc>Are art object positions and orientations effected?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeFillPatterns" optional="true">
            <shortdesc>Are the fill patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeFillGradients" optional="true">
            <shortdesc>Are the fill gradients assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeStrokePattern" optional="true">
            <shortdesc>Are the stroke patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeLineWidths" optional="true">
            <shortdesc>The amount line widths are to be scaled (expressed as a percentage)</shortdesc>
            <datatype>
              <type>number</type>
              <value>100.0</value>
            </datatype>
          </parameter>
          <parameter name="scaleAbout" optional="true">
            <shortdesc>The point on the art item's bounding box to which the scale is applied.</shortdesc>
            <datatype>
              <type href="#/Transformation">Transformation</type>
              <value>Transformation.CENTER</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="rotate">
        <shortdesc>Rotate art object(s)</shortdesc>
        <parameters>
          <parameter name="angle">
            <shortdesc>Angle of rotation (in degrees). Rotation is performed counter-clock wise.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="changePositions" optional="true">
            <shortdesc>Are art object positions and orientations effected?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeFillPatterns" optional="true">
            <shortdesc>Are the fill patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeFillGradients" optional="true">
            <shortdesc>Are the fill gradients assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeStrokePattern" optional="true">
            <shortdesc>Are the stroke patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="rotateAbout" optional="true">
            <shortdesc>The point on the art item's bounding box to which the rotation is applied.</shortdesc>
            <datatype>
              <type href="#/Transformation">Transformation</type>
              <value>Transformation.CENTER</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="transform">
        <shortdesc>Transform art object(s) using a transformation matrix.</shortdesc>
        <parameters>
          <parameter name="transformationMatrix">
            <shortdesc>The transformation matrix to be applied to the objects.</shortdesc>
            <datatype>
              <type href="#/Matrix">Matrix</type>
            </datatype>
          </parameter>
          <parameter name="changePositions" optional="true">
            <shortdesc>Are art object positions and orientations effected?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeFillPatterns" optional="true">
            <shortdesc>Are the fill patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeFillGradients" optional="true">
            <shortdesc>Are the fill gradients assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeStrokePattern" optional="true">
            <shortdesc>Are the stroke patterns assigned to paths to be transformed?</shortdesc>
            <datatype>
              <type>bool</type>
              <value>true</value>
            </datatype>
          </parameter>
          <parameter name="changeLineWidths" optional="true">
            <shortdesc>The amount line widths are to be scaled (expressed as a percentage)</shortdesc>
            <datatype>
              <type>number</type>
              <value>100.0</value>
            </datatype>
          </parameter>
          <parameter name="transformAbout" optional="true">
            <shortdesc>The point on the art item's bounding box to which scale and rotation operations apply.</shortdesc>
            <datatype>
              <type href="#/Transformation">Transformation</type>
              <value>Transformation.CENTER</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="bringInPerspective">
        <shortdesc>Place art object(s)in perspective grid at spedified perspective plane and coordinate.</shortdesc>
        <parameters>
          <parameter name="positionX">
            <shortdesc>Position towards X direction of specified or active perspective grid plane.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="positionY">
            <shortdesc>Position towards Y direction of specified or active perspective grid plane.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="perspectiveGridPlane">
            <shortdesc>Type of perspective grid plane.</shortdesc>
            <datatype>
              <type href="#/PerspectiveGridPlaneType">PerspectiveGridPlaneType</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="zOrder">
        <shortdesc>Arranges the art relative to other art in the group or layer.</shortdesc>
        <parameters>
          <parameter name="zOrderCmd">
            <shortdesc>How to arrange the art.</shortdesc>
            <datatype>
              <type href="#/ZOrderMethod">ZOrderMethod</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="applyEffect">
        <shortdesc>Apply effect to selected artItem.</shortdesc>
        <parameters>
          <parameter name="liveEffectXML">
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="sendScriptMessage">
        <shortdesc>Sends the script message to the required plugin.</shortdesc>
        <parameters>
          <parameter name="pluginName">
            <shortdesc>Plugin to which message needs to be sent.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="messageSelector">
            <shortdesc>Functionality that is to be executed.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="inputString">
            <shortdesc>Pass any data encoded in a string.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="CompoundPathItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Compound path artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="pathItems" rwaccess="readonly">
        <shortdesc>The path artwork in this compound path.</shortdesc>
        <datatype>
          <type href="#/PathItems">PathItems</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/CompoundPathItem">CompoundPathItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/CompoundPathItem">CompoundPathItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="Tag" dynamic="true">
    <shortdesc>A tag associated with a piece of artwork.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The tag's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="value">
        <shortdesc>The data stored in this tag.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="PathItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>An artwork path item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="closed">
        <shortdesc>Is this path closed?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="area" rwaccess="readonly">
        <shortdesc>The area of this path in square points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>The length of this path in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="guides">
        <shortdesc>Is this path a guide object?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="filled">
        <shortdesc>Should the path be filled?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="fillColor">
        <shortdesc>Fill color.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="fillOverprint">
        <shortdesc>Will art beneath a filled object be overprinted?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="stroked">
        <shortdesc>Should the path be stroked?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strokeColor">
        <shortdesc>Stroke color.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="strokeOverprint">
        <shortdesc>Will art beneath a stroked object be overprinted?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strokeWidth">
        <shortdesc>Width of stroke.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="strokeDashes">
        <shortdesc>Dash lengths (set to {} for a solid line)</shortdesc>
        <datatype>
          <type>number</type>
          <array />
        </datatype>
      </property>
      <property name="strokeDashOffset">
        <shortdesc>The default distance into the dash pattern at which the pattern should be started.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="strokeCap">
        <shortdesc>Type of line capping.</shortdesc>
        <datatype>
          <type href="#/StrokeCap">StrokeCap</type>
        </datatype>
      </property>
      <property name="strokeJoin">
        <shortdesc>Type of joints.</shortdesc>
        <datatype>
          <type href="#/StrokeJoin">StrokeJoin</type>
        </datatype>
      </property>
      <property name="strokeMiterLimit">
        <shortdesc>Whether a join is mitered (pointed) or beveled (squared-off)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="clipping">
        <shortdesc>Should this be used as a clipping path?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="evenodd">
        <shortdesc>Should the even-odd rule be used to determine insideness?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>The resolution of the path.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="selectedPathPoints" rwaccess="readonly">
        <shortdesc>All the selected points in the path.</shortdesc>
        <datatype>
          <type href="#/ObjectArray">ObjectArray</type>
        </datatype>
      </property>
      <property name="polarity">
        <shortdesc>The polarity the path.</shortdesc>
        <datatype>
          <type href="#/PolarityValues">PolarityValues</type>
        </datatype>
      </property>
      <property name="pathPoints" rwaccess="readonly">
        <datatype>
          <type href="#/PathPoints">PathPoints</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PathItem">PathItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PathItem">PathItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="setEntirePath">
        <shortdesc>Set the path using the provided array of path point (x, y) coordinate pairs.</shortdesc>
        <parameters>
          <parameter name="pathPoints">
            <shortdesc>Array of (x, y) coordinate pairs for the path points.</shortdesc>
            <datatype>
              <type>any</type>
              <array />
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="PathPoint" dynamic="true">
    <shortdesc>A point on a path.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="anchor">
        <shortdesc>The position (coordinates) of the anchor point.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="leftDirection">
        <shortdesc>Location of the left direction point (in position)</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="rightDirection">
        <shortdesc>Location of the right direction point (out position)</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="pointType">
        <shortdesc>The type of point: smooth/corner.</shortdesc>
        <datatype>
          <type href="#/PointType">PointType</type>
        </datatype>
      </property>
      <property name="selected">
        <shortdesc>The path point selected state.</shortdesc>
        <datatype>
          <type href="#/PathPointSelection">PathPointSelection</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="RasterItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Raster artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="file" rwaccess="readonly">
        <shortdesc>The file containing the raster artwork.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="matrix">
        <shortdesc>The transformation matrix of the raster art object.</shortdesc>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </property>
      <property name="boundingBox">
        <shortdesc>Dimensions of raster art object regardless of transformations.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="imageColorSpace" rwaccess="readonly">
        <shortdesc>The color space of the raster image.</shortdesc>
        <datatype>
          <type href="#/ImageColorSpace">ImageColorSpace</type>
        </datatype>
      </property>
      <property name="embedded">
        <shortdesc>Is the raster art embedded within the illustration?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="overprint">
        <shortdesc>Is the raster art overprinting?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="colorizedGrayscale" rwaccess="readonly">
        <shortdesc>Is the raster art a colorized grayscale image?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="transparent" rwaccess="readonly">
        <shortdesc>Is the raster art transparent?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="channels" rwaccess="readonly">
        <shortdesc>The number of image channels.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="bitsPerChannel" rwaccess="readonly">
        <shortdesc>The number of bits per channel.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="colorants" rwaccess="readonly">
        <shortdesc>List of colorant names.</shortdesc>
        <datatype>
          <type>string</type>
          <array />
        </datatype>
      </property>
      <property name="status" rwaccess="readonly">
        <shortdesc>Status of the linked image.</shortdesc>
        <datatype>
          <type href="#/RasterLinkState">RasterLinkState</type>
        </datatype>
      </property>
      <property name="contentVariable">
        <shortdesc>The content variable bound to this raster art object.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/RasterItem">RasterItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/RasterItem">RasterItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="colorize">
        <shortdesc>Colorize the RasterItem with a CMYK or RGB Color.</shortdesc>
        <parameters>
          <parameter name="rasterColor">
            <shortdesc>The color to use for coloring the TIFF image.</shortdesc>
            <datatype>
              <type href="#/Color">Color</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="trace">
        <shortdesc>Trace this raster object using default options. Reorders this raster to the source art.</shortdesc>
        <datatype>
          <type href="#/PluginItem">PluginItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="PlacedItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Placed artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="file">
        <shortdesc>The file containing the placed artwork.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <property name="matrix">
        <shortdesc>The transformation matrix of the placed art object.</shortdesc>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </property>
      <property name="boundingBox" rwaccess="readonly">
        <shortdesc>Dimensions of placed art object, regardless of transformations.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="contentVariable">
        <shortdesc>The content variable bound to this placed art object.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PlacedItem">PlacedItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PlacedItem">PlacedItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="embed">
        <shortdesc>Embed the placed art within the illustration.</shortdesc>
      </method>
      <method name="trace">
        <shortdesc>Trace this raster object using default options. Reorders this placed to the source art.</shortdesc>
        <datatype>
          <type href="#/PluginItem">PluginItem</type>
        </datatype>
      </method>
      <method name="relink">
        <shortdesc>Relink the placed art with supplied art from file.</shortdesc>
        <parameters>
          <parameter name="fileSpec">
            <shortdesc>File spec to relink from.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="EmbedItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Embedded artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="file">
        <shortdesc>The file containing the placed artwork.</shortdesc>
        <datatype>
          <type href="#/File">File</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/EmbedItem">EmbedItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/EmbedItem">EmbedItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="GraphItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Graph artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="contentVariable">
        <shortdesc>The content variable bound to this graph.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GraphItem">GraphItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GraphItem">GraphItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="NonNativeItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Non-native artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/NonNativeItem">NonNativeItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/NonNativeItem">NonNativeItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="MeshItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Mesh artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/MeshItem">MeshItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/MeshItem">MeshItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="PluginItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Plugin artwork item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="isTracing" rwaccess="readonly">
        <shortdesc>Is the plugin group a tracing?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="tracing" rwaccess="readonly">
        <shortdesc>The tracing object associated with this plugin item.</shortdesc>
        <datatype>
          <type href="#/TracingObject">TracingObject</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PluginItem">PluginItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/PluginItem">PluginItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="GroupItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>An artwork group item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="clipped">
        <shortdesc>Are the group elements clipped to the clipping path?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="groupItems" rwaccess="readonly">
        <shortdesc>The group items in this group.</shortdesc>
        <datatype>
          <type href="#/GroupItems">GroupItems</type>
        </datatype>
      </property>
      <property name="pageItems" rwaccess="readonly">
        <shortdesc>All the artwork in this group.</shortdesc>
        <datatype>
          <type href="#/PageItems">PageItems</type>
        </datatype>
      </property>
      <property name="compoundPathItems" rwaccess="readonly">
        <shortdesc>The compound path artwork in this group.</shortdesc>
        <datatype>
          <type href="#/CompoundPathItems">CompoundPathItems</type>
        </datatype>
      </property>
      <property name="pathItems" rwaccess="readonly">
        <shortdesc>The path artwork in this group.</shortdesc>
        <datatype>
          <type href="#/PathItems">PathItems</type>
        </datatype>
      </property>
      <property name="rasterItems" rwaccess="readonly">
        <shortdesc>The raster art items in this group.</shortdesc>
        <datatype>
          <type href="#/RasterItems">RasterItems</type>
        </datatype>
      </property>
      <property name="placedItems" rwaccess="readonly">
        <shortdesc>The placed art items in this group.</shortdesc>
        <datatype>
          <type href="#/PlacedItems">PlacedItems</type>
        </datatype>
      </property>
      <property name="meshItems" rwaccess="readonly">
        <shortdesc>The mesh art items in this group.</shortdesc>
        <datatype>
          <type href="#/MeshItems">MeshItems</type>
        </datatype>
      </property>
      <property name="pluginItems" rwaccess="readonly">
        <shortdesc>The plugin art items in this group.</shortdesc>
        <datatype>
          <type href="#/PluginItems">PluginItems</type>
        </datatype>
      </property>
      <property name="graphItems" rwaccess="readonly">
        <shortdesc>The graph art items in this group.</shortdesc>
        <datatype>
          <type href="#/GraphItems">GraphItems</type>
        </datatype>
      </property>
      <property name="nonNativeItems" rwaccess="readonly">
        <shortdesc>The non-native art items in this group.</shortdesc>
        <datatype>
          <type href="#/NonNativeItems">NonNativeItems</type>
        </datatype>
      </property>
      <property name="textFrames" rwaccess="readonly">
        <shortdesc>The text frame items in this group.</shortdesc>
        <datatype>
          <type href="#/TextFrameItems">TextFrameItems</type>
        </datatype>
      </property>
      <property name="symbolItems" rwaccess="readonly">
        <shortdesc>The symbol items in this group.</shortdesc>
        <datatype>
          <type href="#/SymbolItems">SymbolItems</type>
        </datatype>
      </property>
      <property name="legacyTextItems" rwaccess="readonly">
        <shortdesc>The text frame items in this story.</shortdesc>
        <datatype>
          <type href="#/LegacyTextItems">LegacyTextItems</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GroupItem">GroupItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GroupItem">GroupItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="SymbolItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>An instance of a Symbol.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="symbol">
        <shortdesc>The symbol that was used to create this symbol item.</shortdesc>
        <datatype>
          <type href="#/Symbol">Symbol</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/SymbolItem">SymbolItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/SymbolItem">SymbolItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="breakLink">
        <shortdesc>Break link to the symbol.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="TextPath" dynamic="true">
    <shortdesc>A text path item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="position">
        <shortdesc>The position of the top left corner of the text path.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="width">
        <shortdesc>The width of the text path.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>16348.0</max>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The height of the text path.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>16348.0</max>
        </datatype>
      </property>
      <property name="blendingMode">
        <shortdesc>The mode used when compositing an object.</shortdesc>
        <datatype>
          <type href="#/BlendModes">BlendModes</type>
        </datatype>
      </property>
      <property name="opacity">
        <shortdesc>The object's opacity (between 0.0 and 100.0)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.0</min>
          <max>100.0</max>
        </datatype>
      </property>
      <property name="editable" rwaccess="readonly">
        <shortdesc>Can the text path be modified.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="top">
        <shortdesc>The top position of the text path.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="left">
        <shortdesc>The left position of the text path.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="closed">
        <shortdesc>Is this path closed?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="area" rwaccess="readonly">
        <shortdesc>The area of this path in square points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="guides">
        <shortdesc>Is this path a guide object?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="filled">
        <shortdesc>Should the path be filled?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="fillColor">
        <shortdesc>Fill color.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="fillOverprint">
        <shortdesc>Will art beneath a filled object be overprinted?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="stroked">
        <shortdesc>Should the path be stroked?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strokeColor">
        <shortdesc>Stroke color.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="strokeOverprint">
        <shortdesc>Will art beneath a stroked object be overprinted?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strokeWidth">
        <shortdesc>Width of stroke.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="strokeDashes">
        <shortdesc>Dash lengths (set to {} for a solid line)</shortdesc>
        <datatype>
          <type>number</type>
          <array />
        </datatype>
      </property>
      <property name="strokeDashOffset">
        <shortdesc>The default distance into the dash pattern at which the pattern should be started.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="strokeCap">
        <shortdesc>Type of line capping.</shortdesc>
        <datatype>
          <type href="#/StrokeCap">StrokeCap</type>
        </datatype>
      </property>
      <property name="strokeJoin">
        <shortdesc>Type of joints.</shortdesc>
        <datatype>
          <type href="#/StrokeJoin">StrokeJoin</type>
        </datatype>
      </property>
      <property name="strokeMiterLimit">
        <shortdesc>Whether a join is mitered (pointed) or beveled (squared-off)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="clipping">
        <shortdesc>Should this be used as a clipping path?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="evenodd">
        <shortdesc>Should the even-odd rule be used to determine insideness?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="resolution">
        <shortdesc>The resolution of the path.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="note">
        <shortdesc>Note assigned to the path.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="selectedPathPoints" rwaccess="readonly">
        <shortdesc>All the selected points in the path.</shortdesc>
        <datatype>
          <type href="#/ObjectArray">ObjectArray</type>
        </datatype>
      </property>
      <property name="polarity">
        <shortdesc>The polarity the path.</shortdesc>
        <datatype>
          <type href="#/PolarityValues">PolarityValues</type>
        </datatype>
      </property>
      <property name="pathPoints" rwaccess="readonly">
        <datatype>
          <type href="#/PathPoints">PathPoints</type>
        </datatype>
      </property>
      <method name="setEntirePath">
        <shortdesc>Set the path using the provided array of anchor points.</shortdesc>
        <parameters>
          <parameter name="pathPoints">
            <shortdesc>Array of anchor values for the path points.</shortdesc>
            <datatype>
              <type>any</type>
              <array />
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="Story" dynamic="true">
    <shortdesc>A contiguous block of text.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="textRange" rwaccess="readonly">
        <shortdesc>The text range of the story.</shortdesc>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </property>
      <property name="textFrames" rwaccess="readonly">
        <shortdesc>The text frame items in this story.</shortdesc>
        <datatype>
          <type href="#/TextFrameItems">TextFrameItems</type>
        </datatype>
      </property>
      <property name="textSelection" rwaccess="readonly">
        <shortdesc>The selected text (ranges) in the story.</shortdesc>
        <datatype>
          <type href="#/TextRange">TextRange</type>
          <array />
        </datatype>
      </property>
      <property name="characters" rwaccess="readonly">
        <shortdesc>All the characters in this text range.</shortdesc>
        <datatype>
          <type href="#/Characters">Characters</type>
        </datatype>
      </property>
      <property name="words" rwaccess="readonly">
        <shortdesc>All the words in this text range.</shortdesc>
        <datatype>
          <type href="#/Words">Words</type>
        </datatype>
      </property>
      <property name="lines" rwaccess="readonly">
        <shortdesc>All the lines in this text range.</shortdesc>
        <datatype>
          <type href="#/Lines">Lines</type>
        </datatype>
      </property>
      <property name="paragraphs" rwaccess="readonly">
        <shortdesc>All the paragraphs in this text range.</shortdesc>
        <datatype>
          <type href="#/Paragraphs">Paragraphs</type>
        </datatype>
      </property>
      <property name="textRanges" rwaccess="readonly">
        <shortdesc>All the text in this text range.</shortdesc>
        <datatype>
          <type href="#/TextRanges">TextRanges</type>
        </datatype>
      </property>
      <property name="insertionPoints" rwaccess="readonly">
        <shortdesc>All the insertion points in this text range.</shortdesc>
        <datatype>
          <type href="#/InsertionPoints">InsertionPoints</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>The number of characters in the story.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TextFrameItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Text frame item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="story" rwaccess="readonly">
        <shortdesc>The story of the text frame.</shortdesc>
        <datatype>
          <type href="#/Story">Story</type>
        </datatype>
      </property>
      <property name="contents">
        <shortdesc>The text contents of this text frame.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="textRange" rwaccess="readonly">
        <shortdesc>The text range of the text frame.</shortdesc>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </property>
      <property name="textSelection" rwaccess="readonly">
        <shortdesc>The selected text (ranges) in the story.</shortdesc>
        <datatype>
          <type href="#/TextRange">TextRange</type>
          <array />
        </datatype>
      </property>
      <property name="rowCount">
        <shortdesc>The row count in the text frame (area text only)</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="columnCount">
        <shortdesc>The column count in the text frame (area text only)</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="rowGutter">
        <shortdesc>The row gutter in the text frame (area text only)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="columnGutter">
        <shortdesc>The column gutter in the text frame (area text only)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="flowLinksHorizontally">
        <shortdesc>Flow text between linked frame horizontally first. (area text only)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="spacing">
        <shortdesc>The amount of spacing (path text only)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="opticalAlignment">
        <shortdesc>Is the optical alignment active?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="kind" rwaccess="readonly">
        <shortdesc>The type of a text frame item.</shortdesc>
        <datatype>
          <type href="#/TextType">TextType</type>
        </datatype>
      </property>
      <property name="contentVariable">
        <shortdesc>The content variable bound to this text art item.</shortdesc>
        <datatype>
          <type>any</type>
        </datatype>
      </property>
      <property name="orientation">
        <shortdesc>The orientation of the text in the frame.</shortdesc>
        <datatype>
          <type href="#/TextOrientation">TextOrientation</type>
        </datatype>
      </property>
      <property name="textPath" rwaccess="readonly">
        <shortdesc>The path for the text frame (area and path text)</shortdesc>
        <datatype>
          <type href="#/TextPath">TextPath</type>
        </datatype>
      </property>
      <property name="anchor">
        <shortdesc>The position of the anchor point (start of base line for point text)</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="startTValue">
        <shortdesc>The start position of text along a path, as a value relative to the path's segments (path text only)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="endTValue">
        <shortdesc>The end position of text along a path, as a value relative to the path's segments (path text only)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="previousFrame">
        <shortdesc>The linked text frame preceding this one.</shortdesc>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </property>
      <property name="nextFrame">
        <shortdesc>The linked text frame following this one.</shortdesc>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </property>
      <property name="matrix" rwaccess="readonly">
        <shortdesc>The transformation matrix of the text frame object.</shortdesc>
        <datatype>
          <type href="#/Matrix">Matrix</type>
        </datatype>
      </property>
      <property name="antialias">
        <shortdesc>The type of a text anti-aliasing on text frame item.</shortdesc>
        <datatype>
          <type href="#/TextAntialias">TextAntialias</type>
        </datatype>
      </property>
      <property name="firstBaseline">
        <shortdesc>The first baseline offset type for text frame item (for Area Text only)</shortdesc>
        <datatype>
          <type href="#/FirstBaselineType">FirstBaselineType</type>
        </datatype>
      </property>
      <property name="firstBaselineMin">
        <shortdesc>The first baseline offset minimum value for text frame item (for Area Text only)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="characters" rwaccess="readonly">
        <shortdesc>All the characters in this text range.</shortdesc>
        <datatype>
          <type href="#/Characters">Characters</type>
        </datatype>
      </property>
      <property name="words" rwaccess="readonly">
        <shortdesc>All the words in this text range.</shortdesc>
        <datatype>
          <type href="#/Words">Words</type>
        </datatype>
      </property>
      <property name="lines" rwaccess="readonly">
        <shortdesc>All the lines in this text range.</shortdesc>
        <datatype>
          <type href="#/Lines">Lines</type>
        </datatype>
      </property>
      <property name="paragraphs" rwaccess="readonly">
        <shortdesc>All the paragraphs in this text range.</shortdesc>
        <datatype>
          <type href="#/Paragraphs">Paragraphs</type>
        </datatype>
      </property>
      <property name="textRanges" rwaccess="readonly">
        <shortdesc>All the text in this text range.</shortdesc>
        <datatype>
          <type href="#/TextRanges">TextRanges</type>
        </datatype>
      </property>
      <property name="insertionPoints" rwaccess="readonly">
        <shortdesc>All the insertion points in this text range.</shortdesc>
        <datatype>
          <type href="#/InsertionPoints">InsertionPoints</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="createOutline">
        <shortdesc>Convert text item to path items.</shortdesc>
        <datatype>
          <type href="#/GroupItem">GroupItem</type>
        </datatype>
      </method>
      <method name="convertAreaObjectToPointObject">
        <shortdesc>Convert Area Type Text Object To Point Type Object.</shortdesc>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </method>
      <method name="convertPointObjectToAreaObject">
        <shortdesc>Convert Point Type Text Object To Area Type Object.</shortdesc>
        <datatype>
          <type href="#/TextFrameItem">TextFrameItem</type>
        </datatype>
      </method>
      <method name="generateThumbnailWithTextFrameProperties">
        <shortdesc>Generates the thumbnail with the properties of first character in the text frame.</shortdesc>
        <parameters>
          <parameter name="textString">
            <shortdesc>The text string which is to be used in the thumbnail generation.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
          <parameter name="fontSize">
            <shortdesc>The size in points of the text string.</shortdesc>
            <datatype>
              <type>number</type>
            </datatype>
          </parameter>
          <parameter name="textColor">
            <shortdesc>The color of the text string.</shortdesc>
            <datatype>
              <type href="#/Color">Color</type>
            </datatype>
          </parameter>
          <parameter name="destinationPath">
            <shortdesc>The location at which the thumbnail is to be stored.</shortdesc>
            <datatype>
              <type href="#/File">File</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="LegacyTextItem" dynamic="true">
    <superclass>PageItem</superclass>
    <shortdesc>Unconverted legacy text items from documents in pre-version 11 formats.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="converted" rwaccess="readonly">
        <shortdesc>Has the legacy text item been updated to a native text frame item?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/LegacyTextItem">LegacyTextItem</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="convertToNative">
        <shortdesc>Create a native text frame from a legacy text item. The original legacy text item is deleted.</shortdesc>
        <datatype>
          <type href="#/GroupItem">GroupItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="TextRange" dynamic="true">
    <shortdesc>A range of characters from a text item.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="characterOffset">
        <shortdesc>Offset of the first character of the range from the beginning of the story, in characters.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="length">
        <shortdesc>Length of text range.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>0</min>
        </datatype>
      </property>
      <property name="contents">
        <shortdesc>The text string.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="kerning">
        <shortdesc>Controls the spacing between two characters (in milli-ems)</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="story" rwaccess="readonly">
        <shortdesc>The story of the text range.</shortdesc>
        <datatype>
          <type href="#/Story">Story</type>
        </datatype>
      </property>
      <property name="textSelection" rwaccess="readonly">
        <shortdesc>The selected text (ranges) in the text range.</shortdesc>
        <datatype>
          <type href="#/TextRange">TextRange</type>
          <array />
        </datatype>
      </property>
      <property name="characters" rwaccess="readonly">
        <shortdesc>All the characters in this text range.</shortdesc>
        <datatype>
          <type href="#/Characters">Characters</type>
        </datatype>
      </property>
      <property name="words" rwaccess="readonly">
        <shortdesc>All the words in this text range.</shortdesc>
        <datatype>
          <type href="#/Words">Words</type>
        </datatype>
      </property>
      <property name="lines" rwaccess="readonly">
        <shortdesc>All the lines in this text range.</shortdesc>
        <datatype>
          <type href="#/Lines">Lines</type>
        </datatype>
      </property>
      <property name="paragraphs" rwaccess="readonly">
        <shortdesc>All the paragraphs in this text range.</shortdesc>
        <datatype>
          <type href="#/Paragraphs">Paragraphs</type>
        </datatype>
      </property>
      <property name="textRanges" rwaccess="readonly">
        <shortdesc>All the text in this text range.</shortdesc>
        <datatype>
          <type href="#/TextRanges">TextRanges</type>
        </datatype>
      </property>
      <property name="insertionPoints" rwaccess="readonly">
        <shortdesc>All the insertion points in this text range.</shortdesc>
        <datatype>
          <type href="#/InsertionPoints">InsertionPoints</type>
        </datatype>
      </property>
      <property name="characterStyles" rwaccess="readonly">
        <shortdesc>List of referenced character styles in the text range.</shortdesc>
        <datatype>
          <type href="#/CharacterStyles">CharacterStyles</type>
        </datatype>
      </property>
      <property name="paragraphStyles" rwaccess="readonly">
        <shortdesc>List of referenced paragraph styles in the text range.</shortdesc>
        <datatype>
          <type href="#/ParagraphStyles">ParagraphStyles</type>
        </datatype>
      </property>
      <property name="characterAttributes" rwaccess="readonly">
        <shortdesc>The character properties for the text range.</shortdesc>
        <datatype>
          <type href="#/CharacterAttributes">CharacterAttributes</type>
        </datatype>
      </property>
      <property name="paragraphAttributes" rwaccess="readonly">
        <shortdesc>The paragraph properties for the text range.</shortdesc>
        <datatype>
          <type href="#/ParagraphAttributes">ParagraphAttributes</type>
        </datatype>
      </property>
      <property name="start">
        <shortdesc>Start index of the text range.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="end">
        <shortdesc>End index of the text range.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <method name="move">
        <shortdesc>Move the object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
      <method name="duplicate">
        <shortdesc>Duplicate this object.</shortdesc>
        <parameters>
          <parameter name="relativeObject">
            <datatype>
              <type>Object</type>
            </datatype>
          </parameter>
          <parameter name="insertionLocation">
            <datatype>
              <type href="#/ElementPlacement">ElementPlacement</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/TextRange">TextRange</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="select">
        <shortdesc>Select the text range.</shortdesc>
        <parameters>
          <parameter name="addToDocument" optional="true">
            <shortdesc>Whether to add the text range to the document text selection.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="deSelect">
        <shortdesc>Deselect the text range.</shortdesc>
      </method>
      <method name="getTextRunLength">
        <shortdesc>Get the length of the first text run.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </method>
      <method name="getParagraphLength">
        <shortdesc>Get the length of the first paragraph.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </method>
      <method name="changeCaseTo">
        <shortdesc>Change the capitalization of text.</shortdesc>
        <parameters>
          <parameter name="type">
            <shortdesc>The type of case.</shortdesc>
            <datatype>
              <type href="#/CaseChangeType">CaseChangeType</type>
            </datatype>
          </parameter>
        </parameters>
      </method>
    </elements>
  </classdef>
  <classdef name="InsertionPoint" dynamic="true">
    <shortdesc>A location between characters, used to insert new text objects.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="story" rwaccess="readonly">
        <shortdesc>The story of the text range.</shortdesc>
        <datatype>
          <type href="#/Story">Story</type>
        </datatype>
      </property>
      <property name="characters" rwaccess="readonly">
        <shortdesc>All the characters in this text range.</shortdesc>
        <datatype>
          <type href="#/Characters">Characters</type>
        </datatype>
      </property>
      <property name="words" rwaccess="readonly">
        <shortdesc>All the words in this text range.</shortdesc>
        <datatype>
          <type href="#/Words">Words</type>
        </datatype>
      </property>
      <property name="lines" rwaccess="readonly">
        <shortdesc>All the lines in this text range.</shortdesc>
        <datatype>
          <type href="#/Lines">Lines</type>
        </datatype>
      </property>
      <property name="paragraphs" rwaccess="readonly">
        <shortdesc>All the paragraphs in this text range.</shortdesc>
        <datatype>
          <type href="#/Paragraphs">Paragraphs</type>
        </datatype>
      </property>
      <property name="textRanges" rwaccess="readonly">
        <shortdesc>All the text in this text range.</shortdesc>
        <datatype>
          <type href="#/TextRanges">TextRanges</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="CharacterStyle" dynamic="true">
    <shortdesc>A named style that remembers character attributes.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The character style's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="characterAttributes" rwaccess="readonly">
        <shortdesc>The character properties for the text range.</shortdesc>
        <datatype>
          <type href="#/CharacterAttributes">CharacterAttributes</type>
        </datatype>
      </property>
      <method name="add">
        <shortdesc>Adds an element.</shortdesc>
        <datatype>
          <type href="#/CharacterStyle">CharacterStyle</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="applyTo">
        <shortdesc>Apply the character style to text object(s)</shortdesc>
        <parameters>
          <parameter name="textItem">
            <shortdesc>The text object(s) to apply the style to.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
          <parameter name="clearingOverrides" optional="true">
            <shortdesc>Whether to clear any text attributes before apply the style.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="clear">
        <shortdesc>Remove all the attributes from this character style.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="ParagraphStyle" dynamic="true">
    <shortdesc>A named style that remembers paragraph attributes.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The paragraph style's name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="characterAttributes" rwaccess="readonly">
        <shortdesc>The character properties for the text range.</shortdesc>
        <datatype>
          <type href="#/CharacterAttributes">CharacterAttributes</type>
        </datatype>
      </property>
      <property name="paragraphAttributes" rwaccess="readonly">
        <shortdesc>The paragraph properties for the text range.</shortdesc>
        <datatype>
          <type href="#/ParagraphAttributes">ParagraphAttributes</type>
        </datatype>
      </property>
      <method name="add">
        <shortdesc>Adds an element.</shortdesc>
        <datatype>
          <type href="#/ParagraphStyle">ParagraphStyle</type>
        </datatype>
      </method>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="applyTo">
        <shortdesc>Apply the paragraph style to text object(s)</shortdesc>
        <parameters>
          <parameter name="textItem">
            <shortdesc>The text object(s) to apply the style to.</shortdesc>
            <datatype>
              <type>any</type>
            </datatype>
          </parameter>
          <parameter name="clearingOverrides" optional="true">
            <shortdesc>Whether to clear any text attributes before apply the style.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
      </method>
      <method name="clear">
        <shortdesc>Remove all the attributes from this paragraph style.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="CharacterAttributes" dynamic="true">
    <shortdesc>Properties of a character.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="textFont">
        <shortdesc>The text font.</shortdesc>
        <datatype>
          <type href="#/TextFont">TextFont</type>
        </datatype>
      </property>
      <property name="size">
        <shortdesc>Font size in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="horizontalScale">
        <shortdesc>Character horizontal scaling factor expressed as a percentage (100 = 100%)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="verticalScale">
        <shortdesc>Character vertical scaling factor expressed as a percentage (100 = 100%)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="autoLeading">
        <shortdesc>Whether to use automatic leading.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="leading">
        <shortdesc>The amount of space between two lines of text (in points)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="tracking">
        <shortdesc>The tracking or range kerning amount in thousands of an em.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="baselineShift">
        <shortdesc>The amount of shift (in points) of the text baseline.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="rotation">
        <shortdesc>The character rotation angle (in degrees)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="kerningMethod">
        <shortdesc>The automatic kerning method to use.</shortdesc>
        <datatype>
          <type href="#/AutoKernType">AutoKernType</type>
        </datatype>
      </property>
      <property name="capitalization">
        <shortdesc>The case of text.</shortdesc>
        <datatype>
          <type href="#/FontCapsOption">FontCapsOption</type>
        </datatype>
      </property>
      <property name="baselinePosition">
        <shortdesc>The baseline position of text.</shortdesc>
        <datatype>
          <type href="#/FontBaselineOption">FontBaselineOption</type>
        </datatype>
      </property>
      <property name="openTypePosition">
        <shortdesc>The OpenType baseline position.</shortdesc>
        <datatype>
          <type href="#/FontOpenTypePositionOption">FontOpenTypePositionOption</type>
        </datatype>
      </property>
      <property name="ligature">
        <shortdesc>Whether the ligature should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="discretionaryLigature">
        <shortdesc>Whether the discretionary ligature should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="contextualLigature">
        <shortdesc>Whether the contextual ligature should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="fractions">
        <shortdesc>Whether the OpenType fractions should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="ordinals">
        <shortdesc>Whether the OpenType ordinals should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="swash">
        <shortdesc>Whether the OpenType swash should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="titling">
        <shortdesc>Whether the OpenType titling alternates should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="connectionForms">
        <shortdesc>Whether the OpenType connection forms should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="stylisticAlternates">
        <shortdesc>Whether the OpenType stylistic alternates should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="ornaments">
        <shortdesc>Whether the OpenType ornaments should be used.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="figureStyle">
        <shortdesc>Which figure style to use in OpenType font.</shortdesc>
        <datatype>
          <type href="#/FigureStyleType">FigureStyleType</type>
        </datatype>
      </property>
      <property name="proportionalMetrics">
        <shortdesc>Does the Japanese OpenType support proportional font?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="kana">
        <shortdesc>Does the Japanese OpenType support kana?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="italics">
        <shortdesc>Does the Japanese OpenType support italics?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="baselineDirection">
        <shortdesc>The Japanese text baseline direction.</shortdesc>
        <datatype>
          <type href="#/BaselineDirectionType">BaselineDirectionType</type>
        </datatype>
      </property>
      <property name="language">
        <shortdesc>The language of text.</shortdesc>
        <datatype>
          <type href="#/LanguageType">LanguageType</type>
        </datatype>
      </property>
      <property name="alternateGlyphs">
        <shortdesc>The alternate glyphs form.</shortdesc>
        <datatype>
          <type href="#/AlternateGlyphsForm">AlternateGlyphsForm</type>
        </datatype>
      </property>
      <property name="Tsume">
        <shortdesc>The percentage of space reduction around a Japanese character (100 = 100%)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="alignment">
        <shortdesc>The character alignment type.</shortdesc>
        <datatype>
          <type href="#/StyleRunAlignmentType">StyleRunAlignmentType</type>
        </datatype>
      </property>
      <property name="wariChuEnabled">
        <shortdesc>Whether WariChu is enabled.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="wariChuLines">
        <shortdesc>The number of Wari-Chu (multiple text lines fit into a space meant for one) lines.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="wariChuLineGap">
        <shortdesc>The Wari-Chu line gap.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="wariChuScale">
        <shortdesc>The Wari-Chu scale.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="wariChuCharactersBeforeBreak">
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="wariChuCharactersAfterBreak">
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="wariChuJustification">
        <datatype>
          <type href="#/WariChuJustificationType">WariChuJustificationType</type>
        </datatype>
      </property>
      <property name="tateChuYokoVertical">
        <shortdesc>The Tate-Chu-Yoko vertical adjustment in points.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="tateChuYokoHorizontal">
        <shortdesc>The Tate-Chu-Yoko horizontal adjustment in points.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="akiLeft">
        <shortdesc>The em amount of left aki.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="akiRight">
        <shortdesc>The em amount of right aki amount.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="noBreak">
        <shortdesc>Whether line breaks are allowed.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="fillColor">
        <shortdesc>The color of the text fill.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="strokeColor">
        <shortdesc>The color of the text stroke.</shortdesc>
        <datatype>
          <type href="#/Color">Color</type>
        </datatype>
      </property>
      <property name="overprintStroke">
        <shortdesc>Whether to overprint the stroke of the text.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="overprintFill">
        <shortdesc>Whether to overprint the fill of the text.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strokeWeight">
        <shortdesc>Line width of stroke.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="underline">
        <shortdesc>Whether to underline the text.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strikeThrough">
        <shortdesc>Whether to draw a strike through line over the text.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="kashidas">
        <shortdesc>Kashidas attribute.</shortdesc>
        <datatype>
          <type href="#/KashidasType">KashidasType</type>
        </datatype>
      </property>
      <property name="dirOverride">
        <shortdesc>Direction override attribute.</shortdesc>
        <datatype>
          <type href="#/DirOverrideType">DirOverrideType</type>
        </datatype>
      </property>
      <property name="digitSet">
        <shortdesc>Digit set attribute.</shortdesc>
        <datatype>
          <type href="#/DigitSetType">DigitSetType</type>
        </datatype>
      </property>
      <property name="diacVPos">
        <shortdesc>Diacritics positioning attribute.</shortdesc>
        <datatype>
          <type href="#/DiacVPosType">DiacVPosType</type>
        </datatype>
      </property>
      <property name="diacXOffset">
        <shortdesc>Diacritics x offset attribute.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="diacYOffset">
        <shortdesc>Diacritics y offset attribute.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="justificationAlternates">
        <shortdesc>Justification alternates attribute.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="stylisticSets">
        <shortdesc>Stylistic sets attribute.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="ParagraphAttributes" dynamic="true">
    <shortdesc>Properties of a paragraph.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="justification">
        <shortdesc>Paragraph justification.</shortdesc>
        <datatype>
          <type href="#/Justification">Justification</type>
        </datatype>
      </property>
      <property name="firstLineIndent">
        <shortdesc>First line left indent expressed in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="leftIndent">
        <shortdesc>Left indent of margin expressed in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="rightIndent">
        <shortdesc>Right indent of margin expressed in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="spaceBefore">
        <shortdesc>Spacing before paragraph in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="spaceAfter">
        <shortdesc>Spacing after paragraph in points.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="hyphenation">
        <shortdesc>Is hyphenation enabled for the paragraph?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="minimumHyphenatedWordSize">
        <shortdesc>Minimum hyphenated word size.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="minimumBeforeHyphen">
        <shortdesc>Minimum number of characters before a hyphen.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="minimumAfterHyphen">
        <shortdesc>Minimum number of characters after a hyphen.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="maximumConsecutiveHyphens">
        <shortdesc>Maximum number of consecutive hypenated lines.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="hyphenationZone">
        <shortdesc>Size of the hyphenation zone.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="hyphenateCapitalizedWords">
        <shortdesc>Is hyphenation enabled for the capitalized words?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="hyphenationPreference">
        <shortdesc>Hyphenation preference scale for better spacing (0) or fewer hyphens (1)</shortdesc>
        <datatype>
          <type>number</type>
          <min>0</min>
          <max>1</max>
        </datatype>
      </property>
      <property name="desiredWordSpacing">
        <shortdesc>Desired word spacing expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maximumWordSpacing">
        <shortdesc>Maximum word spacing expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="minimumWordSpacing">
        <shortdesc>Minimum word spacing expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="desiredLetterSpacing">
        <shortdesc>Desired letter spacing expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maximumLetterSpacing">
        <shortdesc>Maximum letter spacing expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="minimumLetterSpacing">
        <shortdesc>Minimum letter spacing expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="desiredGlyphScaling">
        <shortdesc>Desired glyph scaling expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="maximumGlyphScaling">
        <shortdesc>Maximum glyph scaling expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="minimumGlyphScaling">
        <shortdesc>Minimum glyph scaling expressed as a percentage.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="singleWordJustification">
        <shortdesc>Single word justification.</shortdesc>
        <datatype>
          <type href="#/Justification">Justification</type>
        </datatype>
      </property>
      <property name="autoLeadingAmount">
        <shortdesc>Auto leading amount (in percentage)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="leadingType">
        <shortdesc>Auto leading type.</shortdesc>
        <datatype>
          <type href="#/AutoLeadingType">AutoLeadingType</type>
        </datatype>
      </property>
      <property name="tabStops">
        <shortdesc>Tab stop settings.</shortdesc>
        <datatype>
          <type href="#/TabStopInfo">TabStopInfo</type>
          <array />
        </datatype>
      </property>
      <property name="romanHanging">
        <shortdesc>Is Roman hanging punctuation enabled?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="bunriKinshi">
        <shortdesc>Is BunriKinshi enabled?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="burasagariType">
        <shortdesc>The Burasagari type.</shortdesc>
        <datatype>
          <type href="#/BurasagariTypeEnum">BurasagariTypeEnum</type>
        </datatype>
      </property>
      <property name="kinsokuOrder">
        <shortdesc>The preferred Kinsoku order.</shortdesc>
        <datatype>
          <type href="#/KinsokuOrderEnum">KinsokuOrderEnum</type>
        </datatype>
      </property>
      <property name="kurikaeshiMojiShori">
        <shortdesc>Is KurikaeshiMojiShori enabled?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="kinsoku">
        <shortdesc>The Kinsoku Shori name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="mojikumi">
        <shortdesc>The Mojikumi name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="everyLineComposer">
        <shortdesc>Whether to enable every line composer (as opposed to single line composer)?</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="paragraphDirection">
        <shortdesc>Main writing direction attribute.</shortdesc>
        <datatype>
          <type href="#/ParagraphDirectionType">ParagraphDirectionType</type>
        </datatype>
      </property>
      <property name="kashidaWidth">
        <shortdesc>The Kashida Width attribute.</shortdesc>
        <datatype>
          <type href="#/KashidaWidthType">KashidaWidthType</type>
        </datatype>
      </property>
      <property name="composerEngine">
        <shortdesc>Composer engine attribute.</shortdesc>
        <datatype>
          <type href="#/ComposerEngineType">ComposerEngineType</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="OpenOptionsPhotoshop" dynamic="true">
    <shortdesc>Options which are applied when opening or placing a Photoshop file.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="preserveLayers">
        <shortdesc>Should layers be Preserve when the document is converted (default: true)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="preserveImageMaps">
        <shortdesc>Should image maps be preserved when the document is converted (default: true)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="preserveSlices">
        <shortdesc>Should slices be preserved when the document is converted (default: true)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="preserveHiddenLayers">
        <shortdesc>Should hidden layers be preserved when the document is converted (default: false)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="layerComp">
        <shortdesc>Should use the specified LayerComp.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="OpenOptionsPDF" dynamic="true">
    <shortdesc>Options which may be supplied when opening a PDF file.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="pageToOpen">
        <shortdesc>What page should be used when opening a multipage document (default: 1)</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="pDFCropToBox">
        <shortdesc>What box should be used when placing a multipage document (default: PDF media box)</shortdesc>
        <datatype>
          <type href="#/PDFBoxType">PDFBoxType</type>
        </datatype>
      </property>
      <property name="pageRangeToOpen">
        <shortdesc>Range of pages when opening a multipage document [possible values: 'all', range(for example: '1,2,3-5,8')]</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="placeAsLinks">
        <shortdesc>Import PDF pages as links for optimal performance (default: true for PageRangeToOpen=all; false otherwise)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="OpenOptionsAutoCAD" dynamic="true">
    <shortdesc>Options which may be supplied when opening a AutoCAD file.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="globalScaleOption">
        <shortdesc>How to scale the AutoCAD drawing on import (default: Fit Artboard)</shortdesc>
        <datatype>
          <type href="#/AutoCADGlobalScaleOption">AutoCADGlobalScaleOption</type>
        </datatype>
      </property>
      <property name="globalScalePercent">
        <shortdesc>Percentage scaling to apply globally on the AutoCAD drawing (default: 1.0)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="unitScaleRatio">
        <shortdesc>Ratio by which to scale while mapping the units (default: 1.0)</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="unit">
        <shortdesc>Units to which to map (default: Millimeters)</shortdesc>
        <datatype>
          <type href="#/AutoCADUnit">AutoCADUnit</type>
        </datatype>
      </property>
      <property name="selectedLayoutName">
        <shortdesc>Name of layout in the AutoCAD drawing to import.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="centerArtwork">
        <shortdesc>To center the created artwork on the artboard (default: true)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="mergeLayers">
        <shortdesc>To merge the layers of the artwork (default: false)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="scaleLineweights">
        <shortdesc>To scale lineweights by the same amount as rest of the drawing (default: false)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="TracingOptions" dynamic="true">
    <shortdesc>Tracing options that guide the tracing process.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="preset" rwaccess="readonly">
        <shortdesc>The name of the preset in use. Read-only.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="viewMode">
        <shortdesc>The visualization mode.</shortdesc>
        <datatype>
          <type href="#/ViewType">ViewType</type>
        </datatype>
      </property>
      <property name="tracingMode">
        <shortdesc>The tracing mode: color, gray, black and white.</shortdesc>
        <datatype>
          <type href="#/TracingModeType">TracingModeType</type>
        </datatype>
      </property>
      <property name="tracingColorTypeValue">
        <shortdesc>Color Type used for tracing, TracingLimitedColor or TracingFullColor .</shortdesc>
        <datatype>
          <type href="#/TracingColorType">TracingColorType</type>
        </datatype>
      </property>
      <property name="palette">
        <shortdesc>The color palette (Library) name used for tracing. Use 'Document Library' or any other imported library name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="colorGroup">
        <shortdesc>The color group name used for tracing. Use 'All' or any color group name available in color Palette (library).</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="tracingColors">
        <shortdesc>Maximum number of colors allowed for tracing when TracingColorTypeValue is TracingLimitedColor.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="colorFidelity">
        <shortdesc>ColorFidelity when TracingColorTypeValue is TracingFullColor.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="threshold">
        <shortdesc>The threshold value for a black and white mode tracing.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
          <max>256</max>
        </datatype>
      </property>
      <property name="grayLevels">
        <shortdesc>The gray levels for a grayscale mode tracing..</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
          <min>1</min>
          <max>256</max>
        </datatype>
      </property>
      <property name="pathFidelity">
        <shortdesc>Path fidelity for tracing.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="cornerFidelity">
        <shortdesc>Corner fidelity for tracing.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="noiseFidelity">
        <shortdesc>Specifies minimum area of pixels to be vectorized.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="tracingMethod">
        <shortdesc>Method for tracing, either abutting or adjoining paths.</shortdesc>
        <datatype>
          <type href="#/TracingMethodType">TracingMethodType</type>
        </datatype>
      </property>
      <property name="fills">
        <shortdesc>Tracing with fills. Fills, Strokes or both must be on.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="strokes">
        <shortdesc>Tracing with strokes. Fills, Strokes or both must be on.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="maxStrokeWeight">
        <shortdesc>Maximum stroke weight (stroke only).</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="snapCurveToLines">
        <shortdesc>Controls whether to snap curve to lines.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="ignoreWhite">
        <shortdesc>Controls whether to ignore white fill color. Works only if TracingMethod is TracingMethodAbutting and mode is Black and white.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <method name="loadFromPreset">
        <shortdesc>Load options from preset.</shortdesc>
        <parameters>
          <parameter name="presetName">
            <shortdesc>The name of the preset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
      <method name="storeToPreset">
        <shortdesc>Store options to a preset kAiVectorizeSuite. Will overwrite an existing (unlocked) preset if names match.</shortdesc>
        <parameters>
          <parameter name="presetName">
            <shortdesc>The name of the preset.</shortdesc>
            <datatype>
              <type>string</type>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type>bool</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="TracingObject" dynamic="true">
    <shortdesc>A tracing object.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="sourceArt" rwaccess="readonly">
        <shortdesc>The source art used when creating a new tracing object.</shortdesc>
        <datatype>
          <type href="#/PageItem">PageItem</type>
        </datatype>
      </property>
      <property name="tracingOptions" rwaccess="readonly">
        <shortdesc>The options used when tracing the artwork.</shortdesc>
        <datatype>
          <type href="#/TracingOptions">TracingOptions</type>
        </datatype>
      </property>
      <property name="pathCount" rwaccess="readonly">
        <shortdesc>The number of paths in the tracing result.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="anchorCount" rwaccess="readonly">
        <shortdesc>The number of anchors in the tracing result.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="usedColorCount" rwaccess="readonly">
        <shortdesc>The number of colors used in the tracing result.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <method name="releaseTracing">
        <shortdesc>Release the source artwork for the tracing object. Deletes this tracing object.</shortdesc>
        <datatype>
          <type href="#/PageItem">PageItem</type>
        </datatype>
      </method>
      <method name="expandTracing">
        <shortdesc>Expand the tracing to paths. Deletes this tracing object.</shortdesc>
        <parameters>
          <parameter name="viewed" optional="true">
            <shortdesc>Expand as viewed with the raster and vector view modes.</shortdesc>
            <datatype>
              <type>bool</type>
              <value>false</value>
            </datatype>
          </parameter>
        </parameters>
        <datatype>
          <type href="#/GroupItem">GroupItem</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Asset" dynamic="true">
    <shortdesc>An (exportable) asset.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="assetID" rwaccess="readonly">
        <shortdesc>The UID for the asset which is unique within a document.</shortdesc>
        <datatype>
          <type href="#/Int32">Int32</type>
        </datatype>
      </property>
      <property name="assetName">
        <shortdesc>Name of the asset.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
      <method name="getNormalizedName">
        <shortdesc>Gets the normalized name without special characters, such that it can be used as a file name.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </method>
    </elements>
  </classdef>
  <classdef name="Artboard" dynamic="true">
    <shortdesc>An artboard object.</shortdesc>
    <elements type="instance">
      <property name="parent" rwaccess="readonly">
        <shortdesc>The object's container.</shortdesc>
        <datatype>
          <type>Object</type>
        </datatype>
      </property>
      <property name="typename" rwaccess="readonly">
        <shortdesc>The class name of the object.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <property name="artboardRect">
        <shortdesc>Size and position of artboard.</shortdesc>
        <datatype>
          <type href="#/Rect">Rect</type>
        </datatype>
      </property>
      <property name="rulerPAR">
        <shortdesc>Pixel aspect ratio, used in ruler visualization if the units are pixels.</shortdesc>
        <datatype>
          <type>number</type>
          <min>0.1</min>
          <max>10.0</max>
        </datatype>
      </property>
      <property name="showCenter">
        <shortdesc>Show center mark.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="showCrossHairs">
        <shortdesc>Show cross hairs.</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="showSafeAreas">
        <shortdesc>Show title and action safe areas (for video)</shortdesc>
        <datatype>
          <type>bool</type>
        </datatype>
      </property>
      <property name="rulerOrigin">
        <shortdesc>Ruler origin of artboard.It is relative to left-bottom corner of the Artboard.</shortdesc>
        <datatype>
          <type href="#/Point">Point</type>
        </datatype>
      </property>
      <property name="name">
        <shortdesc>The name of the artboard.</shortdesc>
        <datatype>
          <type>string</type>
        </datatype>
      </property>
      <method name="remove">
        <shortdesc>Deletes this object.</shortdesc>
      </method>
      <method name="removeAll">
        <shortdesc>Deletes all elements.</shortdesc>
      </method>
    </elements>
  </classdef>
  <classdef name="Point" dynamic="true">
    <shortdesc>Describes a point. This class is also a two-element collection.</shortdesc>
    <elements type="instance">
      <property name="x">
        <shortdesc>The left coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="y">
        <shortdesc>The top coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="left">
        <shortdesc>The left coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="top">
        <shortdesc>The top coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>The array length.</shortdesc>
        <datatype>
          <type>number</type>
          <value>2</value>
        </datatype>
      </property>
    </elements>
  </classdef>
  <classdef name="Rectangle" dynamic="true">
    <shortdesc>Describes a rectangle. This class is also a four-element collection.</shortdesc>
    <elements type="instance">
      <property name="x">
        <shortdesc>The left coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="y">
        <shortdesc>The top coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="width">
        <shortdesc>The width.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="height">
        <shortdesc>The height.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="left">
        <shortdesc>The left coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="right">
        <shortdesc>The right coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="top">
        <shortdesc>The top coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="bottom">
        <shortdesc>The bottom coordinate.</shortdesc>
        <datatype>
          <type>number</type>
        </datatype>
      </property>
      <property name="length" rwaccess="readonly">
        <shortdesc>The array length.</shortdesc>
        <datatype>
          <type>number</type>
          <value>4</value>
        </datatype>
      </property>
    </elements>
  </classdef>
</package>
